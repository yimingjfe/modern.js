"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[713],{44993:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var o=n(52983);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,o,s=function(e,t){if(null==e)return{};var n,o,s={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var p=o.createContext({}),l=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return o.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,s=e.mdxType,r=e.originalType,p=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),d=l(n),f=s,g=d["".concat(p,".").concat(f)]||d[f]||c[f]||r;return n?o.createElement(g,i(i({ref:t},u),{},{components:n})):o.createElement(g,i({ref:t},u))}));function f(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=n.length,i=new Array(r);i[0]=d;var a={};for(var p in t)hasOwnProperty.call(t,p)&&(a[p]=t[p]);a.originalType=e,a.mdxType="string"==typeof e?e:s,i[1]=a;for(var l=2;l<r;l++)i[l]=n[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9706:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>p,default:()=>f,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var o=n(18249),s=(n(52983),n(44993));const r={toc:[{value:"Function Type",id:"function-type",level:3},{value:"Object Type",id:"object-type",level:3},{value:"Util Functions",id:"util-functions",level:3},{value:"addPlugins",id:"addplugins",level:4}]};function i(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,o.Z)({},r,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Type: ",(0,s.kt)("inlineCode",{parentName:"li"},"Object | Function")),(0,s.kt)("li",{parentName:"ul"},"Default:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"const defaultOptions = {\n  postcssOptions: {\n    plugins: [\n      require('postcss-flexbugs-fixes'),\n      require('postcss-custom-properties'),\n      require('postcss-initial'),\n      require('postcss-page-break'),\n      require('postcss-font-variant'),\n      require('postcss-media-minmax'),\n      require('postcss-nesting'),\n      require('autoprefixer')({\n        flexbox: 'no-2009',\n      }),\n    ],\n    // CSS Source Map enabled by default in development environment\n    sourceMap: isDev,\n  },\n};\n")),(0,s.kt)("p",null,"Builder integrates PostCSS by default, you can configure ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/webpack-contrib/postcss-loader"},"postcss-loader")," through ",(0,s.kt)("inlineCode",{parentName:"p"},"tools.postcss"),"."),(0,s.kt)("h3",{id:"function-type"},"Function Type"),(0,s.kt)("p",null,"When the value is a Function, the internal default config is passed as the first parameter, and the config object can be modified directly without returning, or an object can be returned as the final result; the second parameter is a set of tool functions for modifying the postcss-loader config."),(0,s.kt)("p",null,"For example, you need to add a PostCSS plugin on the basis of the original plugin, and push a new plugin to the postcssOptions.plugins array:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export default {\n  tools: {\n    postcss: opts => {\n      opts.postcssOptions.plugins.push(require('postcss-px-to-viewport'));\n    },\n  },\n};\n")),(0,s.kt)("p",null,"When you need to pass parameters to the PostCSS plugin, you can pass them in by function parameters:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"export default {\n  tools: {\n    postcss: opts => {\n      const viewportPlugin = require('postcss-px-to-viewport')({\n        viewportWidth: 375,\n      });\n      opts.postcssOptions.plugins.push(viewportPlugin);\n    },\n  },\n};\n")),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"tools.postcss")," can return a config object and completely replace the default config:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"export default {\n  tools: {\n    postcss: () => {\n      return {\n        postcssOptions: {\n          plugins: [require('postcss-px-to-viewport')],\n        },\n      };\n    },\n  },\n};\n")),(0,s.kt)("h3",{id:"object-type"},"Object Type"),(0,s.kt)("p",null,"When this value is an Object, it is merged with the default config via ",(0,s.kt)("inlineCode",{parentName:"p"},"Object.assign"),". Note that ",(0,s.kt)("inlineCode",{parentName:"p"},"Object.assign")," is a shallow copy and will completely overwrite the built-in ",(0,s.kt)("inlineCode",{parentName:"p"},"presets")," or ",(0,s.kt)("inlineCode",{parentName:"p"},"plugins")," array, please use it with caution."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"export default {\n  tools: {\n    postcss: {\n      // Because `Object.assign` is used, the default postcssOptions will be overwritten.\n      postcssOptions: {\n        plugins: [require('postcss-px-to-viewport')],\n      },\n    },\n  },\n};\n")),(0,s.kt)("h3",{id:"util-functions"},"Util Functions"),(0,s.kt)("h4",{id:"addplugins"},"addPlugins"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Type: ",(0,s.kt)("inlineCode",{parentName:"li"},"(plugins: PostCSSPlugin | PostCSSPlugin[]) => void"))),(0,s.kt)("p",null,"For adding additional PostCSS plugins, You can pass in a single PostCSS plugin, or an array of PostCSS plugins."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"export default {\n  tools: {\n    postcss: (config, { addPlugins }) => {\n      // Add a PostCSS Plugin\n      addPlugins(require('postcss-preset-env'));\n      // Add multiple PostCSS Plugins\n      addPlugins([require('postcss-preset-env'), require('postcss-import')]);\n    },\n  },\n};\n")),(0,s.kt)("admonition",{type:"tip"},(0,s.kt)("p",{parentName:"admonition"},"Builder uses the PostCSS v8 version. When you use third-party PostCSS plugins, please pay attention to whether the PostCSS version is compatible. Some legacy plugins may not work in PostCSS v8.")))}i.isMDXComponent=!0;const a={title:"tools.postcss",sidebar_label:"postcss"},p=void 0,l={unversionedId:"configure/app/tools/postcss",id:"configure/app/tools/postcss",title:"tools.postcss",description:"This configuration is Modern.js Builder configuration, more detail can see tools.postcss\u3002",source:"@site/../../packages/toolkit/main-doc/en/docusaurus-plugin-content-docs/current/configure/app/tools/postcss.md",sourceDirName:"configure/app/tools",slug:"/configure/app/tools/postcss",permalink:"/v2/en/docs/configure/app/tools/postcss",draft:!1,tags:[],version:"current",frontMatter:{title:"tools.postcss",sidebar_label:"postcss"},sidebar:"configsAppSidebar",previous:{title:"minifyCss",permalink:"/v2/en/docs/configure/app/tools/minify-css"},next:{title:"pug",permalink:"/v2/en/docs/configure/app/tools/pug"}},u={},c=[],d={toc:c};function f(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("admonition",{title:"BUILDER",type:"info"},(0,s.kt)("p",{parentName:"admonition"},"This configuration is Modern.js Builder configuration, more detail can see ",(0,s.kt)("a",{parentName:"p",href:"https://modernjs.dev/builder/en/api/config-tools.html#tools-postcss"},"tools.postcss"),"\u3002")),(0,s.kt)(i,{mdxType:"Main"}))}f.isMDXComponent=!0}}]);