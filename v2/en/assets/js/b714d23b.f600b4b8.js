"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3650,8393],{44993:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>u});var o=n(52983);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),c=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),m=c(n),u=a,f=m["".concat(s,".").concat(u)]||m[u]||d[u]||r;return n?o.createElement(f,i(i({ref:t},l),{},{components:n})):o.createElement(f,i({ref:t},l))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=m;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var c=2;c<r;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},30640:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>p,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var o=n(18249),a=(n(52983),n(44993)),r=n(55930);const i={sidebar_position:5,title:"connect"},p=void 0,s={unversionedId:"apis/app/runtime/model/connect",id:"apis/app/runtime/model/connect",title:"connect",description:"The original type of Reduck is complex. The following type definition shows the simplified type information. For the original type, see connect\u3002",source:"@site/../../packages/toolkit/main-doc/en/docusaurus-plugin-content-docs/current/apis/app/runtime/model/connect.md",sourceDirName:"apis/app/runtime/model",slug:"/apis/app/runtime/model/connect",permalink:"/v2/en/docs/apis/app/runtime/model/connect",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,title:"connect"},sidebar:"apisAppSidebar",previous:{title:"useLocalModel",permalink:"/v2/en/docs/apis/app/runtime/model/use-local-model"},next:{title:"Auto actions",permalink:"/v2/en/docs/apis/app/runtime/model/auto-actions"}},c={},l=[{value:"Function Signature",id:"function-signature",level:2},{value:"Input",id:"input",level:3},{value:"Return Type",id:"return-type",level:3},{value:"Example",id:"example",level:2},{value:"Basic",id:"basic",level:3},{value:"Select State &amp; Actions",id:"select-state--actions",level:3},{value:"Forwarding Ref",id:"forwarding-ref",level:3}],d={toc:l};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)(r.default,{mdxType:"ReduckTip"}),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"The original type of Reduck is complex. The following type definition shows the simplified type information. For the original type, see ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/modern-js-dev/reduck/blob/main/packages/react/src/connect.ts"},(0,a.kt)("strong",{parentName:"a"},"connect")),"\u3002")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Connect")," is the same as ",(0,a.kt)("inlineCode",{parentName:"p"},"useModel")," and is the corresponding HOC-style API. It is recommended to use the Hook-style ",(0,a.kt)("inlineCode",{parentName:"p"},"useModel")," first."),(0,a.kt)("h2",{id:"function-signature"},"Function Signature"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"type SelectStateToProps = (...modelStates: State[], ownProps? :any) => PlainObject;\ntype SelectActionsToProps = (...modelActions: Actions[], ownProps? :any) => PlainObject;\n\nfunction connect(models: Model, options?: ConnectOptions);\nfunction connect(\n  models: [...Model[], SelectStateToProps?, SelectActionsToProps?],\n  options?: ConnectOptions,\n);\n")),(0,a.kt)("h3",{id:"input"},"Input"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"models"),": passed one or more Models. When ",(0,a.kt)("inlineCode",{parentName:"p"},"models")," is an array type parameter, the last two params can be a function for filtering State (",(0,a.kt)("inlineCode",{parentName:"p"},"SelectStateToProps")," type) and a function for filtering Actions (",(0,a.kt)("inlineCode",{parentName:"p"},"SelectActionsToProps")," type)."),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"SelectStateToProps"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"modelStates")," is an array of the State of the passed Model object, ",(0,a.kt)("inlineCode",{parentName:"p"},"ownProps")," is the props received by current component. The data returned by ",(0,a.kt)("inlineCode",{parentName:"p"},"SelectStateToProps")," is passed to the props of the component. When the ",(0,a.kt)("inlineCode",{parentName:"p"},"SelectStateToProps")," parameter is not passed in ",(0,a.kt)("inlineCode",{parentName:"p"},"models"),", the States of all Models are merged and passed to the props of the component.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"SelectActionsToProps"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"modelActions")," is an array of the Action of the passed Model object, ",(0,a.kt)("inlineCode",{parentName:"p"},"ownProps")," is the props received by current component. returned by ",(0,a.kt)("inlineCode",{parentName:"p"},"SelectActionsToProps")," is passed to the props of the component. When the ",(0,a.kt)("inlineCode",{parentName:"p"},"SelectActionsToProps")," parameter is not passed in ",(0,a.kt)("inlineCode",{parentName:"p"},"models"),", the Action of all Models are merged and passed to the props of the component.")))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"options"),": Optional parameter for auxiliary configuration. Currently supports setting ",(0,a.kt)("inlineCode",{parentName:"p"},"forwardRef"),", which is used to control whether to forward the ",(0,a.kt)("inlineCode",{parentName:"p"},"ref")," of the component. The default value is ",(0,a.kt)("inlineCode",{parentName:"p"},"false"),", which means that the ",(0,a.kt)("inlineCode",{parentName:"p"},"ref")," is not forwarded. Set to ",(0,a.kt)("inlineCode",{parentName:"p"},"{ forwardRef: true }"),", which means to forward ",(0,a.kt)("inlineCode",{parentName:"p"},"ref"),"."))),(0,a.kt)("h3",{id:"return-type"},"Return Type"),(0,a.kt)("p",null,"Returns a HOC: receives an component, returns a component with extra State and Actions injected on ",(0,a.kt)("inlineCode",{parentName:"p"},"props"),"."),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("h3",{id:"basic"},"Basic"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const modelA = model('modelA').define({\n  state: {\n    a: 1,\n  },\n  actions: {\n    incA(state) {\n      return {\n        ...state,\n        a: state.a + 1,\n      };\n    },\n  },\n});\n\nconst modelB = model('modelB').define({\n  state: {\n    b: 10,\n  },\n  actions: {\n    incB(state) {\n      return {\n        ...state,\n        b: state.b + 1,\n      };\n    },\n  },\n});\n\nfunction Test(props) {\n  props.incA(); // call modelA \u7684 action\n  props.incB(); // call modelB \u7684 action\n\n  props.a; // get modelA \u7684 state: a\n  props.b; // get modelB \u7684 state: b\n}\n\nexport default connect([modelA, modelB])(Test);\n")),(0,a.kt)("h3",{id:"select-state--actions"},"Select State & Actions"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"function Test(props) {\n  props.incAll();\n  props.c;\n}\n\nconst stateSelector = (stateA, stateB) => ({\n  ...stateA,\n  ...stateB,\n  c: stateA.a + stateA.b,\n});\nconst actionsSelector = (actionsA, actionsB) => ({\n  ...actionsA,\n  ...actionsB,\n  incAll: () => {\n    actionsA.incA();\n    actionsB.incB();\n  },\n});\n\nexport default connect([modelA, modelB, stateSelector, actionsSelector])(Test);\n")),(0,a.kt)("h3",{id:"forwarding-ref"},"Forwarding Ref"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { useRef, forwardRef } from 'react';\n\nfunction Test(props, ref) {\n  const { a, b } = props;\n\n  return (\n    <div ref={ref}>\n      <span>{a}</span>\n      <span>{b}</span>\n    </div>\n  );\n}\n\nconst TestWrapper = connect([modelA, modelB], { forwardRef: true })(\n  forwardRef(Test),\n);\n\nfunction App() {\n  const testRef = useRef();\n\n  return <TestWrapper ref={testRef} />;\n}\n")))}m.isMDXComponent=!0},55930:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>p,toc:()=>c});var o=n(18249),a=(n(52983),n(44993));const r={},i=void 0,p={unversionedId:"components/reduck-tip",id:"components/reduck-tip",title:"reduck-tip",description:"By default, the export package name for all APIs in this section is: @modern-js/runtime/model.",source:"@site/../../packages/toolkit/main-doc/en/docusaurus-plugin-content-docs/current/components/reduck-tip.md",sourceDirName:"components",slug:"/components/reduck-tip",permalink:"/v2/en/docs/components/reduck-tip",draft:!1,tags:[],version:"current",frontMatter:{}},s={},c=[],l={toc:c};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("admonition",{title:"information",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"By default, the export package name for all APIs in this section is: ",(0,a.kt)("inlineCode",{parentName:"p"},"@modern-js/runtime/model"),"."),(0,a.kt)("p",{parentName:"admonition"},"If Reduck is integrated separately from Modern.js, the export package name is: ",(0,a.kt)("inlineCode",{parentName:"p"},"@modern-js-reduck/react"),".")))}d.isMDXComponent=!0}}]);