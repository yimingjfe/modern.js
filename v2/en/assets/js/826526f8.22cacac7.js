"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7887],{44993:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var r=n(52983);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),c=s(n),m=a,k=c["".concat(p,".").concat(m)]||c[m]||u[m]||l;return n?r.createElement(k,o(o({ref:t},d),{},{components:n})):r.createElement(k,o({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=c;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var s=2;s<l;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},25771:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>p,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var r=n(18249),a=(n(52983),n(44993));const l={toc:[{value:"Options",id:"options",level:3},{value:"after",id:"after",level:4},{value:"before",id:"before",level:4},{value:"client",id:"client",level:4},{value:"devMiddleware",id:"devmiddleware",level:4},{value:"headers",id:"headers",level:4},{value:"historyApiFallback",id:"historyapifallback",level:4},{value:"hot",id:"hot",level:4},{value:"https",id:"https",level:4},{value:"liveReload",id:"livereload",level:4},{value:"setupMiddlewares",id:"setupmiddlewares",level:4},{value:"proxy",id:"proxy",level:4},{value:"watch",id:"watch",level:4}]};function o(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"Object")),(0,a.kt)("li",{parentName:"ul"},"Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"{}"))),(0,a.kt)("p",null,"The config of DevServer can be modified through ",(0,a.kt)("inlineCode",{parentName:"p"},"tools.devServer"),"."),(0,a.kt)("h3",{id:"options"},"Options"),(0,a.kt)("h4",{id:"after"},"after"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"Array")),(0,a.kt)("li",{parentName:"ul"},"Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"[]"))),(0,a.kt)("p",null,"Provides the ability to execute custom middleware after all other middleware internally within the server."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"export default {\n  tools: {\n    devServer: {\n      after: [\n        async (req, res, next) => {\n          console.log('after dev middleware');\n          next();\n        },\n      ],\n    },\n  },\n};\n")),(0,a.kt)("h4",{id:"before"},"before"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"Array")),(0,a.kt)("li",{parentName:"ul"},"Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"[]"))),(0,a.kt)("p",null,"Provides the ability to execute custom middleware prior to all other middleware internally within the server."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"export default {\n  tools: {\n    devServer: {\n      before: [\n        async (req, res, next) => {\n          console.log('before dev middleware');\n          next();\n        },\n      ],\n    },\n  },\n};\n")),(0,a.kt)("h4",{id:"client"},"client"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Type:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"{\n    /** The path which the middleware is serving the event stream on */\n    path?: string;\n    /** Specify a port number to listen for requests on */\n    port?: string;\n    /** Specify a host to use */\n    host?: string;\n}\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Default:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"{\n    path: '/webpack-hmr',\n    port: '8080',\n    host: networkAddress || 'localhost',\n}\n")),(0,a.kt)("p",null,"The config of hmr client."),(0,a.kt)("h4",{id:"devmiddleware"},"devMiddleware"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Type:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"{\n  writeToDisk: boolean | ((filename: string) => boolean);\n}\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Default:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"{\n  writeToDisk: (file: string) => !file.includes('.hot-update.'),\n}\n")),(0,a.kt)("p",null,"The config of devMiddleware. Current options is the subset of ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/webpack/webpack-dev-middleware"},"webpack-dev-middleware"),"."),(0,a.kt)("h4",{id:"headers"},"headers"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"Record<string, string>")),(0,a.kt)("li",{parentName:"ul"},"Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"undefined"))),(0,a.kt)("p",null,"Adds headers to all responses."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"export default {\n  tools: {\n    devServer: {\n      headers: {\n        'X-Custom-Foo': 'bar',\n      },\n    },\n  },\n};\n")),(0,a.kt)("h4",{id:"historyapifallback"},"historyApiFallback"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"boolean | ConnectHistoryApiFallbackOptions")),(0,a.kt)("li",{parentName:"ul"},"Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"false"))),(0,a.kt)("p",null,"The index.html page will likely have to be served in place of any 404 responses. Enable ",(0,a.kt)("inlineCode",{parentName:"p"},"devServer.historyApiFallback")," by setting it to ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"export default {\n  tools: {\n    devServer: {\n      historyApiFallback: true,\n    },\n  },\n};\n")),(0,a.kt)("p",null,"For more options and information, see the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/bripkens/connect-history-api-fallback"},"connect-history-api-fallback")," documentation."),(0,a.kt)("h4",{id:"hot"},"hot"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"boolean")),(0,a.kt)("li",{parentName:"ul"},"Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"true"))),(0,a.kt)("p",null,"Enable ",(0,a.kt)("a",{parentName:"p",href:"https://webpack.js.org/concepts/hot-module-replacement/"},"Hot Module Replacement")," feature."),(0,a.kt)("h4",{id:"https"},"https"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"boolean | { key: string; cert: string }")),(0,a.kt)("li",{parentName:"ul"},"Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"false"))),(0,a.kt)("p",null,"By default, DevServer will be served over HTTP. It can optionally be served over HTTPS by setting ",(0,a.kt)("inlineCode",{parentName:"p"},"devServer.https")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),", and will disable the HTTP server."),(0,a.kt)("p",null,"You can also manually pass in the certificate and corresponding private key required by the HTTPS server:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"export default {\n  tools: {\n    devServer: {\n      https: {\n        key: fs.readFileSync('certificates/private.pem'),\n        cert: fs.readFileSync('certificates/public.pem'),\n      },\n    },\n  },\n};\n")),(0,a.kt)("h4",{id:"livereload"},"liveReload"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"boolean")),(0,a.kt)("li",{parentName:"ul"},"Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"true"))),(0,a.kt)("p",null,"By default, the DevServer will reload/refresh the page when file changes are detected\uff08",(0,a.kt)("inlineCode",{parentName:"p"},"devServer.hot")," option must be disabled in order for liveReload to take effect\uff09. Disable ",(0,a.kt)("inlineCode",{parentName:"p"},"devServer.liveReload")," by setting it to ",(0,a.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,a.kt)("h4",{id:"setupmiddlewares"},"setupMiddlewares"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Type:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"Array<\n  (\n    middlewares: {\n      unshift: (...handlers: RequestHandler[]) => void;\n      push: (...handlers: RequestHandler[]) => void;\n    },\n    server: {\n      sockWrite: (\n        type: string,\n        data?: string | boolean | Record<string, any>,\n      ) => void;\n    },\n  ) => void\n>;\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"undefined"))),(0,a.kt)("p",null,"Provides the ability to execute a custom function and apply custom middlewares."),(0,a.kt)("p",null,"The order among several different types of middleware is: ",(0,a.kt)("inlineCode",{parentName:"p"},"devServer.before")," => ",(0,a.kt)("inlineCode",{parentName:"p"},"unshift")," => internal middlewares => ",(0,a.kt)("inlineCode",{parentName:"p"},"push")," => ",(0,a.kt)("inlineCode",{parentName:"p"},"devServer.after"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"export default {\n  tools: {\n    devServer: {\n      setupMiddlewares: [\n        (middlewares, server) => {\n          middlewares.unshift((req, res, next) => {\n            next();\n          });\n\n          middlewares.push((req, res, next) => {\n            next();\n          });\n        },\n      ],\n    },\n  },\n};\n")),(0,a.kt)("p",null,"It is possible to use some server api to meet special scenario requirements:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},'sockWrite. Allow send some message to hmr client, and then the hmr client will take different actions depending on the message type. If you send a "content changed" message, the page will reload.')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"export default {\n  tools: {\n    devServer: {\n      setupMiddlewares: [\n        (middlewares, server) => {\n          // add custom watch & trigger page reload when change\n          watcher.on('change', changed => {\n            server.sockWrite('content-changed');\n          });\n        },\n      ],\n    },\n  },\n};\n")),(0,a.kt)("h4",{id:"proxy"},"proxy"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"Record<string, string> | Record<string, ProxyDetail>")),(0,a.kt)("li",{parentName:"ul"},"Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"undefined"))),(0,a.kt)("p",null,"Proxying some URLs."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"export default {\n  tools: {\n    devServer: {\n      proxy: {\n        '/api': 'http://localhost:3000',\n      },\n    },\n  },\n};\n")),(0,a.kt)("p",null,"A request to /api/users will now proxy the request to http://localhost:3000/api/users."),(0,a.kt)("p",null,"If you don't want /api to be passed along, we need to rewrite the path:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"export default {\n  tools: {\n    devServer: {\n      proxy: {\n        '/api': {\n          target: 'http://localhost:3000',\n          pathRewrite: { '^/api': '' },\n        },\n      },\n    },\n  },\n};\n")),(0,a.kt)("p",null,"The DevServer Proxy makes use of the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/chimurai/http-proxy-middleware/tree/2.x"},"http-proxy-middleware")," package. Check out its documentation for more advanced usages."),(0,a.kt)("p",null,"The full type definition of DevServer Proxy is:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import type { Options as HttpProxyOptions } from 'http-proxy-middleware';\n\ntype ProxyDetail = HttpProxyOptions & {\n  bypass?: (\n    req: IncomingMessage,\n    res: ServerResponse,\n    proxyOptions: ProxyOptions,\n  ) => string | undefined | null | false;\n  context?: string | string[];\n};\n\ntype ProxyOptions =\n  | Record<string, string>\n  | Record<string, ProxyDetail>\n  | ProxyDetail[]\n  | ProxyDetail;\n")),(0,a.kt)("p",null,"In addition to the http-proxy-middleware option, we also support the bypass and context configuration:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"bypass\uff1abypass the proxy based on the return value of a function.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Return ",(0,a.kt)("inlineCode",{parentName:"li"},"null")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"undefined")," to continue processing the request with proxy."),(0,a.kt)("li",{parentName:"ul"},"Return ",(0,a.kt)("inlineCode",{parentName:"li"},"false")," to produce a 404 error for the request."),(0,a.kt)("li",{parentName:"ul"},"Return a path to serve from, instead of continuing to proxy the request."))),(0,a.kt)("li",{parentName:"ul"},"context\uff1aIf you want to proxy multiple, specific paths to the same target, you can use an array of one or more objects with a context property.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// custom bypass\nexport default {\n  tools: {\n    devServer: {\n      proxy: {\n        '/api': {\n          target: 'http://localhost:3000',\n          bypass: function (req, res, proxyOptions) {\n            if (req.headers.accept.indexOf('html') !== -1) {\n              console.log('Skipping proxy for browser request.');\n              return '/index.html';\n            }\n          },\n        },\n      },\n    },\n  },\n};\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// proxy multiple\nexport default {\n  tools: {\n    devServer: {\n      proxy: [\n        {\n          context: ['/auth', '/api'],\n          target: 'http://localhost:3000',\n        },\n      ],\n    },\n  },\n};\n")),(0,a.kt)("h4",{id:"watch"},"watch"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"boolean")),(0,a.kt)("li",{parentName:"ul"},"Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"true"))),(0,a.kt)("p",null,"Whether to watch files change in directories such as ",(0,a.kt)("inlineCode",{parentName:"p"},"mock/"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"server/"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"api/"),"."))}o.isMDXComponent=!0;const i={title:"tools.devServer",sidebar_label:"devServer"},p=void 0,s={unversionedId:"configure/app/tools/dev-server",id:"configure/app/tools/dev-server",title:"tools.devServer",description:"This configuration is Modern.js Builder configuration, more detail can see tools.devServer\u3002",source:"@site/../../packages/toolkit/main-doc/en/docusaurus-plugin-content-docs/current/configure/app/tools/dev-server.md",sourceDirName:"configure/app/tools",slug:"/configure/app/tools/dev-server",permalink:"/v2/en/docs/configure/app/tools/dev-server",draft:!1,tags:[],version:"current",frontMatter:{title:"tools.devServer",sidebar_label:"devServer"},sidebar:"configsAppSidebar",previous:{title:"cssLoader",permalink:"/v2/en/docs/configure/app/tools/css-loader"},next:{title:"esbuild",permalink:"/v2/en/docs/configure/app/tools/esbuild"}},d={},u=[],c={toc:u};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("admonition",{title:"BUILDER",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"This configuration is Modern.js Builder configuration, more detail can see ",(0,a.kt)("a",{parentName:"p",href:"https://modernjs.dev/builder/zh/api/config-tools.html#tools-devserver"},"tools.devServer"),"\u3002")),(0,a.kt)(o,{mdxType:"Main"}))}m.isMDXComponent=!0}}]);