"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8211],{44993:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(52983);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(n),f=a,m=d["".concat(p,".").concat(f)]||d[f]||c[f]||i;return n?r.createElement(m,o(o({ref:t},u),{},{components:n})):r.createElement(m,o({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7451:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=n(18249),a=(n(52983),n(44993));const i={sidebar_position:10,title:"Testing"},o=void 0,s={unversionedId:"guides/advanced-features/testing",id:"guides/advanced-features/testing",title:"Testing",description:"Modern.js inherits the testing capabilities of Jest by default.",source:"@site/../../packages/toolkit/main-doc/en/docusaurus-plugin-content-docs/current/guides/advanced-features/testing.md",sourceDirName:"guides/advanced-features",slug:"/guides/advanced-features/testing",permalink:"/v2/en/docs/guides/advanced-features/testing",draft:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10,title:"Testing"},sidebar:"guidesSidebar",previous:{title:"ESLint",permalink:"/v2/en/docs/guides/advanced-features/eslint"},next:{title:"Low-Level Tools",permalink:"/v2/en/docs/guides/advanced-features/low-level"}},p={},l=[{value:"Test file",id:"test-file",level:2},{value:"Usage",id:"usage",level:2},{value:"transform",id:"transform",level:2}],u={toc:l};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Modern.js inherits the testing capabilities of ",(0,a.kt)("a",{parentName:"p",href:"https://jestjs.io/"},"Jest")," by default."),(0,a.kt)("p",null,"First need to execute ",(0,a.kt)("inlineCode",{parentName:"p"},"pnpm run new")," enable ","[unit test/integration test]"," features\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"? \u8bf7\u9009\u62e9\u4f60\u60f3\u8981\u7684\u64cd\u4f5c\uff1a \u542f\u7528\u53ef\u9009\u529f\u80fd\n? \u542f\u7528\u53ef\u9009\u529f\u80fd\uff1a \u542f\u7528\u300c\u5355\u5143\u6d4b\u8bd5 / \u96c6\u6210\u6d4b\u8bd5\u300d\u529f\u80fd\n")),(0,a.kt)("p",null,"After executing the above command, the ",(0,a.kt)("inlineCode",{parentName:"p"},'"test": "modern test"')," command will be automatically generated in package.json."),(0,a.kt)("p",null,"register plugin in ",(0,a.kt)("inlineCode",{parentName:"p"},"modern.config.ts"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="modern.config.ts"',title:'"modern.config.ts"'},"import testPlugin from '@modern-js/plugin-testing';\n\n// https://modernjs.dev/docs/apis/app/config\nexport default defineConfig({\n  plugins: [..., testPlugin()],\n});\n")),(0,a.kt)("h2",{id:"test-file"},"Test file"),(0,a.kt)("p",null,"Modern.js default recognized test file paths are: ",(0,a.kt)("inlineCode",{parentName:"p"},"<rootDir>/src/**/*.test.[jt]s?(x)")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"<rootDir>/tests/**/*.test.[jt]s?(x)"),"\u3002"),(0,a.kt)("p",null,"If you need to customize the test directory, you can configure it with ",(0,a.kt)("a",{parentName:"p",href:"/docs/configure/app/tools/jest"},"tools.jest"),"."),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"Modern.js test support ",(0,a.kt)("a",{parentName:"p",href:"https://testing-library.com/docs/"},"testing-library"),". API can be imported from ",(0,a.kt)("inlineCode",{parentName:"p"},"@modern-js/runtime/testing"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"import { render, screen } from '@modern-js/runtime/testing';\n")),(0,a.kt)("p",null,"Other Modern.js supported testing APIs can be found ",(0,a.kt)("a",{parentName:"p",href:"/docs/apis/app/runtime/testing/cleanup"},"here"),"\u3002"),(0,a.kt)("h2",{id:"transform"},"transform"),(0,a.kt)("p",null,"Modern.js tests use ",(0,a.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/babel-jest"},"babel-jest")," for source code compilation by default. If you need to use ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/kulshekhar/ts-jest"},"ts-jest"),", you can configure it through ",(0,a.kt)("a",{parentName:"p",href:"/docs/configure/app/testing/transformer"},"testing.transform"),"."))}c.isMDXComponent=!0}}]);