"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4437],{44993:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(52983);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(n),d=a,f=m["".concat(l,".").concat(d)]||m[d]||u[d]||o;return n?r.createElement(f,s(s({ref:t},c),{},{components:n})):r.createElement(f,s({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var p=2;p<o;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},62853:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var r=n(18249),a=(n(52983),n(44993));const o={sidebar_position:3},s="PostCSS",i={unversionedId:"guides/basic-features/css/postcss",id:"guides/basic-features/css/postcss",title:"PostCSS",description:"PostCSS is a tool for converting CSS code with JavaScript tools and plugins. Modern.js built-in PostCSS and integrates common PostCSS plugins such as Autoprefixer to meet the style development needs of most projects.",source:"@site/../../packages/toolkit/main-doc/en/docusaurus-plugin-content-docs/current/guides/basic-features/css/postcss.md",sourceDirName:"guides/basic-features/css",slug:"/guides/basic-features/css/postcss",permalink:"/v2/en/docs/guides/basic-features/css/postcss",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"guidesSidebar",previous:{title:"Tailwind CSS",permalink:"/v2/en/docs/guides/basic-features/css/tailwindcss"},next:{title:"Less and Sass",permalink:"/v2/en/docs/guides/basic-features/css/less-sass"}},l={},p=[],c={toc:p};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"postcss"},"PostCSS"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://postcss.org/"},"PostCSS")," is a tool for converting CSS code with JavaScript tools and plugins. Modern.js built-in PostCSS and integrates common PostCSS plugins such as ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/postcss/autoprefixer"},"Autoprefixer")," to meet the style development needs of most projects."),(0,a.kt)("p",null,"By default, Modern.js compile and transform CSS as follows:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://github.com/postcss/autoprefixer"},"Autoprefixer")," Automatically add the required browser vendor prefix to CSS rules according to the required browser range. Modern.js default supported browser ranges are: ",(0,a.kt)("inlineCode",{parentName:"p"},"['> 0.01%', 'not dead', 'not op_mini all']"),"."),(0,a.kt)("admonition",{parentName:"li",title:"Note",type:"info"},(0,a.kt)("ul",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ul"},"[Supported browser range: ",(0,a.kt)("inlineCode",{parentName:"li"},"> 0.01%"),"]"," means that the browser market share is greater than 0.01%."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Not dead")," means excluding browsers that are no longer officially supported and browsers that have not been updated in the past 24 months."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"not op_mini all")," means exclude Opera Mini."))))),(0,a.kt)("p",null,"  :::info Additional\nIf you need to modify the default browser support range, you can configure ",(0,a.kt)("inlineCode",{parentName:"p"},"browserslist")," in the project's ",(0,a.kt)("inlineCode",{parentName:"p"},"package.json")," file, and set the rule to refer to the use of ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/browserslist/browserslist"},"Browserslist"),". The following is an example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'```json title ="package.json"\n{\n  "Browserslist": [\n    "The last 1 versions",\n    "> 1%",\n    "IE 10"\n  ]\n}\n```\n')),(0,a.kt)("p",null,"  :::"),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Provide ",(0,a.kt)("a",{parentName:"p",href:"https://www.w3.org/TR/css-variables-1/"},"CSS custom properties")," support, you can define and use custom variables in CSS, such as:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-css"},":root {\n  --main-bg-color: pink;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Provide ",(0,a.kt)("a",{parentName:"p",href:"https://drafts.csswg.org/css-nesting-1/"},"CSS Nesting")," support, you can use nested writing in CSS, such as:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-css"},"table.colortable td {\n  text-align: center;\n}\ntable.colortable td.c {\n  text-transform: uppercase;\n}\n")),(0,a.kt)("p",{parentName:"li"},"It can also be rewritten as CSS nested:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-css"},"table.colortable {\n  & td {\n    text-align: center;\n    &.c { text-transform: uppercase }\n  }\n}\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Fix known ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/philipwalton/flexbugs"},"Flexbugs"),".")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Provide compatibility with the following CSS features:"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/CSS/initial_value"},(0,a.kt)("inlineCode",{parentName:"a"},"initial")," attribute value")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/CSS/break-after"},(0,a.kt)("inlineCode",{parentName:"a"},"break-")," attribute")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/CSS/font-variant"},(0,a.kt)("inlineCode",{parentName:"a"},"font-variant"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries#syntax_improvements_in_level_4"},"Media Query Ranges"))),(0,a.kt)("p",{parentName:"li"},"When you need to modify the PostCSS configuration, you can implement it through the underlying configuration ",(0,a.kt)("a",{parentName:"p",href:"/docs/configure/app/tools/postcss"},(0,a.kt)("inlineCode",{parentName:"a"},"tools.postcss")),", here is an example:"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="modern.config.ts"',title:'"modern.config.ts"'},"export default defineConfig({\n  tools: {\n    postcss: {\n      plugins: ['autoprefixer', ('postcss-flexbugs-fixes': {})],\n    },\n  },\n});\n")))}u.isMDXComponent=!0}}]);