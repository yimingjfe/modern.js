"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8281],{44993:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>m});var r=n(52983);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),d=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=d(n),m=o,g=u["".concat(s,".").concat(m)]||u[m]||p[m]||i;return n?r.createElement(g,a(a({ref:t},l),{},{components:n})):r.createElement(g,a({ref:t},l))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=u;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var d=2;d<i;d++)a[d]=n[d];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},11720:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var r=n(18249),o=(n(52983),n(44993));const i={sidebar_position:4},a="Execute microgenerator with JS code",c={unversionedId:"guides/topic-detail/generator/codesmith/run-in-js",id:"guides/topic-detail/generator/codesmith/run-in-js",title:"Execute microgenerator with JS code",description:"In addition to using the cli method to execute the micro generator, we inevitably need to execute the micro generator in the code. The following describes how to execute the micro generator in the js code.",source:"@site/../../packages/toolkit/main-doc/en/docusaurus-plugin-content-docs/current/guides/topic-detail/generator/codesmith/run-in-js.md",sourceDirName:"guides/topic-detail/generator/codesmith",slug:"/guides/topic-detail/generator/codesmith/run-in-js",permalink:"/v2/en/docs/guides/topic-detail/generator/codesmith/run-in-js",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"guidesSidebar",previous:{title:"Develop a microgenerator project",permalink:"/v2/en/docs/guides/topic-detail/generator/codesmith/develop"},next:{title:"@modern-js/codesmith-api-app",permalink:"/v2/en/docs/guides/topic-detail/generator/codesmith/api/app"}},s={},d=[{value:"install codesmith dependency",id:"install-codesmith-dependency",level:2},{value:"Create codesmith instance",id:"create-codesmith-instance",level:2},{value:"Call the forge method to execute the generator",id:"call-the-forge-method-to-execute-the-generator",level:2}],l={toc:d};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"execute-microgenerator-with-js-code"},"Execute microgenerator with JS code"),(0,o.kt)("p",null,"In addition to using the cli method to execute the micro generator, we inevitably need to execute the micro generator in the code. The following describes how to execute the micro generator in the js code."),(0,o.kt)("h2",{id:"install-codesmith-dependency"},"install codesmith dependency"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"pnpm add @modern-js/codesmith\n")),(0,o.kt)("h2",{id:"create-codesmith-instance"},"Create codesmith instance"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import { CodeSmith, Logger } from '@modern-js/codesmith';\n\nconst smith = new CodeSmith({\n   debug: false, //Whether to enable debug mode, if true, the debug information in the generator will be displayed\n});\n")),(0,o.kt)("h2",{id:"call-the-forge-method-to-execute-the-generator"},"Call the forge method to execute the generator"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"type RunnerTask = Array<{\n  name: string;\n  config: Record<string, any>;\n}>;\n\nconst task: RunnerTask = [\n  {\n    name: \"generator\", // generator npm package name\n    config: {}, //The default configuration performed by the generator\n  },\n];\n\nawait smith.forge({\n  tasks: task.map(runner => ({\n    generator: runner.name,\n    config: runner.config,\n  })),\n  pwd: '.', // generator implementation path\n});\n")))}p.isMDXComponent=!0}}]);