"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7721],{44993:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var a=n(52983);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,s=e.mdxType,r=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(n),d=s,h=u["".concat(l,".").concat(d)]||u[d]||m[d]||r;return n?a.createElement(h,o(o({ref:t},c),{},{components:n})):a.createElement(h,o({ref:t},c))}));function d(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=n.length,o=new Array(r);o[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:s,o[1]=i;for(var p=2;p<r;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},66063:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(52983),s=n(14517);const r="tabItem_wcIk";function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,s.Z)(r,o),hidden:n},t)}},99618:(e,t,n)=>{n.d(t,{Z:()=>d});var a=n(18249),s=n(52983),r=n(14517),o=n(20284),i=n(51074),l=n(27501),p=n(5689);const c="tabList_EzWc",m="tabItem_YZmL";function u(e){var t;const{lazy:n,block:o,defaultValue:u,values:d,groupId:h,className:f}=e,k=s.Children.map(e.children,(e=>{if((0,s.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),g=d??k.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),b=(0,i.l)(g,((e,t)=>e.value===t.value));if(b.length>0)throw new Error(`Docusaurus error: Duplicate values "${b.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const y=null===u?u:u??(null==(t=k.find((e=>e.props.default)))?void 0:t.props.value)??k[0].props.value;if(null!==y&&!g.some((e=>e.value===y)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${y}" but none of its children has the corresponding value. Available values are: ${g.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:v,setTabGroupChoices:w}=(0,l.U)(),[N,x]=(0,s.useState)(y),C=[],{blockElementScrollPositionUntilNextRender:S}=(0,p.o5)();if(null!=h){const e=v[h];null!=e&&e!==N&&g.some((t=>t.value===e))&&x(e)}const j=e=>{const t=e.currentTarget,n=C.indexOf(t),a=g[n].value;a!==N&&(S(t),x(a),null!=h&&w(h,String(a)))},T=e=>{var t;let n=null;switch(e.key){case"Enter":j(e);break;case"ArrowRight":{const t=C.indexOf(e.currentTarget)+1;n=C[t]??C[0];break}case"ArrowLeft":{const t=C.indexOf(e.currentTarget)-1;n=C[t]??C[C.length-1];break}}null==(t=n)||t.focus()};return s.createElement("div",{className:(0,r.Z)("tabs-container",c)},s.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":o},f)},g.map((e=>{let{value:t,label:n,attributes:o}=e;return s.createElement("li",(0,a.Z)({role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,key:t,ref:e=>C.push(e),onKeyDown:T,onClick:j},o,{className:(0,r.Z)("tabs__item",m,null==o?void 0:o.className,{"tabs__item--active":N===t})}),n??t)}))),n?(0,s.cloneElement)(k.filter((e=>e.props.value===N))[0],{className:"margin-top--md"}):s.createElement("div",{className:"margin-top--md"},k.map(((e,t)=>(0,s.cloneElement)(e,{key:t,hidden:e.props.value!==N})))))}function d(e){const t=(0,o.Z)();return s.createElement(u,(0,a.Z)({key:String(t)},e))}},15979:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>m});var a=n(18249),s=(n(52983),n(44993)),r=n(99618),o=n(66063);const i={title:"Add Style"},l=void 0,p={unversionedId:"tutorials/first-app/c03-css",id:"tutorials/first-app/c03-css",title:"Add Style",description:"In the previous chapter, we learned how to use components from the three-way library.",source:"@site/../../packages/toolkit/main-doc/en/docusaurus-plugin-content-docs/current/tutorials/first-app/c03-css.md",sourceDirName:"tutorials/first-app",slug:"/tutorials/first-app/c03-css",permalink:"/v2/en/docs/tutorials/first-app/c03-css",draft:!1,tags:[],version:"current",frontMatter:{title:"Add Style"},sidebar:"tutorialsSidebar",previous:{title:"Add UI Components",permalink:"/v2/en/docs/tutorials/first-app/c02-component"},next:{title:"Add Client Route",permalink:"/v2/en/docs/tutorials/first-app/c04-routes"}},c={},m=[{value:"JS components using CSS",id:"js-components-using-css",level:2},{value:"Utility",id:"utility",level:2},{value:"Customized Utility Class",id:"customized-utility-class",level:2}],u={toc:m};function d(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"In the previous chapter, we learned how to use components from the three-way library."),(0,s.kt)("p",null,"In this chapter, we will learn how to implement UI components."),(0,s.kt)("h2",{id:"js-components-using-css"},"JS components using CSS"),(0,s.kt)("p",null,"First of all, we want to control the display of contact avatars by ourselves, and implement this design draft:"),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://lf3-static.bytednsdoc.com/obj/eden-cn/nuvjhpqnuvr/modern-website/tutorials/c03-css-expect.jpg",alt:"design"})),(0,s.kt)("p",null,"Hypothesis has no ready-made components to implement, so you need to write some CSS yourself. Here we use ","[styled-components]"," (",(0,s.kt)("a",{parentName:"p",href:"https://styled-components.com/"},"https://styled-components.com/"),") to implement similar requirements. Modern.js out of the box supports styled-components, which requires neither dependency nor configuration."),(0,s.kt)("p",null,"Style-components avoids many problems of traditional CSS writing through modularization. For example, writing styles directly on the style attribute of elements, the visual details of UI will also be mixed with the details of UI structure and business logic. Or classname needs to avoid global space renaming, which requires the use of naming conventions."),(0,s.kt)("p",null,"Modify the code at the top in ",(0,s.kt)("inlineCode",{parentName:"p"},"src/routes/page.tsx"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"import styled from '@modern-js/runtime/styled';\n")),(0,s.kt)("p",null,"Add the following code:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"const Avatar = styled.img`\n  width: 50px;\n  height: 50px;\n  border: 4px solid #0ef;\n  border-radius: 50%;\n`;\n")),(0,s.kt)("p",null,"Modify the code of ",(0,s.kt)("inlineCode",{parentName:"p"},"List.Item.Meta"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-tsx"},"<List.Item.Meta\n  avatar={<Avatar src={avatar} />}\n  title={name}\n  description={email}\n/>\n")),(0,s.kt)("p",null,"Execute ",(0,s.kt)("inlineCode",{parentName:"p"},"pnpm run dev")," to see the expected running result:"),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://lf3-static.bytednsdoc.com/obj/eden-cn/nuvjhpqnuvr/modern-website/tutorials/c03-css-result1.png",alt:"result"})),(0,s.kt)("p",null,"Next we do a little refactoring. To enhance legibility and make the code easier to maintain, we can split the Avatar component. We execute the following command at the end point to create a new file:"),(0,s.kt)(r.Z,{mdxType:"Tabs"},(0,s.kt)(o.Z,{value:"macOS",label:"macOS",default:!0,mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir -p src/components/Avatar\ntouch src/components/Avatar/index.tsx\n"))),(0,s.kt)(o.Z,{value:"Windows",label:"Windows",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-powershell"},"mkdir -p src/components/Avatar\nni src/components/Avatar/index.tsx\n")))),(0,s.kt)("p",null,"Delete the ",(0,s.kt)("inlineCode",{parentName:"p"},"<Avatar>")," implementation in ",(0,s.kt)("inlineCode",{parentName:"p"},"src/routes/page.tsx")," and change it to:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"import Avatar from '../components/Avatar';\n")),(0,s.kt)("p",null,"The content of ",(0,s.kt)("inlineCode",{parentName:"p"},"src/components/Avatar/index.tsx")," is modified to:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"import styled from '@modern-js/runtime/styled';\n\nconst Avatar = styled.img`\n  width: 50px;\n  height: 50px;\n  border: 4px solid #0ef;\n  border-radius: 50%;\n`;\n\nexport default Avatar;\n")),(0,s.kt)("p",null,"Execute ",(0,s.kt)("inlineCode",{parentName:"p"},"pnpm run dev"),", the result should be the same."),(0,s.kt)("admonition",{title:"note",type:"info"},(0,s.kt)("p",{parentName:"admonition"},"The reason for using the directory form ",(0,s.kt)("inlineCode",{parentName:"p"},"Avatar/index.tsx")," instead of the single-file form ",(0,s.kt)("inlineCode",{parentName:"p"},"Avatar.tsx")," is that you can easily add sub-files inside the directory later, including dedicated resources (pictures, etc.), dedicated sub-components, CSS files, etc.")),(0,s.kt)("h2",{id:"utility"},"Utility"),(0,s.kt)("p",null,"We have used the style-components implementation ",(0,s.kt)("inlineCode",{parentName:"p"},"<Avatar>")," component, but the current UI is still unsatisfactory and lacks professionalism, such as the list item inhouse layout is a bit rough and misaligned in many places."),(0,s.kt)("p",null,"Now, let's implement a better ",(0,s.kt)("inlineCode",{parentName:"p"},"Item")," component ourselves, implementing a design draft like this:"),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://lf3-static.bytednsdoc.com/obj/eden-cn/aphqeh7uhohpquloj/modern-js/docs/06/design2.png",alt:"design"})),(0,s.kt)("p",null,"The UI to be implemented this time is more complex and has an internal structure, but on the other hand, there is no very thick bright blue border of the ",(0,s.kt)("inlineCode",{parentName:"p"},"<Avatar>")," component such a very special UI, which is a very conventional horizontal and vertical layout, centering, font style, etc. In this case, there is actually no need to write CSS at all. There is a more efficient implementation method that complements styled-components: ",(0,s.kt)("strong",{parentName:"p"},"Utility Class"),"."),(0,s.kt)("p",null,"Modern.js integrates the mainstream, light, general-purpose Utility Class library ",(0,s.kt)("a",{parentName:"p",href:"https://tailwindcss.com/"},"Tailwind CSS"),"."),(0,s.kt)("p",null,"Execute ",(0,s.kt)("inlineCode",{parentName:"p"},"pnpm run new")," and select the following to start Tailwind CSS:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"? Action: Enable features\n? Enable features: Enable Tailwind CSS\n")),(0,s.kt)("p",null,"Register the Tailwind plugin in ",(0,s.kt)("inlineCode",{parentName:"p"},"modern.config.ts"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="modern.config.ts"',title:'"modern.config.ts"'},"import appTools, { defineConfig } from '@modern-js/app-tools';\nimport tailwindcssPlugin from '@modern-js/plugin-tailwindcss';\n\n// https://modernjs.dev/docs/apis/app/config\nexport default defineConfig({\n  runtime: {\n    router: true,\n    state: true,\n  },\n  server: {\n    ssr: true,\n  },\n  plugins: [appTools(), tailwindcssPlugin()],\n});\n")),(0,s.kt)("p",null,"Import the Tailwind CSS css file at the top of ",(0,s.kt)("inlineCode",{parentName:"p"},"src/routes/page.tsx")," to start a quick implementation of the professional UI:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"import 'tailwindcss/base.css';\nimport 'tailwindcss/components.css';\nimport 'tailwindcss/utilities.css';\n")),(0,s.kt)("p",null,"Create the Item component first:"),(0,s.kt)(r.Z,{mdxType:"Tabs"},(0,s.kt)(o.Z,{value:"macOS",label:"macOS",default:!0,mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir -p src/components/Item\ntouch src/components/Item/index.tsx\n"))),(0,s.kt)(o.Z,{value:"Windows",label:"Windows",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-powershell"},"mkdir -p src/components/Item\nni src/components/Item/index.tsx\n")))),(0,s.kt)("p",null,"Modify ",(0,s.kt)("inlineCode",{parentName:"p"},"src/routes/page.tsx")," to pass the ",(0,s.kt)("inlineCode",{parentName:"p"},"render")," implementation of ",(0,s.kt)("inlineCode",{parentName:"p"},"List")," to ",(0,s.kt)("inlineCode",{parentName:"p"},"Item")," component:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"import { List } from 'antd';\nimport 'tailwindcss/base.css';\nimport 'tailwindcss/components.css';\nimport 'tailwindcss/utilities.css';\nimport Item from '../components/Item';\n\nconst getAvatar = (users: Array<{ name: string, email: string }>) =>\n  users.map(user => ({\n    ...user,\n    avatar: `https://avatars.dicebear.com/v2/identicon/${user.name}.svg`,\n  }));\n\nconst mockData = getAvatar([\n  { name: 'Thomas', email: 'w.kccip@bllmfbgv.dm' },\n  { name: 'Chow', email: 'f.lfqljnlk@ywoefljhc.af' },\n  { name: 'Bradley', email: 'd.wfovsqyo@gpkcjwjgb.fr' },\n  { name: 'Davis', email: '\"t.kqkoj@utlkwnpwk.nu' },\n]);\n\nfunction Index() {\n  return (\n    <div className=\"container lg mx-auto\">\n      <List\n        dataSource={mockData}\n        renderItem={info => <Item key={info.name} info={info} />}\n      />\n    </div>\n  );\n}\n\nexport default Index;\n")),(0,s.kt)("p",null,"Utility Class(",(0,s.kt)("a",{parentName:"p",href:"https://tailwindcss.com/docs/container"},"https://tailwindcss.com/docs/container"),") is used on the parent container for a quick implementation of the most basic maximum width, center, and other styles."),(0,s.kt)("p",null,"Next implementation ",(0,s.kt)("inlineCode",{parentName:"p"},"src/components/Item/index.tsx"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-tsx"},'import Avatar from \'../Avatar\';\n\ntype InfoProps = {\n  avatar: string;\n  name: string;\n  email: string;\n  archived?: boolean;\n};\n\nconst Item = ({ info }: { info: InfoProps }) => {\n  const { avatar, name, email, archived } = info;\n  return (\n    <div className="flex p-4 items-center border-gray-200 border-b">\n      <Avatar src={avatar} />\n      <div className="ml-4 flex-1 flex justify-between">\n        <div className="flex-1">\n          <p>{name}</p>\n          <p>{email}</p>\n        </div>\n        <button\n          type="button"\n          disabled={archived}\n          className={`bg-blue-500  text-white font-bold\n            py-2 px-4 rounded-full hover:bg-blue-700`}\n        >\n          Archive\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Item;\n')),(0,s.kt)("p",null,"Execute ",(0,s.kt)("inlineCode",{parentName:"p"},"pnpm run dev")," to see the expected running result:"),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://lf3-static.bytednsdoc.com/obj/eden-cn/aphqeh7uhohpquloj/modern-js/docs/06/result2.png",alt:"result"})),(0,s.kt)("p",null,"We only use a few Utility Classes, such as ",(0,s.kt)("a",{parentName:"p",href:"https://tailwindcss.com/docs/display/"},"Flex"),", ",(0,s.kt)("a",{parentName:"p",href:"https://tailwindcss.com/docs/padding/"},"Padding"),", ",(0,s.kt)("a",{parentName:"p",href:"https://tailwindcss.com/docs/margin/"},"Margin"),", ",(0,s.kt)("a",{parentName:"p",href:"https://tailwindcss.com/docs/text-color/"},"Text"),", ",(0,s.kt)("a",{parentName:"p",href:"https://tailwindcss.com/docs/font-weight/"},"Font"),", ",(0,s.kt)("a",{parentName:"p",href:"https://tailwindcss.com/docs/border-width"},"Border"),", without writing a single CSS implementation Professional UI that conforms to the design draft."),(0,s.kt)("h2",{id:"customized-utility-class"},"Customized Utility Class"),(0,s.kt)("p",null,"We can also implement the new Utility Class ourselves to facilitate reuse between codes."),(0,s.kt)("p",null,"Utility Class itself is also a ",(0,s.kt)("strong",{parentName:"p"},"component-oriented")," technology (using different classes on a component is equivalent to setting some attributes from the base class for this component), but the classname of Utility Class is global (because it is used on arbitrary components/elements), it is very suitable for implementation with separate CSS files."),(0,s.kt)("p",null,"Create a new CSS file:"),(0,s.kt)(r.Z,{mdxType:"Tabs"},(0,s.kt)(o.Z,{value:"macOS",label:"macOS",default:!0,mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir -p src/styles\ntouch src/styles/utils.css\n"))),(0,s.kt)(o.Z,{value:"Windows",label:"Windows",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-powershell"},"mkdir -p src/styles\nni src/styles/utils.css\n")))),(0,s.kt)("p",null,"\u5728 ",(0,s.kt)("inlineCode",{parentName:"p"},"src/routes/page.tsx")," \u91cc\u5bfc\u5165 ",(0,s.kt)("inlineCode",{parentName:"p"},"utils.css"),"\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"import '../styles/utils.css';\n")),(0,s.kt)("p",null,"A Utility Class named ",(0,s.kt)("inlineCode",{parentName:"p"},"custom-text-gray")," is implemented in ",(0,s.kt)("inlineCode",{parentName:"p"},"src/routes/styles/utils.css"),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-css"},":root {\n  --custom-text-color: rgb(113, 128, 150);\n}\n\n.custom-text-gray {\n  color: var(--custom-text-color);\n}\n")),(0,s.kt)("admonition",{title:"note",type:"info"},(0,s.kt)("p",{parentName:"admonition"},"Modern.js integrates with ",(0,s.kt)("a",{parentName:"p",href:"/docs/guides/basic-features/css/postcss"},"PostCSS")," and supports modern CSS syntax features such as ",(0,s.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties"},"custom properties"),".")),(0,s.kt)("p",null,"Use in ",(0,s.kt)("inlineCode",{parentName:"p"},"src/routes/components/Item/index.tsx"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'<div className="ml-4 flex-1 flex justify-between">\n')),(0,s.kt)("p",null,"Change to:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'<div className="ml-4 custom-text-gray flex-1 flex justify-between">\n')),(0,s.kt)("p",null,"Execute ",(0,s.kt)("inlineCode",{parentName:"p"},"pnpm run dev"),", you can see that the font color has changed:"),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://lf3-static.bytednsdoc.com/obj/eden-cn/aphqeh7uhohpquloj/modern-js/docs/06/result3.png",alt:"design2"})),(0,s.kt)("admonition",{title:"note",type:"info"},(0,s.kt)("p",{parentName:"admonition"},"This is just to demonstrate Utility Class usage. In a real project, with Tailwind CSS, this Utility Class is of little value and should be added to the font color through the ",(0,s.kt)("a",{parentName:"p",href:"https://tailwindcss.com/docs/customizing-colors"},(0,s.kt)("strong",{parentName:"a"},"theme"))," of the configuration Design System."),(0,s.kt)("p",{parentName:"admonition"},(0,s.kt)("inlineCode",{parentName:"p"},"utils.css")," can also be written as ",(0,s.kt)("inlineCode",{parentName:"p"},"utils.scss")," or ",(0,s.kt)("inlineCode",{parentName:"p"},"utils.less"),", Modern.js out of the box support for SCSS and Less."),(0,s.kt)("p",{parentName:"admonition"},"However, with the support of PostCSS, modern CSS should be sufficient to meet these development needs, and the performance is also better than that of the preprocessor. It is recommended to use ",(0,s.kt)("inlineCode",{parentName:"p"},".css")," files first.")))}d.isMDXComponent=!0}}]);