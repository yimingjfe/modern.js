"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4906,2181],{44993:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(52983);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=p(n),m=i,f=c["".concat(s,".").concat(m)]||c[m]||d[m]||r;return n?a.createElement(f,l(l({ref:t},u),{},{components:n})):a.createElement(f,l({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var p=2;p<r;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},66063:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(52983),i=n(14517);const r="tabItem_wcIk";function l(e){let{children:t,hidden:n,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,i.Z)(r,l),hidden:n},t)}},99618:(e,t,n)=>{n.d(t,{Z:()=>m});var a=n(18249),i=n(52983),r=n(14517),l=n(20284),o=n(51074),s=n(27501),p=n(5689);const u="tabList_EzWc",d="tabItem_YZmL";function c(e){var t;const{lazy:n,block:l,defaultValue:c,values:m,groupId:f,className:h}=e,k=i.Children.map(e.children,(e=>{if((0,i.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),g=m??k.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),b=(0,o.l)(g,((e,t)=>e.value===t.value));if(b.length>0)throw new Error(`Docusaurus error: Duplicate values "${b.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const y=null===c?c:c??(null==(t=k.find((e=>e.props.default)))?void 0:t.props.value)??k[0].props.value;if(null!==y&&!g.some((e=>e.value===y)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${y}" but none of its children has the corresponding value. Available values are: ${g.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:N,setTabGroupChoices:v}=(0,s.U)(),[x,w]=(0,i.useState)(y),C=[],{blockElementScrollPositionUntilNextRender:T}=(0,p.o5)();if(null!=f){const e=N[f];null!=e&&e!==x&&g.some((t=>t.value===e))&&w(e)}const E=e=>{const t=e.currentTarget,n=C.indexOf(t),a=g[n].value;a!==x&&(T(t),w(a),null!=f&&v(f,String(a)))},F=e=>{var t;let n=null;switch(e.key){case"Enter":E(e);break;case"ArrowRight":{const t=C.indexOf(e.currentTarget)+1;n=C[t]??C[0];break}case"ArrowLeft":{const t=C.indexOf(e.currentTarget)-1;n=C[t]??C[C.length-1];break}}null==(t=n)||t.focus()};return i.createElement("div",{className:(0,r.Z)("tabs-container",u)},i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":l},h)},g.map((e=>{let{value:t,label:n,attributes:l}=e;return i.createElement("li",(0,a.Z)({role:"tab",tabIndex:x===t?0:-1,"aria-selected":x===t,key:t,ref:e=>C.push(e),onKeyDown:F,onClick:E},l,{className:(0,r.Z)("tabs__item",d,null==l?void 0:l.className,{"tabs__item--active":x===t})}),n??t)}))),n?(0,i.cloneElement)(k.filter((e=>e.props.value===x))[0],{className:"margin-top--md"}):i.createElement("div",{className:"margin-top--md"},k.map(((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==x})))))}function m(e){const t=(0,l.Z)();return i.createElement(c,(0,a.Z)({key:String(t)},e))}},10357:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>p,toc:()=>d});var a=n(18249),i=(n(52983),n(44993)),r=n(99618),l=n(66063);const o={},s=void 0,p={unversionedId:"components/enable-bff",id:"components/enable-bff",title:"enable-bff",description:'1. Execute pnpm new and select "Enable BFF"',source:"@site/../../packages/toolkit/main-doc/en/docusaurus-plugin-content-docs/current/components/enable-bff.md",sourceDirName:"components",slug:"/components/enable-bff",permalink:"/v2/en/docs/components/enable-bff",draft:!1,tags:[],version:"current",frontMatter:{}},u={},d=[],c={toc:d};function m(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Execute ",(0,i.kt)("inlineCode",{parentName:"li"},"pnpm new"),' and select "Enable BFF"'),(0,i.kt)("li",{parentName:"ol"},"Add the following code to ",(0,i.kt)("inlineCode",{parentName:"li"},"modern.config.[tj]s")," according to the chosen runtime framework\uff1a")),(0,i.kt)(r.Z,{mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"express",label:"Express.js",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="edenx.config.ts"',title:'"edenx.config.ts"'},"import expressPlugin from '@edenx/plugin-express';\nimport bffPlugin from '@edenx/plugin-bff';\n\nexport default defineConfig({\n  plugins: [expressPlugin(), bffPlugin()],\n});\n"))),(0,i.kt)(l.Z,{value:"koa",label:"Koa.js",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="edenx.config.ts"',title:'"edenx.config.ts"'},"import koaPlugin from '@edenx/plugin-koa';\nimport bffPlugin from '@edenx/plugin-bff';\n\nexport default defineConfig({\n  plugins: [koaPlugin(), bffPlugin()],\n});\n")))))}m.isMDXComponent=!0},65735:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>s,toc:()=>u});var a=n(18249),i=(n(52983),n(44993)),r=n(10357);const l={sidebar_position:1,title:"Basic Usage"},o=void 0,s={unversionedId:"guides/advanced-features/bff/function",id:"guides/advanced-features/bff/function",title:"Basic Usage",description:"Applications developed with Modern.js can define API functions in the api/ directory, which can be called by the front-end to send requests without writing front and back-end glue layer code, At the same time, it ensures the type safety of the front and back end",source:"@site/../../packages/toolkit/main-doc/en/docusaurus-plugin-content-docs/current/guides/advanced-features/bff/function.md",sourceDirName:"guides/advanced-features/bff",slug:"/guides/advanced-features/bff/function",permalink:"/v2/en/docs/guides/advanced-features/bff/function",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Basic Usage"},sidebar:"guidesSidebar",previous:{title:"BFF",permalink:"/v2/en/docs/guides/advanced-features/bff/"},next:{title:"Writing Type",permalink:"/v2/en/docs/guides/advanced-features/bff/type"}},p={},u=[{value:"Enable BFF",id:"enable-bff",level:2},{value:"BFF Function",id:"bff-function",level:2},{value:"API Routes",id:"api-routes",level:2},{value:"Default Route",id:"default-route",level:3},{value:"Multi-layer Route",id:"multi-layer-route",level:3},{value:"Dynamic Route",id:"dynamic-route",level:3},{value:"Allow List",id:"allow-list",level:3},{value:"RESTful API",id:"restful-api",level:2},{value:"Function Named Export",id:"function-named-export",level:3},{value:"Function Parameter Rule",id:"function-parameter-rule",level:3},{value:"Dynamic Path",id:"dynamic-path",level:4},{value:"RequestOption",id:"requestoption",level:4}],d={toc:u};function c(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Applications developed with Modern.js can define API functions in the ",(0,i.kt)("inlineCode",{parentName:"p"},"api/")," directory, which can be called by the front-end to send requests without writing front and back-end glue layer code, At the same time, it ensures the type safety of the front and back end"),(0,i.kt)("h2",{id:"enable-bff"},"Enable BFF"),(0,i.kt)(r.default,{mdxType:"EnableBFF"}),(0,i.kt)("h2",{id:"bff-function"},"BFF Function"),(0,i.kt)("p",null,"The functions that are allowed to be called through integration are called ",(0,i.kt)("strong",{parentName:"p"},"BFF functions"),". Here is the simplest BFF function to write, creating an ",(0,i.kt)("inlineCode",{parentName:"p"},"api/hello.ts")," file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="api/hello.ts"',title:'"api/hello.ts"'},"export const get = async () => 'Hello Modern.js';\n")),(0,i.kt)("p",null,"Then directly import the function in ",(0,i.kt)("inlineCode",{parentName:"p"},"src/App.tsx")," and call:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"title=src/App.tsx",title:"src/App.tsx"},"import { useState, useEffect } from 'react';\nimport { get as hello } from '@api/hello';\n\nexport default () => {\n  const [text, setText] = useState('');\n\n  useEffect(() => {\n    hello().then(setText);\n  }, []);\n  return <div>{text}</div>;\n};\n")),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Modern.js generator has already configured the ",(0,i.kt)("inlineCode",{parentName:"p"},"@api")," alias in tsconfig.json, so you can import functions directly by aliases.")),(0,i.kt)("p",null,"The functions import in ",(0,i.kt)("inlineCode",{parentName:"p"},"src/App.tsx")," will be automatically converted into interface calls, so there is no need to call the interface through fetch."),(0,i.kt)("p",null,"Execute ",(0,i.kt)("inlineCode",{parentName:"p"},"pnpm run dev"),", then open ",(0,i.kt)("inlineCode",{parentName:"p"},"http://localhost:8080/")," to see that the page has displayed the content returned by the BFF function. In Network, you can see that the page sent a request to ",(0,i.kt)("inlineCode",{parentName:"p"},"http://localhost:8080/api/hello"),"."),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://p6-piu.byteimg.com/tos-cn-i-8jisjyls3a/fd41750f8d414179a9b4ecb519919b36~tplv-8jisjyls3a-3:0:0:q75.png",alt:"Network"})),(0,i.kt)("h2",{id:"api-routes"},"API Routes"),(0,i.kt)("p",null,"In Modern.js, the BFF function routing system is implemented based on the file system, and it is also a conventional routing system."),(0,i.kt)("p",null,"In ",(0,i.kt)("strong",{parentName:"p"},"Function Writing"),", All files under ",(0,i.kt)("inlineCode",{parentName:"p"},"api/")," will map to an interface. In ",(0,i.kt)("strong",{parentName:"p"},"Framework Writing"),", All files under ",(0,i.kt)("inlineCode",{parentName:"p"},"api/lambda")," will map to an interface"),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"Function Writing & Framework Writing will introduce soon.")),(0,i.kt)("p",null,"All routes generated by BFF functions have a prefix, and the default value is ",(0,i.kt)("inlineCode",{parentName:"p"},"/api"),". The prefix can be set through ","[bff.prefix]"," (/docs/configure/app/bff/prefix)."),(0,i.kt)("p",null,"Several routing conventions are described as follow."),(0,i.kt)("h3",{id:"default-route"},"Default Route"),(0,i.kt)("p",null,"Files named ",(0,i.kt)("inlineCode",{parentName:"p"},"index.[jt]s")," are mapped to the previous directory."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"api/index.ts")," -> ",(0,i.kt)("inlineCode",{parentName:"li"},"{prefix}/")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"api/user/index.ts")," -> ",(0,i.kt)("inlineCode",{parentName:"li"},"{prefix}/user"))),(0,i.kt)("h3",{id:"multi-layer-route"},"Multi-layer Route"),(0,i.kt)("p",null,"Supports parsing nested files, if you create a nested folder structure, the files will still automatically parse routes in the same way."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"api/hello.ts")," -> ",(0,i.kt)("inlineCode",{parentName:"li"},"{prefix}/hello")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"api/user/list.ts")," -> ",(0,i.kt)("inlineCode",{parentName:"li"},"{prefix}/user/list"))),(0,i.kt)("h3",{id:"dynamic-route"},"Dynamic Route"),(0,i.kt)("p",null,"Create folders or files named with ",(0,i.kt)("inlineCode",{parentName:"p"},"[xxx]")," to support dynamic named routing parameters."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"api/user/[username]/info.ts")," -> ",(0,i.kt)("inlineCode",{parentName:"li"},"{prefix}/user/:username/info")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"api/user/username/[action].ts")," -> ",(0,i.kt)("inlineCode",{parentName:"li"},"{prefix}/user/username/:action"))),(0,i.kt)("h3",{id:"allow-list"},"Allow List"),(0,i.kt)("p",null,"By default, all files in the'api/'directory will be parsed as BFF function files, but the following files will not be parsed:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"file name start with ",(0,i.kt)("inlineCode",{parentName:"li"},"_"),", for example ",(0,i.kt)("inlineCode",{parentName:"li"},"_utils.ts"),"."),(0,i.kt)("li",{parentName:"ul"},"files in directory which name start with ",(0,i.kt)("inlineCode",{parentName:"li"},"_"),", for example ",(0,i.kt)("inlineCode",{parentName:"li"},"_utils/index.ts"),"\u3001",(0,i.kt)("inlineCode",{parentName:"li"},"_utils/cp.ts"),"."),(0,i.kt)("li",{parentName:"ul"},"test files, for example ",(0,i.kt)("inlineCode",{parentName:"li"},"foo.test.ts"),"."),(0,i.kt)("li",{parentName:"ul"},"type files, for example ",(0,i.kt)("inlineCode",{parentName:"li"},"hello.d.ts"),"."),(0,i.kt)("li",{parentName:"ul"},"files in ",(0,i.kt)("inlineCode",{parentName:"li"},"node_module"),".")),(0,i.kt)("h2",{id:"restful-api"},"RESTful API"),(0,i.kt)("p",null,"Modern.js BFF functions need to be defined according to the RESTful API standard, follow the HTTP Method specification, and do not allow free parameter definition."),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Assuming that the function allows free definition of parameters, the resulting route must be called by the ",(0,i.kt)("strong",{parentName:"p"},"private protocol")," (the reason is that the request parameters cannot be distinguished from the request body), and cannot implement any RESTful API."),(0,i.kt)("p",{parentName:"admonition"},"If the service is only used for the application itself, there is no problem. but its ",(0,i.kt)("strong",{parentName:"p"},"non-standard interface definition")," cannot be integrated into the larger system. In the case of multiple systems working together (such as BFF low-code construction), other systems also need to follow the ",(0,i.kt)("strong",{parentName:"p"},"private protocol"),".")),(0,i.kt)("h3",{id:"function-named-export"},"Function Named Export"),(0,i.kt)("p",null,"Modern.js the export name of the BFF function determines the Method of the corresponding interface of the function, such as ",(0,i.kt)("inlineCode",{parentName:"p"},"get"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"post")," and so on."),(0,i.kt)("p",null,"For example, following the example, a ",(0,i.kt)("inlineCode",{parentName:"p"},"GET")," interface can be exported."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"export const get = async () => {\n  return {\n    name: 'Modern.js',\n    desc: '\u73b0\u4ee3 web \u5de5\u7a0b\u65b9\u6848',\n  };\n};\n")),(0,i.kt)("p",null,"Following the example below, a ",(0,i.kt)("inlineCode",{parentName:"p"},"POST")," interface can be exported."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"export const post = async () => {\n  return {\n    name: 'Modern.js',\n    desc: '\u73b0\u4ee3 web \u5de5\u7a0b\u65b9\u6848',\n  };\n};\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Modern.js supports 9 definitions for HTTP Method: ",(0,i.kt)("inlineCode",{parentName:"p"},"GET"),"\u3001",(0,i.kt)("inlineCode",{parentName:"p"},"POST"),"\u3001",(0,i.kt)("inlineCode",{parentName:"p"},"PUT"),"\u3001",(0,i.kt)("inlineCode",{parentName:"p"},"DELETE"),"\u3001",(0,i.kt)("inlineCode",{parentName:"p"},"CONNECT"),"\u3001",(0,i.kt)("inlineCode",{parentName:"p"},"TRACE"),"\u3001",(0,i.kt)("inlineCode",{parentName:"p"},"PATCH"),"\u3001",(0,i.kt)("inlineCode",{parentName:"p"},"OPTION"),"\u3001",(0,i.kt)("inlineCode",{parentName:"p"},"HEAD"),", can be exported using these methods as functions\u3002")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The name is size insensitive\uff0cif ",(0,i.kt)("inlineCode",{parentName:"p"},"GET"),"\uff0ccan write ",(0,i.kt)("inlineCode",{parentName:"p"},"get"),"\u3001",(0,i.kt)("inlineCode",{parentName:"p"},"Get"),"\u3001",(0,i.kt)("inlineCode",{parentName:"p"},"GEt"),"\u3001",(0,i.kt)("inlineCode",{parentName:"p"},"GET"),"\uff0ccan be accurately identified. But default export as ",(0,i.kt)("inlineCode",{parentName:"p"},"export default xxx")," will be map to ",(0,i.kt)("inlineCode",{parentName:"p"},"Get"),"\u3002")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Multiple functions of different Methods can be defined in one file, but if multiple functions of the same Method are defined, only the first will take effect."))),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"It should be noted that the defined functions should all be asynchronous, which is related to the type when the function is called, which will be mentioned later.")),(0,i.kt)("h3",{id:"function-parameter-rule"},"Function Parameter Rule"),(0,i.kt)("p",null,"As mentioned above, in order to meet the design criteria of RESTful APIs, the BFF function in Modern.js needs to follow certain imported parameter rules."),(0,i.kt)("p",null,"The function parameters are divided into two parts, the dynamic part in the request path and the request option ",(0,i.kt)("inlineCode",{parentName:"p"},"RequestOption"),"."),(0,i.kt)("h4",{id:"dynamic-path"},"Dynamic Path"),(0,i.kt)("p",null,"Dynamic routing will be used as imported parameters in the first part of the function, and each imported parameter corresponds to a dynamic route. For example, in the following example, uid will be passed into the function as the first two parameters:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="api/[level]/[id].ts"',title:'"api/[level]/[id].ts"'},"export default async (level: number, id: number) => {\n  const userData = await queryUser(level, uid);\n  return userData;\n};\n")),(0,i.kt)("p",null,"Pass dynamic parameters directly when calling:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="App.tsx"',title:'"App.tsx"'},"import { useState, useEffect } from 'react';\nimport { get as getUser } from '@api/[level]/[id]';\n\nexport default () => {\n  const [name, setName] = useState('');\n\n  useEffect(() => {\n    getUser(6, 001).then(userData => setName(userData.name));\n  }, []);\n\n  return <div>{name}</div>;\n};\n")),(0,i.kt)("h4",{id:"requestoption"},"RequestOption"),(0,i.kt)("p",null,"The parameter after Dynamic Path is the object ",(0,i.kt)("inlineCode",{parentName:"p"},"RequestOption")," containing querystring and request body, which is used to define the types of ",(0,i.kt)("inlineCode",{parentName:"p"},"data")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"query"),"."),(0,i.kt)("p",null,"In normal functions without dynamic routing, the incoming ",(0,i.kt)("inlineCode",{parentName:"p"},"data")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"query")," can be obtained from the first imported parameter, for example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="api/hello.ts"',title:'"api/hello.ts"'},"import type { RequestOption } from '@modern-js/runtime/server';\n\nexport async function post({\n  query,\n  data,\n}: RequestOption<Record<string, string>, Record<string, string>>) {\n  // do somethings\n}\n")),(0,i.kt)("p",null,"When a function file uses dynamic routing rules, dynamic routing before the ",(0,i.kt)("inlineCode",{parentName:"p"},"RequestOption")," parameter."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="api/[sku]/[id]/item.ts"',title:'"api/[sku]/[id]/item.ts"'},"export async function post(\n  sku: string,\n  id: string,\n  {\n    data,\n    query,\n  }: RequestOption<Record<string, string>, Record<string, string>>,\n) {\n  // do somethings\n}\n")),(0,i.kt)("p",null,"Also pass in the parameters according to the function definition:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="App.tsx"',title:'"App.tsx"'},"import { post } from '@api/[sku]/[id]/item';\n\nexport default () => {\n  const addSku = () => {\n    post('0001' /* sku */, '1234' /* id */, {\n      query: {\n        /* ... */\n      },\n      data: {\n        /* ... */\n      },\n    });\n  };\n\n  return <div onClick={addSku}>\u6dfb\u52a0 SKU</div>;\n};\n")),(0,i.kt)("p",null,"As mentioned earlier, the defined functions should be asynchronous because they are automatically converted to HTTP interface calls when called by the front end."),(0,i.kt)("p",null,"so in order to keep the type definition consistent with the actual calling, it is necessary to set the BFF function to asynchronous when defining it."))}c.isMDXComponent=!0}}]);