"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5146],{44993:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var r=n(52983);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),m=l(n),d=a,y=m["".concat(s,".").concat(d)]||m[d]||c[d]||o;return n?r.createElement(y,i(i({ref:t},u),{},{components:n})):r.createElement(y,i({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4270:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>p,toc:()=>l});var r=n(18249),a=(n(52983),n(44993));const o={title:"routes/",sidebar_position:2},i=void 0,p={unversionedId:"apis/app/hooks/src/routes",id:"apis/app/hooks/src/routes",title:"routes/",description:"The entry identifier when the application uses file system-based routing.",source:"@site/../../packages/toolkit/main-doc/en/docusaurus-plugin-content-docs/current/apis/app/hooks/src/routes.md",sourceDirName:"apis/app/hooks/src",slug:"/apis/app/hooks/src/routes",permalink:"/v2/en/docs/apis/app/hooks/src/routes",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"routes/",sidebar_position:2},sidebar:"apisAppSidebar",previous:{title:"App.[tj]sx",permalink:"/v2/en/docs/apis/app/hooks/src/app"},next:{title:"pages/",permalink:"/v2/en/docs/apis/app/hooks/src/pages"}},s={},l=[{value:"basic example",id:"basic-example",level:2},{value:"Dynamic Route",id:"dynamic-route",level:2},{value:"Layout component",id:"layout-component",level:2}],u={toc:l};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The entry identifier when the application uses file system-based routing."),(0,a.kt)("p",null,"When the project structure is of type ",(0,a.kt)("inlineCode",{parentName:"p"},"Routes directory entry"),", the files in the ",(0,a.kt)("inlineCode",{parentName:"p"},"src/routes")," directory are parsed to get the client-side routing configuration. See ",(0,a.kt)("a",{parentName:"p",href:"/docs/guides/basic-features/routes"},"Routing by convention")," for more details on usage."),(0,a.kt)("p",null,"Any ",(0,a.kt)("inlineCode",{parentName:"p"},"layout.[tj]sx")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"page.[tj]sx")," under ",(0,a.kt)("inlineCode",{parentName:"p"},"src/routes")," will be used as a route to the application\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash",metastring:"{3}","{3}":!0},".\n\u2514\u2500\u2500 routes\n    \u251c\u2500\u2500 layout.tsx\n    \u251c\u2500\u2500 page.tsx\n    \u2514\u2500\u2500 user\n        \u251c\u2500\u2500 layout.tsx\n        \u2514\u2500\u2500 page.tsx\n")),(0,a.kt)("h2",{id:"basic-example"},"basic example"),(0,a.kt)("p",null,"The directory names in the ",(0,a.kt)("inlineCode",{parentName:"p"},"routes")," directory will be used as a mapping of the route url, where ",(0,a.kt)("inlineCode",{parentName:"p"},"layout.tsx")," is used as the layout component and ",(0,a.kt)("inlineCode",{parentName:"p"},"page.tsx")," as the content component, which is a leaf node of the whole route, for example the following directory structure\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},".\n\u2514\u2500\u2500 routes\n    \u251c\u2500\u2500 page.tsx\n    \u2514\u2500\u2500 user\n        \u2514\u2500\u2500 page.tsx\n")),(0,a.kt)("p",null,"The following two routes are produced:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"/")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"/user"))),(0,a.kt)("h2",{id:"dynamic-route"},"Dynamic Route"),(0,a.kt)("p",null,"If the directory name of the route file is named with ",(0,a.kt)("inlineCode",{parentName:"p"},"[]"),", the generated route will be used as a dynamic route. For example, the following file directories:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"\u2514\u2500\u2500 routes\n    \u251c\u2500\u2500 [id]\n    \u2502\xa0\xa0 \u2514\u2500\u2500 page.tsx\n    \u251c\u2500\u2500 blog\n    \u2502\xa0\xa0 \u2514\u2500\u2500 page.tsx\n    \u2514\u2500\u2500 page.tsx\n")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"routes/[id]/page.tsx")," file will be converted to a ",(0,a.kt)("inlineCode",{parentName:"p"},"/:id")," route. All ",(0,a.kt)("inlineCode",{parentName:"p"},"/xxx")," will match that route, except for the ",(0,a.kt)("inlineCode",{parentName:"p"},"/blog")," route, which can be matched exactly."),(0,a.kt)("p",null,"In the component, you can get the corresponding parameters by ",(0,a.kt)("a",{parentName:"p",href:"/docs/apis/app/runtime/router/#useparams"},"useParams"),"."),(0,a.kt)("p",null,"In the loader, params will be used as input to ",(0,a.kt)("a",{parentName:"p",href:"/docs/guides/basic-features/data-fetch#loader-function"},"loader"),", and the corresponding parameters can be retrieved through the property ",(0,a.kt)("inlineCode",{parentName:"p"},"params"),"."),(0,a.kt)("h2",{id:"layout-component"},"Layout component"),(0,a.kt)("p",null,"As in the example below, you can add a common layout component for all routing components by adding ",(0,a.kt)("inlineCode",{parentName:"p"},"layout.tsx")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},".\n\u2514\u2500\u2500 routes\n    \u251c\u2500\u2500 layout.tsx\n    \u251c\u2500\u2500 page.tsx\n    \u2514\u2500\u2500 user\n        \u251c\u2500\u2500 layout.tsx\n        \u2514\u2500\u2500 page.tsx\n")),(0,a.kt)("p",null,"You can represent child components in layout components by using ",(0,a.kt)("inlineCode",{parentName:"p"},"<Outlet>"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"title=routes/layout.tsx",title:"routes/layout.tsx"},"import { Link, Outlet, useLoaderData } from '@modern-js/runtime/router';\n\nexport default () => {\n  return (\n    <>\n      <Outlet></Outlet>\n    </>\n  );\n};\n")),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("inlineCode",{parentName:"p"},"<Outlet>")," is a new API in React Router 6, see ","[Outlet]"," for details(",(0,a.kt)("a",{parentName:"p",href:"https://reactrouter.com/en/main/components/outlet#outlet"},"https://reactrouter.com/en/main/components/outlet#outlet"),").")))}c.isMDXComponent=!0}}]);