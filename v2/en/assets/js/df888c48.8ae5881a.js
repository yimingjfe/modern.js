"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9248],{44993:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var i=n(52983);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=i.createContext({}),u=function(e){var t=i.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=u(e.components);return i.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},c=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),c=u(n),m=r,f=c["".concat(o,".").concat(m)]||c[m]||d[m]||a;return n?i.createElement(f,l(l({ref:t},s),{},{components:n})):i.createElement(f,l({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=c;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:r,l[1]=p;for(var u=2;u<a;u++)l[u]=n[u];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}c.displayName="MDXCreateElement"},24885:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>p,toc:()=>u});var i=n(18249),r=(n(52983),n(44993));const a={sidebar_position:1},l="Customize input related type definition",p={unversionedId:"guides/topic-detail/generator/plugin/api/input/type",id:"guides/topic-detail/generator/plugin/api/input/type",title:"Customize input related type definition",description:"Input",source:"@site/../../packages/toolkit/main-doc/en/docusaurus-plugin-content-docs/current/guides/topic-detail/generator/plugin/api/input/type.md",sourceDirName:"guides/topic-detail/generator/plugin/api/input",slug:"/guides/topic-detail/generator/plugin/api/input/type",permalink:"/v2/en/docs/guides/topic-detail/generator/plugin/api/input/type",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"guidesSidebar",previous:{title:"Introduction",permalink:"/v2/en/docs/guides/topic-detail/generator/plugin/api/introduce"},next:{title:"addInputBefore",permalink:"/v2/en/docs/guides/topic-detail/generator/plugin/api/input/addInputBefore"}},o={},u=[{value:"Input",id:"input",level:2},{value:"type",id:"type",level:3},{value:"name",id:"name",level:3},{value:"title",id:"title",level:3},{value:"default",id:"default",level:3},{value:"enum",id:"enum",level:3},{value:"x-validate",id:"x-validate",level:3},{value:"x-reactions",id:"x-reactions",level:3},{value:"properties",id:"properties",level:3},{value:"Example",id:"example",level:2}],s={toc:u};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,i.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"customize-input-related-type-definition"},"Customize input related type definition"),(0,r.kt)("h2",{id:"input"},"Input"),(0,r.kt)("p",null,"Modern.js Input input type uses the open source ",(0,r.kt)("a",{parentName:"p",href:"https://formilyjs.org/"},"Formily")," Schema, with support for some of its Schema fields."),(0,r.kt)("h3",{id:"type"},"type"),(0,r.kt)("p",null,"schema types. Currently, the input supported by the generator plugin is of type ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"number")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"object"),". Where ",(0,r.kt)("inlineCode",{parentName:"p"},"object")," is used for implementation schema nested, it needs to be used in conjunction with ",(0,r.kt)("inlineCode",{parentName:"p"},"properties"),"."),(0,r.kt)("h3",{id:"name"},"name"),(0,r.kt)("p",null,"schema keyword."),(0,r.kt)("h3",{id:"title"},"title"),(0,r.kt)("p",null,"schema display name."),(0,r.kt)("h3",{id:"default"},"default"),(0,r.kt)("p",null,"schema default value."),(0,r.kt)("h3",{id:"enum"},"enum"),(0,r.kt)("p",null,"If the schema is selection type, this field is used to define the option content."),(0,r.kt)("p",null,"Each option supports two fields:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"value: option value.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"label: display name."))),(0,r.kt)("h3",{id:"x-validate"},"x-validate"),(0,r.kt)("p",null,"schema verification rules. Formily's verification method is supported here, for details, please refer to ",(0,r.kt)("a",{parentName:"p",href:"https://formilyjs.org/zh-CN/guide/advanced/validate"},"Formily Validate"),"."),(0,r.kt)("h3",{id:"x-reactions"},"x-reactions"),(0,r.kt)("p",null,"schema field linkage. Formily's linkage method is supported here, for details, please refer to ",(0,r.kt)("a",{parentName:"p",href:"https://formilyjs.org/zh-CN/guide/advanced/linkages"},"Formily Linkages"),"."),(0,r.kt)("h3",{id:"properties"},"properties"),(0,r.kt)("p",null,"When schema type is ",(0,r.kt)("inlineCode",{parentName:"p"},"object"),", define its subforms."),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const schema = {\n  type: 'object',\n  properties: {\n    language: {\n      type: 'string',\n      title: 'Develop Langauge',\n      enum: [\n        { label: 'TS', value: 'ts' },\n        { label: 'ES6+', value: 'js' },\n      ],\n    },\n  },\n};\n")))}d.isMDXComponent=!0}}]);