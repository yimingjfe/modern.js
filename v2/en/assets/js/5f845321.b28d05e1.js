"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6457],{44993:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>g});var i=t(52983);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,i,o=function(e,n){if(null==e)return{};var t,i,o={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=i.createContext({}),p=function(e){var n=i.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=p(e.components);return i.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},d=i.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(t),g=o,m=d["".concat(l,".").concat(g)]||d[g]||u[g]||r;return t?i.createElement(m,a(a({ref:n},c),{},{components:t})):i.createElement(m,a({ref:n},c))}));function g(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,a=new Array(r);a[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var p=2;p<r;p++)a[p]=t[p];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}d.displayName="MDXCreateElement"},9217:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var i=t(18249),o=(t(52983),t(44993));const r={sidebar_position:1},a="Introduction",s={unversionedId:"guides/topic-detail/generator/plugin/api/introduce",id:"guides/topic-detail/generator/plugin/api/introduce",title:"Introduction",description:"Modern.js supports the customization of the provided engineering solutions by means of generator plugins or the customization of specific scenarios for engineering solutions.",source:"@site/../../packages/toolkit/main-doc/en/docusaurus-plugin-content-docs/current/guides/topic-detail/generator/plugin/api/introduce.md",sourceDirName:"guides/topic-detail/generator/plugin/api",slug:"/guides/topic-detail/generator/plugin/api/introduce",permalink:"/v2/en/docs/guides/topic-detail/generator/plugin/api/introduce",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"guidesSidebar",previous:{title:"How to develop generator plugins",permalink:"/v2/en/docs/guides/topic-detail/generator/plugin/develop"},next:{title:"Customize input related type definition",permalink:"/v2/en/docs/guides/topic-detail/generator/plugin/api/input/type"}},l={},p=[{value:"Generator plugin composition",id:"generator-plugin-composition",level:2},{value:"Classification",id:"classification",level:2},{value:"Type definition",id:"type-definition",level:3},{value:"Extended engineering",id:"extended-engineering",level:4},{value:"Create engineering scenes",id:"create-engineering-scenes",level:4},{value:"Custom type",id:"custom-type",level:3}],c={toc:p};function u(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,i.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"Modern.js supports the customization of the provided engineering solutions by means of generator plugins or the customization of specific scenarios for engineering solutions."),(0,o.kt)("h2",{id:"generator-plugin-composition"},"Generator plugin composition"),(0,o.kt)("p",null,"The generator plugin is a module that can be developed directly using Modern.js module engineering solutions. Of course, Modern.js also provides the corresponding generator plugin (",(0,o.kt)("inlineCode",{parentName:"p"},"@modern-js/generator-plugin-plugin"),") to directly create a new generator plugin project."),(0,o.kt)("p",null,"A generator plugin project directory is as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 src\n\u2502   \u251c\u2500\u2500 index.ts\n\u2502   \u2514\u2500\u2500 modern-app-env.d.ts\n\u251c\u2500\u2500 templates\n\u2514\u2500\u2500 tsconfig.json\n")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"src/index.ts")," is the source code directory, which is used to develop the generator plugin logic. The plugin exports a function by default, and the function parameter is ",(0,o.kt)("inlineCode",{parentName:"p"},"context"),". Some methods are provided on the ",(0,o.kt)("inlineCode",{parentName:"p"},"context")," to directly operate the current project. These methods will be introduced in detail later in this chapter."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"templates")," directory is the template directory used to store template files that need to be used in the generator plugin."),(0,o.kt)("h2",{id:"classification"},"Classification"),(0,o.kt)("p",null,"There are two types of generator plugins:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Extended engineering: directly customize the three major engineering provided by default.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Create engineering scenes: Create corresponding engineering scenes based on the default three major engineering schemes."))),(0,o.kt)("h3",{id:"type-definition"},"Type definition"),(0,o.kt)("p",null,"The classification of the generator plugin is provided by the meta information in the ",(0,o.kt)("inlineCode",{parentName:"p"},"package.json"),"."),(0,o.kt)("h4",{id:"extended-engineering"},"Extended engineering"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "meta": {\n        "extend": "mwa" // The three engineering is mwa, module, monorepo\n    }\n}\n')),(0,o.kt)("h4",{id:"create-engineering-scenes"},"Create engineering scenes"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "meta": {\n        "key": "new_solution",\n        "name": "New Solution",\n        "type": "mwa" // In addition to the three major engineering solutions, the type here also supports the customize (custom) type\n    }\n}\n')),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"key")," is the scene scheme name and the value is a character string.\n",(0,o.kt)("inlineCode",{parentName:"p"},"name")," is the display name of the scene scheme, used for the display of the option when used, and the value is a character string.\n",(0,o.kt)("inlineCode",{parentName:"p"},"type")," is the project solution type. In addition to supporting three project solutions like ",(0,o.kt)("inlineCode",{parentName:"p"},"extend"),", it also supports the customize (custom) type."),(0,o.kt)("h3",{id:"custom-type"},"Custom type"),(0,o.kt)("p",null,"The customize type provides the implementation capability of the full custom project solution. When using this type to create a new project solution scenario, only a small amount of code for best practices at the development level is provided, such as ",(0,o.kt)("inlineCode",{parentName:"p"},".gitignore"),", ",(0,o.kt)("inlineCode",{parentName:"p"},".editorConfig")," and other files, specifically for the following directory structure:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},".\n\u251c\u2500\u2500 .editorconfig\n\u251c\u2500\u2500 .gitignore\n\u251c\u2500\u2500 .idea\n\u2502   \u251c\u2500\u2500 codeStyles\n\u2502   \u2502   \u251c\u2500\u2500 Project.xml\n\u2502   \u2502   \u2514\u2500\u2500 codeStyleConfig.xml\n\u2502   \u251c\u2500\u2500 inspectionProfiles\n\u2502   \u2502   \u2514\u2500\u2500 Project_Default.xml\n\u2502   \u2514\u2500\u2500 jsLinters\n\u2502       \u2514\u2500\u2500 eslint.xml\n\u251c\u2500\u2500 .nvmrc\n\u2514\u2500\u2500 .vscode\n    \u251c\u2500\u2500 extensions.json\n    \u2514\u2500\u2500 settings.json\n")),(0,o.kt)("p",null,"Customized types ensure flexible configuration according to their needs for engineering solutions."))}u.isMDXComponent=!0}}]);