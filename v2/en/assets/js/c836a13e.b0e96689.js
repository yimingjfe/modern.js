"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3941],{44993:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(52983);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=a,f=d["".concat(p,".").concat(m)]||d[m]||c[m]||o;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},81080:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=n(18249),a=(n(52983),n(44993));const o={sidebar_label:"routes"},i="server.routes",s={unversionedId:"configure/app/server/routes",id:"configure/app/server/routes",title:"server.routes",description:"* Type: Object",source:"@site/../../packages/toolkit/main-doc/en/docusaurus-plugin-content-docs/current/configure/app/server/routes.md",sourceDirName:"configure/app/server",slug:"/configure/app/server/routes",permalink:"/v2/en/docs/configure/app/server/routes",draft:!1,tags:[],version:"current",frontMatter:{sidebar_label:"routes"},sidebar:"configsAppSidebar",previous:{title:"publicRoutes",permalink:"/v2/en/docs/configure/app/server/public-routes"},next:{title:"ssrByEntries",permalink:"/v2/en/docs/configure/app/server/ssr-by-entries"}},p={},l=[{value:"Custom access routing",id:"custom-access-routing",level:2},{value:"Custom response header",id:"custom-response-header",level:2}],u={toc:l};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"serverroutes"},"server.routes"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"Object")),(0,a.kt)("li",{parentName:"ul"},"Default: Automatic generation of server-level routing rules based on file conventions: One routing rule is generated per file of the application,and the default route is the same as the entry name.")),(0,a.kt)("p",null,"This configuration option only applies to server-level routing, and can customize the service access configuration of the application entry."),(0,a.kt)("h2",{id:"custom-access-routing"},"Custom access routing"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"key")," of the object is the entry name of the current application, and the value can be ",(0,a.kt)("inlineCode",{parentName:"p"},"string | Array<string>"),"."),(0,a.kt)("p",null,"When the value type is  ",(0,a.kt)("inlineCode",{parentName:"p"},"string"),", the current value represents the name of the route to access the entry."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="modern.config.ts"',title:'"modern.config.ts"'},"export default defineConfig({\n  server: {\n    routes: {\n      // The default route is /entryName1, /p/test1 after customization\n      entryName1: '/p/test1'\n      // Support dynamic server-level routing configuration\n      entryName2: '/detail/:id'\n    }\n  }\n});\n")),(0,a.kt)("p",null,"Multiple access routes can also be set for entries using the ",(0,a.kt)("inlineCode",{parentName:"p"},"Array<string>"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="modern.config.ts"',title:'"modern.config.ts"'},"export default defineConfig({\n  server: {\n    routes: {\n      'page-a': [`/a`, '/b'],\n    },\n  },\n});\n")),(0,a.kt)("p",null,"At this point, the '",(0,a.kt)("inlineCode",{parentName:"p"},"page-a")," entry can be accessed through both ",(0,a.kt)("inlineCode",{parentName:"p"},"/a")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"/b")," routes."),(0,a.kt)("p",null,"After executing the ",(0,a.kt)("inlineCode",{parentName:"p"},"dev")," command, you can see in ",(0,a.kt)("inlineCode",{parentName:"p"},"dist/route.json")," that there are two routing records in the entry ",(0,a.kt)("inlineCode",{parentName:"p"},"page-a"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "routes": [\n    {\n      "urlPath": "/a",\n      "entryName": "page-a",\n      "entryPath": "html/page-a/index.html",\n      "isSPA": true,\n      "isSSR": false\n    },\n    {\n      "urlPath": "/b",\n      "entryName": "page-a",\n      "entryPath": "html/page-a/index.html",\n      "isSPA": true,\n      "isSSR": false\n    },\n  ]\n}\n')),(0,a.kt)("h2",{id:"custom-response-header"},"Custom response header"),(0,a.kt)("p",null,"The response header can be set by configuring the resHeaders of the entry:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="modern.config.ts"',title:'"modern.config.ts"'},"export default defineConfig({\n  server: {\n    routes: {\n      'page-a': {\n        route: ['/a', '/b'],\n        resHeaders: {\n          'x-modern-test': '1',\n        },\n      },\n    },\n  },\n});\n")),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"This configuration takes effect in both the production environment and the development environment, and can set different response headers according to the NODE_ENV. But if you only need to set response headers in the development environment, ",(0,a.kt)("inlineCode",{parentName:"p"},"tools.devServer.headers")," is recommended.")))}c.isMDXComponent=!0}}]);