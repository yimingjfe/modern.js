(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(e){function n(n){for(var o,a,s=n[0],l=n[1],c=n[2],d=0,p=[];d<s.length;d++)a=s[d],Object.prototype.hasOwnProperty.call(i,a)&&i[a]&&p.push(i[a][0]),i[a]=0;for(o in l)Object.prototype.hasOwnProperty.call(l,o)&&(e[o]=l[o]);for(u&&u(n);p.length;)p.shift()();return r.push.apply(r,c||[]),t()}function t(){for(var e,n=0;n<r.length;n++){for(var t=r[n],o=!0,s=1;s<t.length;s++){var l=t[s];0!==i[l]&&(o=!1)}o&&(r.splice(n--,1),e=a(a.s=t[0]))}return e}var o={},i={1:0},r=[];function a(n){if(o[n])return o[n].exports;var t=o[n]={i:n,l:!1,exports:{}};return e[n].call(t.exports,t,t.exports,a),t.l=!0,t.exports}a.e=function(e){var n=[],t=i[e];if(0!==t)if(t)n.push(t[2]);else{var o=new Promise((function(n,o){t=i[e]=[n,o]}));n.push(t[2]=o);var r,s=document.createElement("script");s.charset="utf-8",s.timeout=120,a.nc&&s.setAttribute("nonce",a.nc),s.src=function(e){return a.p+"assets/js/"+({}[e]||e)+"."+{2:"63aa218d",3:"c4874525",4:"0a85f1f1",5:"f2329e0b",6:"bb88fb54",7:"f0d18b9e",8:"94dd0716",9:"843090fd",10:"02b1ee34",11:"84cbf3ec",12:"06a01578",13:"51294a29",14:"98f8047f",15:"0054cf55",16:"9db8ceec",17:"e23a6155",18:"23625305",19:"7192eb05",20:"0c10d430",21:"a08fc047",22:"bdeca48d",23:"3263855d",24:"40a3c35c",25:"216bcb4b",26:"80b399e0",27:"ee58d7df",28:"ae54ba94",29:"09ce0d74",30:"01faf2a4",31:"54484e5a",32:"52101371",33:"47f4f28d",34:"a49e20b6",35:"ea04a436",36:"030b448f",37:"3b651ef0",38:"ec098dcc",39:"ca5d724e",40:"f98c6fb3",41:"34a2b6d9",42:"e3b2be35",43:"b3013c8a",44:"2341dc22",45:"b0caf2a3",46:"333a0fb0",47:"b1586a57",48:"80f8b61a",49:"b04d6835",50:"17790f02"}[e]+".js"}(e);var l=new Error;r=function(n){s.onerror=s.onload=null,clearTimeout(c);var t=i[e];if(0!==t){if(t){var o=n&&("load"===n.type?"missing":n.type),r=n&&n.target&&n.target.src;l.message="Loading chunk "+e+" failed.\n("+o+": "+r+")",l.name="ChunkLoadError",l.type=o,l.request=r,t[1](l)}i[e]=void 0}};var c=setTimeout((function(){r({type:"timeout",target:s})}),12e4);s.onerror=s.onload=r,document.head.appendChild(s)}return Promise.all(n)},a.m=e,a.c=o,a.d=function(e,n,t){a.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,n){if(1&n&&(e=a(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(a.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)a.d(t,o,function(n){return e[n]}.bind(null,o));return t},a.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(n,"a",n),n},a.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},a.p="/builder/",a.oe=function(e){throw console.error(e),e};var s=window.webpackJsonp=window.webpackJsonp||[],l=s.push.bind(s);s.push=n,s=s.slice();for(var c=0;c<s.length;c++)n(s[c]);var u=l;r.push([52,0]),t()}([function(e,n,t){"use strict";t.d(n,"a",(function(){return Wt}));
/*!
 * Vue.js v2.7.10
 * (c) 2014-2022 Evan You
 * Released under the MIT License.
 */
var o=Object.freeze({}),i=Array.isArray;function r(e){return null==e}function a(e){return null!=e}function s(e){return!0===e}function l(e){return"string"==typeof e||"number"==typeof e||"symbol"==typeof e||"boolean"==typeof e}function c(e){return"function"==typeof e}function u(e){return null!==e&&"object"==typeof e}var d=Object.prototype.toString;function p(e){return"[object Object]"===d.call(e)}function f(e){return"[object RegExp]"===d.call(e)}function m(e){var n=parseFloat(String(e));return n>=0&&Math.floor(n)===n&&isFinite(e)}function h(e){return a(e)&&"function"==typeof e.then&&"function"==typeof e.catch}function g(e){return null==e?"":Array.isArray(e)||p(e)&&e.toString===d?JSON.stringify(e,null,2):String(e)}function b(e){var n=parseFloat(e);return isNaN(n)?e:n}function y(e,n){for(var t=Object.create(null),o=e.split(","),i=0;i<o.length;i++)t[o[i]]=!0;return n?function(e){return t[e.toLowerCase()]}:function(e){return t[e]}}y("slot,component",!0);var v=y("key,ref,slot,slot-scope,is");function x(e,n){if(e.length){var t=e.indexOf(n);if(t>-1)return e.splice(t,1)}}var w=Object.prototype.hasOwnProperty;function k(e,n){return w.call(e,n)}function T(e){var n=Object.create(null);return function(t){return n[t]||(n[t]=e(t))}}var j=/-(\w)/g,S=T((function(e){return e.replace(j,(function(e,n){return n?n.toUpperCase():""}))})),I=T((function(e){return e.charAt(0).toUpperCase()+e.slice(1)})),z=/\B([A-Z])/g,_=T((function(e){return e.replace(z,"-$1").toLowerCase()}));var P=Function.prototype.bind?function(e,n){return e.bind(n)}:function(e,n){function t(t){var o=arguments.length;return o?o>1?e.apply(n,arguments):e.call(n,t):e.call(n)}return t._length=e.length,t};function E(e,n){n=n||0;for(var t=e.length-n,o=new Array(t);t--;)o[t]=e[t+n];return o}function C(e,n){for(var t in n)e[t]=n[t];return e}function O(e){for(var n={},t=0;t<e.length;t++)e[t]&&C(n,e[t]);return n}function R(e,n,t){}var D=function(e,n,t){return!1},B=function(e){return e};function L(e,n){if(e===n)return!0;var t=u(e),o=u(n);if(!t||!o)return!t&&!o&&String(e)===String(n);try{var i=Array.isArray(e),r=Array.isArray(n);if(i&&r)return e.length===n.length&&e.every((function(e,t){return L(e,n[t])}));if(e instanceof Date&&n instanceof Date)return e.getTime()===n.getTime();if(i||r)return!1;var a=Object.keys(e),s=Object.keys(n);return a.length===s.length&&a.every((function(t){return L(e[t],n[t])}))}catch(e){return!1}}function A(e,n){for(var t=0;t<e.length;t++)if(L(e[t],n))return t;return-1}function F(e){var n=!1;return function(){n||(n=!0,e.apply(this,arguments))}}function M(e,n){return e===n?0===e&&1/e!=1/n:e==e||n==n}var N=["component","directive","filter"],U=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch","renderTracked","renderTriggered"],$={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:D,isReservedAttr:D,isUnknownElement:D,getTagNamespace:R,parsePlatformTagName:B,mustUseProp:D,async:!0,_lifecycleHooks:U},H=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function q(e){var n=(e+"").charCodeAt(0);return 36===n||95===n}function W(e,n,t,o){Object.defineProperty(e,n,{value:t,enumerable:!!o,writable:!0,configurable:!0})}var V=new RegExp("[^".concat(H.source,".$_\\d]"));var G="__proto__"in{},J="undefined"!=typeof window,Y=J&&window.navigator.userAgent.toLowerCase(),K=Y&&/msie|trident/.test(Y),X=Y&&Y.indexOf("msie 9.0")>0,Z=Y&&Y.indexOf("edge/")>0;Y&&Y.indexOf("android");var Q=Y&&/iphone|ipad|ipod|ios/.test(Y);Y&&/chrome\/\d+/.test(Y),Y&&/phantomjs/.test(Y);var ee,ne=Y&&Y.match(/firefox\/(\d+)/),te={}.watch,oe=!1;if(J)try{var ie={};Object.defineProperty(ie,"passive",{get:function(){oe=!0}}),window.addEventListener("test-passive",null,ie)}catch(e){}var re=function(){return void 0===ee&&(ee=!J&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),ee},ae=J&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function se(e){return"function"==typeof e&&/native code/.test(e.toString())}var le,ce="undefined"!=typeof Symbol&&se(Symbol)&&"undefined"!=typeof Reflect&&se(Reflect.ownKeys);le="undefined"!=typeof Set&&se(Set)?Set:function(){function e(){this.set=Object.create(null)}return e.prototype.has=function(e){return!0===this.set[e]},e.prototype.add=function(e){this.set[e]=!0},e.prototype.clear=function(){this.set=Object.create(null)},e}();var ue=null;function de(e){void 0===e&&(e=null),e||ue&&ue._scope.off(),ue=e,e&&e._scope.on()}var pe=function(){function e(e,n,t,o,i,r,a,s){this.tag=e,this.data=n,this.children=t,this.text=o,this.elm=i,this.ns=void 0,this.context=r,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=n&&n.key,this.componentOptions=a,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1}return Object.defineProperty(e.prototype,"child",{get:function(){return this.componentInstance},enumerable:!1,configurable:!0}),e}(),fe=function(e){void 0===e&&(e="");var n=new pe;return n.text=e,n.isComment=!0,n};function me(e){return new pe(void 0,void 0,void 0,String(e))}function he(e){var n=new pe(e.tag,e.data,e.children&&e.children.slice(),e.text,e.elm,e.context,e.componentOptions,e.asyncFactory);return n.ns=e.ns,n.isStatic=e.isStatic,n.key=e.key,n.isComment=e.isComment,n.fnContext=e.fnContext,n.fnOptions=e.fnOptions,n.fnScopeId=e.fnScopeId,n.asyncMeta=e.asyncMeta,n.isCloned=!0,n}var ge=0,be=function(){function e(){this.id=ge++,this.subs=[]}return e.prototype.addSub=function(e){this.subs.push(e)},e.prototype.removeSub=function(e){x(this.subs,e)},e.prototype.depend=function(n){e.target&&e.target.addDep(this)},e.prototype.notify=function(e){var n=this.subs.slice();for(var t=0,o=n.length;t<o;t++){n[t].update()}},e}();be.target=null;var ye=[];function ve(e){ye.push(e),be.target=e}function xe(){ye.pop(),be.target=ye[ye.length-1]}var we=Array.prototype,ke=Object.create(we);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(e){var n=we[e];W(ke,e,(function(){for(var t=[],o=0;o<arguments.length;o++)t[o]=arguments[o];var i,r=n.apply(this,t),a=this.__ob__;switch(e){case"push":case"unshift":i=t;break;case"splice":i=t.slice(2)}return i&&a.observeArray(i),a.dep.notify(),r}))}));var Te=Object.getOwnPropertyNames(ke),je={},Se=!0;function Ie(e){Se=e}var ze={notify:R,depend:R,addSub:R,removeSub:R},_e=function(){function e(e,n,t){if(void 0===n&&(n=!1),void 0===t&&(t=!1),this.value=e,this.shallow=n,this.mock=t,this.dep=t?ze:new be,this.vmCount=0,W(e,"__ob__",this),i(e)){if(!t)if(G)e.__proto__=ke;else for(var o=0,r=Te.length;o<r;o++){W(e,s=Te[o],ke[s])}n||this.observeArray(e)}else{var a=Object.keys(e);for(o=0;o<a.length;o++){var s;Ee(e,s=a[o],je,void 0,n,t)}}}return e.prototype.observeArray=function(e){for(var n=0,t=e.length;n<t;n++)Pe(e[n],!1,this.mock)},e}();function Pe(e,n,t){var o;if(!(!u(e)||Ae(e)||e instanceof pe))return k(e,"__ob__")&&e.__ob__ instanceof _e?o=e.__ob__:!Se||!t&&re()||!i(e)&&!p(e)||!Object.isExtensible(e)||e.__v_skip||(o=new _e(e,n,t)),o}function Ee(e,n,t,o,r,a){var s=new be,l=Object.getOwnPropertyDescriptor(e,n);if(!l||!1!==l.configurable){var c=l&&l.get,u=l&&l.set;c&&!u||t!==je&&2!==arguments.length||(t=e[n]);var d=!r&&Pe(t,!1,a);return Object.defineProperty(e,n,{enumerable:!0,configurable:!0,get:function(){var n=c?c.call(e):t;return be.target&&(s.depend(),d&&(d.dep.depend(),i(n)&&Re(n))),Ae(n)&&!r?n.value:n},set:function(n){var o=c?c.call(e):t;if(M(o,n)){if(u)u.call(e,n);else{if(c)return;if(!r&&Ae(o)&&!Ae(n))return void(o.value=n);t=n}d=!r&&Pe(n,!1,a),s.notify()}}}),s}}function Ce(e,n,t){if(!Le(e)){var o=e.__ob__;return i(e)&&m(n)?(e.length=Math.max(e.length,n),e.splice(n,1,t),o&&!o.shallow&&o.mock&&Pe(t,!1,!0),t):n in e&&!(n in Object.prototype)?(e[n]=t,t):e._isVue||o&&o.vmCount?t:o?(Ee(o.value,n,t,void 0,o.shallow,o.mock),o.dep.notify(),t):(e[n]=t,t)}}function Oe(e,n){if(i(e)&&m(n))e.splice(n,1);else{var t=e.__ob__;e._isVue||t&&t.vmCount||Le(e)||k(e,n)&&(delete e[n],t&&t.dep.notify())}}function Re(e){for(var n=void 0,t=0,o=e.length;t<o;t++)(n=e[t])&&n.__ob__&&n.__ob__.dep.depend(),i(n)&&Re(n)}function De(e){return Be(e,!0),W(e,"__v_isShallow",!0),e}function Be(e,n){if(!Le(e)){Pe(e,n,re());0}}function Le(e){return!(!e||!e.__v_isReadonly)}function Ae(e){return!(!e||!0!==e.__v_isRef)}function Fe(e,n,t){Object.defineProperty(e,t,{enumerable:!0,configurable:!0,get:function(){var e=n[t];if(Ae(e))return e.value;var o=e&&e.__ob__;return o&&o.dep.depend(),e},set:function(e){var o=n[t];Ae(o)&&!Ae(e)?o.value=e:n[t]=e}})}"".concat("watcher"," callback"),"".concat("watcher"," getter"),"".concat("watcher"," cleanup");var Me;var Ne=function(){function e(e){void 0===e&&(e=!1),this.active=!0,this.effects=[],this.cleanups=[],!e&&Me&&(this.parent=Me,this.index=(Me.scopes||(Me.scopes=[])).push(this)-1)}return e.prototype.run=function(e){if(this.active){var n=Me;try{return Me=this,e()}finally{Me=n}}else 0},e.prototype.on=function(){Me=this},e.prototype.off=function(){Me=this.parent},e.prototype.stop=function(e){if(this.active){var n=void 0,t=void 0;for(n=0,t=this.effects.length;n<t;n++)this.effects[n].teardown();for(n=0,t=this.cleanups.length;n<t;n++)this.cleanups[n]();if(this.scopes)for(n=0,t=this.scopes.length;n<t;n++)this.scopes[n].stop(!0);if(this.parent&&!e){var o=this.parent.scopes.pop();o&&o!==this&&(this.parent.scopes[this.index]=o,o.index=this.index)}this.active=!1}},e}();function Ue(e){var n=e._provided,t=e.$parent&&e.$parent._provided;return t===n?e._provided=Object.create(t):n}var $e=T((function(e){var n="&"===e.charAt(0),t="~"===(e=n?e.slice(1):e).charAt(0),o="!"===(e=t?e.slice(1):e).charAt(0);return{name:e=o?e.slice(1):e,once:t,capture:o,passive:n}}));function He(e,n){function t(){var e=t.fns;if(!i(e))return In(e,null,arguments,n,"v-on handler");for(var o=e.slice(),r=0;r<o.length;r++)In(o[r],null,arguments,n,"v-on handler")}return t.fns=e,t}function qe(e,n,t,o,i,a){var l,c,u,d;for(l in e)c=e[l],u=n[l],d=$e(l),r(c)||(r(u)?(r(c.fns)&&(c=e[l]=He(c,a)),s(d.once)&&(c=e[l]=i(d.name,c,d.capture)),t(d.name,c,d.capture,d.passive,d.params)):c!==u&&(u.fns=c,e[l]=u));for(l in n)r(e[l])&&o((d=$e(l)).name,n[l],d.capture)}function We(e,n,t){var o;e instanceof pe&&(e=e.data.hook||(e.data.hook={}));var i=e[n];function l(){t.apply(this,arguments),x(o.fns,l)}r(i)?o=He([l]):a(i.fns)&&s(i.merged)?(o=i).fns.push(l):o=He([i,l]),o.merged=!0,e[n]=o}function Ve(e,n,t,o,i){if(a(n)){if(k(n,t))return e[t]=n[t],i||delete n[t],!0;if(k(n,o))return e[t]=n[o],i||delete n[o],!0}return!1}function Ge(e){return l(e)?[me(e)]:i(e)?function e(n,t){var o,c,u,d,p=[];for(o=0;o<n.length;o++)r(c=n[o])||"boolean"==typeof c||(u=p.length-1,d=p[u],i(c)?c.length>0&&(Je((c=e(c,"".concat(t||"","_").concat(o)))[0])&&Je(d)&&(p[u]=me(d.text+c[0].text),c.shift()),p.push.apply(p,c)):l(c)?Je(d)?p[u]=me(d.text+c):""!==c&&p.push(me(c)):Je(c)&&Je(d)?p[u]=me(d.text+c.text):(s(n._isVList)&&a(c.tag)&&r(c.key)&&a(t)&&(c.key="__vlist".concat(t,"_").concat(o,"__")),p.push(c)));return p}(e):void 0}function Je(e){return a(e)&&a(e.text)&&!1===e.isComment}function Ye(e,n){var t,o,r,s,l=null;if(i(e)||"string"==typeof e)for(l=new Array(e.length),t=0,o=e.length;t<o;t++)l[t]=n(e[t],t);else if("number"==typeof e)for(l=new Array(e),t=0;t<e;t++)l[t]=n(t+1,t);else if(u(e))if(ce&&e[Symbol.iterator]){l=[];for(var c=e[Symbol.iterator](),d=c.next();!d.done;)l.push(n(d.value,l.length)),d=c.next()}else for(r=Object.keys(e),l=new Array(r.length),t=0,o=r.length;t<o;t++)s=r[t],l[t]=n(e[s],s,t);return a(l)||(l=[]),l._isVList=!0,l}function Ke(e,n,t,o){var i,r=this.$scopedSlots[e];r?(t=t||{},o&&(t=C(C({},o),t)),i=r(t)||(c(n)?n():n)):i=this.$slots[e]||(c(n)?n():n);var a=t&&t.slot;return a?this.$createElement("template",{slot:a},i):i}function Xe(e){return Pt(this.$options,"filters",e,!0)||B}function Ze(e,n){return i(e)?-1===e.indexOf(n):e!==n}function Qe(e,n,t,o,i){var r=$.keyCodes[n]||t;return i&&o&&!$.keyCodes[n]?Ze(i,o):r?Ze(r,e):o?_(o)!==n:void 0===e}function en(e,n,t,o,r){if(t)if(u(t)){i(t)&&(t=O(t));var a=void 0,s=function(i){if("class"===i||"style"===i||v(i))a=e;else{var s=e.attrs&&e.attrs.type;a=o||$.mustUseProp(n,s,i)?e.domProps||(e.domProps={}):e.attrs||(e.attrs={})}var l=S(i),c=_(i);l in a||c in a||(a[i]=t[i],r&&((e.on||(e.on={}))["update:".concat(i)]=function(e){t[i]=e}))};for(var l in t)s(l)}else;return e}function nn(e,n){var t=this._staticTrees||(this._staticTrees=[]),o=t[e];return o&&!n||on(o=t[e]=this.$options.staticRenderFns[e].call(this._renderProxy,this._c,this),"__static__".concat(e),!1),o}function tn(e,n,t){return on(e,"__once__".concat(n).concat(t?"_".concat(t):""),!0),e}function on(e,n,t){if(i(e))for(var o=0;o<e.length;o++)e[o]&&"string"!=typeof e[o]&&rn(e[o],"".concat(n,"_").concat(o),t);else rn(e,n,t)}function rn(e,n,t){e.isStatic=!0,e.key=n,e.isOnce=t}function an(e,n){if(n)if(p(n)){var t=e.on=e.on?C({},e.on):{};for(var o in n){var i=t[o],r=n[o];t[o]=i?[].concat(i,r):r}}else;return e}function sn(e,n,t,o){n=n||{$stable:!t};for(var r=0;r<e.length;r++){var a=e[r];i(a)?sn(a,n,t):a&&(a.proxy&&(a.fn.proxy=!0),n[a.key]=a.fn)}return o&&(n.$key=o),n}function ln(e,n){for(var t=0;t<n.length;t+=2){var o=n[t];"string"==typeof o&&o&&(e[n[t]]=n[t+1])}return e}function cn(e,n){return"string"==typeof e?n+e:e}function un(e){e._o=tn,e._n=b,e._s=g,e._l=Ye,e._t=Ke,e._q=L,e._i=A,e._m=nn,e._f=Xe,e._k=Qe,e._b=en,e._v=me,e._e=fe,e._u=sn,e._g=an,e._d=ln,e._p=cn}function dn(e,n){if(!e||!e.length)return{};for(var t={},o=0,i=e.length;o<i;o++){var r=e[o],a=r.data;if(a&&a.attrs&&a.attrs.slot&&delete a.attrs.slot,r.context!==n&&r.fnContext!==n||!a||null==a.slot)(t.default||(t.default=[])).push(r);else{var s=a.slot,l=t[s]||(t[s]=[]);"template"===r.tag?l.push.apply(l,r.children||[]):l.push(r)}}for(var c in t)t[c].every(pn)&&delete t[c];return t}function pn(e){return e.isComment&&!e.asyncFactory||" "===e.text}function fn(e){return e.isComment&&e.asyncFactory}function mn(e,n,t,i){var r,a=Object.keys(t).length>0,s=n?!!n.$stable:!a,l=n&&n.$key;if(n){if(n._normalized)return n._normalized;if(s&&i&&i!==o&&l===i.$key&&!a&&!i.$hasNormal)return i;for(var c in r={},n)n[c]&&"$"!==c[0]&&(r[c]=hn(e,t,c,n[c]))}else r={};for(var u in t)u in r||(r[u]=gn(t,u));return n&&Object.isExtensible(n)&&(n._normalized=r),W(r,"$stable",s),W(r,"$key",l),W(r,"$hasNormal",a),r}function hn(e,n,t,o){var r=function(){var n=ue;de(e);var t=arguments.length?o.apply(null,arguments):o({}),r=(t=t&&"object"==typeof t&&!i(t)?[t]:Ge(t))&&t[0];return de(n),t&&(!r||1===t.length&&r.isComment&&!fn(r))?void 0:t};return o.proxy&&Object.defineProperty(n,t,{get:r,enumerable:!0,configurable:!0}),r}function gn(e,n){return function(){return e[n]}}function bn(e){return{get attrs(){if(!e._attrsProxy){var n=e._attrsProxy={};W(n,"_v_attr_proxy",!0),yn(n,e.$attrs,o,e,"$attrs")}return e._attrsProxy},get listeners(){e._listenersProxy||yn(e._listenersProxy={},e.$listeners,o,e,"$listeners");return e._listenersProxy},get slots(){return function(e){e._slotsProxy||xn(e._slotsProxy={},e.$scopedSlots);return e._slotsProxy}(e)},emit:P(e.$emit,e),expose:function(n){n&&Object.keys(n).forEach((function(t){return Fe(e,n,t)}))}}}function yn(e,n,t,o,i){var r=!1;for(var a in n)a in e?n[a]!==t[a]&&(r=!0):(r=!0,vn(e,a,o,i));for(var a in e)a in n||(r=!0,delete e[a]);return r}function vn(e,n,t,o){Object.defineProperty(e,n,{enumerable:!0,configurable:!0,get:function(){return t[o][n]}})}function xn(e,n){for(var t in n)e[t]=n[t];for(var t in e)t in n||delete e[t]}var wn=null;function kn(e,n){return(e.__esModule||ce&&"Module"===e[Symbol.toStringTag])&&(e=e.default),u(e)?n.extend(e):e}function Tn(e){if(i(e))for(var n=0;n<e.length;n++){var t=e[n];if(a(t)&&(a(t.componentOptions)||fn(t)))return t}}function jn(e,n,t,o,d,p){return(i(t)||l(t))&&(d=o,o=t,t=void 0),s(p)&&(d=2),function(e,n,t,o,l){if(a(t)&&a(t.__ob__))return fe();a(t)&&a(t.is)&&(n=t.is);if(!n)return fe();0;i(o)&&c(o[0])&&((t=t||{}).scopedSlots={default:o[0]},o.length=0);2===l?o=Ge(o):1===l&&(o=function(e){for(var n=0;n<e.length;n++)if(i(e[n]))return Array.prototype.concat.apply([],e);return e}(o));var d,p;if("string"==typeof n){var f=void 0;p=e.$vnode&&e.$vnode.ns||$.getTagNamespace(n),d=$.isReservedTag(n)?new pe($.parsePlatformTagName(n),t,o,void 0,void 0,e):t&&t.pre||!a(f=Pt(e.$options,"components",n))?new pe(n,t,o,void 0,void 0,e):vt(f,t,e,o,n)}else d=vt(n,t,e,o);return i(d)?d:a(d)?(a(p)&&function e(n,t,o){n.ns=t,"foreignObject"===n.tag&&(t=void 0,o=!0);if(a(n.children))for(var i=0,l=n.children.length;i<l;i++){var c=n.children[i];a(c.tag)&&(r(c.ns)||s(o)&&"svg"!==c.tag)&&e(c,t,o)}}(d,p),a(t)&&function(e){u(e.style)&&Un(e.style);u(e.class)&&Un(e.class)}(t),d):fe()}(e,n,t,o,d)}function Sn(e,n,t){ve();try{if(n)for(var o=n;o=o.$parent;){var i=o.$options.errorCaptured;if(i)for(var r=0;r<i.length;r++)try{if(!1===i[r].call(o,e,n,t))return}catch(e){zn(e,o,"errorCaptured hook")}}zn(e,n,t)}finally{xe()}}function In(e,n,t,o,i){var r;try{(r=t?e.apply(n,t):e.call(n))&&!r._isVue&&h(r)&&!r._handled&&(r.catch((function(e){return Sn(e,o,i+" (Promise/async)")})),r._handled=!0)}catch(e){Sn(e,o,i)}return r}function zn(e,n,t){if($.errorHandler)try{return $.errorHandler.call(null,e,n,t)}catch(n){n!==e&&_n(n,null,"config.errorHandler")}_n(e,n,t)}function _n(e,n,t){if(!J||"undefined"==typeof console)throw e;console.error(e)}var Pn,En=!1,Cn=[],On=!1;function Rn(){On=!1;var e=Cn.slice(0);Cn.length=0;for(var n=0;n<e.length;n++)e[n]()}if("undefined"!=typeof Promise&&se(Promise)){var Dn=Promise.resolve();Pn=function(){Dn.then(Rn),Q&&setTimeout(R)},En=!0}else if(K||"undefined"==typeof MutationObserver||!se(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Pn="undefined"!=typeof setImmediate&&se(setImmediate)?function(){setImmediate(Rn)}:function(){setTimeout(Rn,0)};else{var Bn=1,Ln=new MutationObserver(Rn),An=document.createTextNode(String(Bn));Ln.observe(An,{characterData:!0}),Pn=function(){Bn=(Bn+1)%2,An.data=String(Bn)},En=!0}function Fn(e,n){var t;if(Cn.push((function(){if(e)try{e.call(n)}catch(e){Sn(e,n,"nextTick")}else t&&t(n)})),On||(On=!0,Pn()),!e&&"undefined"!=typeof Promise)return new Promise((function(e){t=e}))}function Mn(e){return function(n,t){if(void 0===t&&(t=ue),t)return function(e,n,t){var o=e.$options;o[n]=St(o[n],t)}(t,e,n)}}Mn("beforeMount"),Mn("mounted"),Mn("beforeUpdate"),Mn("updated"),Mn("beforeDestroy"),Mn("destroyed"),Mn("activated"),Mn("deactivated"),Mn("serverPrefetch"),Mn("renderTracked"),Mn("renderTriggered"),Mn("errorCaptured");var Nn=new le;function Un(e){return function e(n,t){var o,r,a=i(n);if(!a&&!u(n)||Object.isFrozen(n)||n instanceof pe)return;if(n.__ob__){var s=n.__ob__.dep.id;if(t.has(s))return;t.add(s)}if(a)for(o=n.length;o--;)e(n[o],t);else if(Ae(n))e(n.value,t);else for(r=Object.keys(n),o=r.length;o--;)e(n[r[o]],t)}(e,Nn),Nn.clear(),e}var $n,Hn=0,qn=function(){function e(e,n,t,o,i){var r,a;r=this,void 0===(a=Me&&!Me._vm?Me:e?e._scope:void 0)&&(a=Me),a&&a.active&&a.effects.push(r),(this.vm=e)&&i&&(e._watcher=this),o?(this.deep=!!o.deep,this.user=!!o.user,this.lazy=!!o.lazy,this.sync=!!o.sync,this.before=o.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=t,this.id=++Hn,this.active=!0,this.post=!1,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new le,this.newDepIds=new le,this.expression="",c(n)?this.getter=n:(this.getter=function(e){if(!V.test(e)){var n=e.split(".");return function(e){for(var t=0;t<n.length;t++){if(!e)return;e=e[n[t]]}return e}}}(n),this.getter||(this.getter=R)),this.value=this.lazy?void 0:this.get()}return e.prototype.get=function(){var e;ve(this);var n=this.vm;try{e=this.getter.call(n,n)}catch(e){if(!this.user)throw e;Sn(e,n,'getter for watcher "'.concat(this.expression,'"'))}finally{this.deep&&Un(e),xe(),this.cleanupDeps()}return e},e.prototype.addDep=function(e){var n=e.id;this.newDepIds.has(n)||(this.newDepIds.add(n),this.newDeps.push(e),this.depIds.has(n)||e.addSub(this))},e.prototype.cleanupDeps=function(){for(var e=this.deps.length;e--;){var n=this.deps[e];this.newDepIds.has(n.id)||n.removeSub(this)}var t=this.depIds;this.depIds=this.newDepIds,this.newDepIds=t,this.newDepIds.clear(),t=this.deps,this.deps=this.newDeps,this.newDeps=t,this.newDeps.length=0},e.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():dt(this)},e.prototype.run=function(){if(this.active){var e=this.get();if(e!==this.value||u(e)||this.deep){var n=this.value;if(this.value=e,this.user){var t='callback for watcher "'.concat(this.expression,'"');In(this.cb,this.vm,[e,n],this.vm,t)}else this.cb.call(this.vm,e,n)}}},e.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},e.prototype.depend=function(){for(var e=this.deps.length;e--;)this.deps[e].depend()},e.prototype.teardown=function(){if(this.vm&&!this.vm._isBeingDestroyed&&x(this.vm._scope.effects,this),this.active){for(var e=this.deps.length;e--;)this.deps[e].removeSub(this);this.active=!1,this.onStop&&this.onStop()}},e}();function Wn(e,n){$n.$on(e,n)}function Vn(e,n){$n.$off(e,n)}function Gn(e,n){var t=$n;return function o(){var i=n.apply(null,arguments);null!==i&&t.$off(e,o)}}function Jn(e,n,t){$n=e,qe(n,t||{},Wn,Vn,Gn,e),$n=void 0}var Yn=null;function Kn(e){var n=Yn;return Yn=e,function(){Yn=n}}function Xn(e){for(;e&&(e=e.$parent);)if(e._inactive)return!0;return!1}function Zn(e,n){if(n){if(e._directInactive=!1,Xn(e))return}else if(e._directInactive)return;if(e._inactive||null===e._inactive){e._inactive=!1;for(var t=0;t<e.$children.length;t++)Zn(e.$children[t]);Qn(e,"activated")}}function Qn(e,n,t,o){void 0===o&&(o=!0),ve();var i=ue;o&&de(e);var r=e.$options[n],a="".concat(n," hook");if(r)for(var s=0,l=r.length;s<l;s++)In(r[s],e,t||null,e,a);e._hasHookEvent&&e.$emit("hook:"+n),o&&de(i),xe()}var et=[],nt=[],tt={},ot=!1,it=!1,rt=0;var at=0,st=Date.now;if(J&&!K){var lt=window.performance;lt&&"function"==typeof lt.now&&st()>document.createEvent("Event").timeStamp&&(st=function(){return lt.now()})}var ct=function(e,n){if(e.post){if(!n.post)return 1}else if(n.post)return-1;return e.id-n.id};function ut(){var e,n;for(at=st(),it=!0,et.sort(ct),rt=0;rt<et.length;rt++)(e=et[rt]).before&&e.before(),n=e.id,tt[n]=null,e.run();var t=nt.slice(),o=et.slice();rt=et.length=nt.length=0,tt={},ot=it=!1,function(e){for(var n=0;n<e.length;n++)e[n]._inactive=!0,Zn(e[n],!0)}(t),function(e){var n=e.length;for(;n--;){var t=e[n],o=t.vm;o&&o._watcher===t&&o._isMounted&&!o._isDestroyed&&Qn(o,"updated")}}(o),ae&&$.devtools&&ae.emit("flush")}function dt(e){var n=e.id;if(null==tt[n]&&(e!==be.target||!e.noRecurse)){if(tt[n]=!0,it){for(var t=et.length-1;t>rt&&et[t].id>e.id;)t--;et.splice(t+1,0,e)}else et.push(e);ot||(ot=!0,Fn(ut))}}function pt(e,n){if(e){for(var t=Object.create(null),o=ce?Reflect.ownKeys(e):Object.keys(e),i=0;i<o.length;i++){var r=o[i];if("__ob__"!==r){var a=e[r].from;if(a in n._provided)t[r]=n._provided[a];else if("default"in e[r]){var s=e[r].default;t[r]=c(s)?s.call(n):s}else 0}}return t}}function ft(e,n,t,r,a){var l,c=this,u=a.options;k(r,"_uid")?(l=Object.create(r))._original=r:(l=r,r=r._original);var d=s(u._compiled),p=!d;this.data=e,this.props=n,this.children=t,this.parent=r,this.listeners=e.on||o,this.injections=pt(u.inject,r),this.slots=function(){return c.$slots||mn(r,e.scopedSlots,c.$slots=dn(t,r)),c.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return mn(r,e.scopedSlots,this.slots())}}),d&&(this.$options=u,this.$slots=this.slots(),this.$scopedSlots=mn(r,e.scopedSlots,this.$slots)),u._scopeId?this._c=function(e,n,t,o){var a=jn(l,e,n,t,o,p);return a&&!i(a)&&(a.fnScopeId=u._scopeId,a.fnContext=r),a}:this._c=function(e,n,t,o){return jn(l,e,n,t,o,p)}}function mt(e,n,t,o,i){var r=he(e);return r.fnContext=t,r.fnOptions=o,n.slot&&((r.data||(r.data={})).slot=n.slot),r}function ht(e,n){for(var t in n)e[S(t)]=n[t]}function gt(e){return e.name||e.__name||e._componentTag}un(ft.prototype);var bt={init:function(e,n){if(e.componentInstance&&!e.componentInstance._isDestroyed&&e.data.keepAlive){var t=e;bt.prepatch(t,t)}else{(e.componentInstance=function(e,n){var t={_isComponent:!0,_parentVnode:e,parent:n},o=e.data.inlineTemplate;a(o)&&(t.render=o.render,t.staticRenderFns=o.staticRenderFns);return new e.componentOptions.Ctor(t)}(e,Yn)).$mount(n?e.elm:void 0,n)}},prepatch:function(e,n){var t=n.componentOptions;!function(e,n,t,i,r){var a=i.data.scopedSlots,s=e.$scopedSlots,l=!!(a&&!a.$stable||s!==o&&!s.$stable||a&&e.$scopedSlots.$key!==a.$key||!a&&e.$scopedSlots.$key),c=!!(r||e.$options._renderChildren||l),u=e.$vnode;e.$options._parentVnode=i,e.$vnode=i,e._vnode&&(e._vnode.parent=i),e.$options._renderChildren=r;var d=i.data.attrs||o;e._attrsProxy&&yn(e._attrsProxy,d,u.data&&u.data.attrs||o,e,"$attrs")&&(c=!0),e.$attrs=d,t=t||o;var p=e.$options._parentListeners;if(e._listenersProxy&&yn(e._listenersProxy,t,p||o,e,"$listeners"),e.$listeners=e.$options._parentListeners=t,Jn(e,t,p),n&&e.$options.props){Ie(!1);for(var f=e._props,m=e.$options._propKeys||[],h=0;h<m.length;h++){var g=m[h],b=e.$options.props;f[g]=Et(g,b,n,e)}Ie(!0),e.$options.propsData=n}c&&(e.$slots=dn(r,i.context),e.$forceUpdate())}(n.componentInstance=e.componentInstance,t.propsData,t.listeners,n,t.children)},insert:function(e){var n,t=e.context,o=e.componentInstance;o._isMounted||(o._isMounted=!0,Qn(o,"mounted")),e.data.keepAlive&&(t._isMounted?((n=o)._inactive=!1,nt.push(n)):Zn(o,!0))},destroy:function(e){var n=e.componentInstance;n._isDestroyed||(e.data.keepAlive?function e(n,t){if(!(t&&(n._directInactive=!0,Xn(n))||n._inactive)){n._inactive=!0;for(var o=0;o<n.$children.length;o++)e(n.$children[o]);Qn(n,"deactivated")}}(n,!0):n.$destroy())}},yt=Object.keys(bt);function vt(e,n,t,l,c){if(!r(e)){var d=t.$options._base;if(u(e)&&(e=d.extend(e)),"function"==typeof e){var p;if(r(e.cid)&&void 0===(e=function(e,n){if(s(e.error)&&a(e.errorComp))return e.errorComp;if(a(e.resolved))return e.resolved;var t=wn;if(t&&a(e.owners)&&-1===e.owners.indexOf(t)&&e.owners.push(t),s(e.loading)&&a(e.loadingComp))return e.loadingComp;if(t&&!a(e.owners)){var o=e.owners=[t],i=!0,l=null,c=null;t.$on("hook:destroyed",(function(){return x(o,t)}));var d=function(e){for(var n=0,t=o.length;n<t;n++)o[n].$forceUpdate();e&&(o.length=0,null!==l&&(clearTimeout(l),l=null),null!==c&&(clearTimeout(c),c=null))},p=F((function(t){e.resolved=kn(t,n),i?o.length=0:d(!0)})),f=F((function(n){a(e.errorComp)&&(e.error=!0,d(!0))})),m=e(p,f);return u(m)&&(h(m)?r(e.resolved)&&m.then(p,f):h(m.component)&&(m.component.then(p,f),a(m.error)&&(e.errorComp=kn(m.error,n)),a(m.loading)&&(e.loadingComp=kn(m.loading,n),0===m.delay?e.loading=!0:l=setTimeout((function(){l=null,r(e.resolved)&&r(e.error)&&(e.loading=!0,d(!1))}),m.delay||200)),a(m.timeout)&&(c=setTimeout((function(){c=null,r(e.resolved)&&f(null)}),m.timeout)))),i=!1,e.loading?e.loadingComp:e.resolved}}(p=e,d)))return function(e,n,t,o,i){var r=fe();return r.asyncFactory=e,r.asyncMeta={data:n,context:t,children:o,tag:i},r}(p,n,t,l,c);n=n||{},qt(e),a(n.model)&&function(e,n){var t=e.model&&e.model.prop||"value",o=e.model&&e.model.event||"input";(n.attrs||(n.attrs={}))[t]=n.model.value;var r=n.on||(n.on={}),s=r[o],l=n.model.callback;a(s)?(i(s)?-1===s.indexOf(l):s!==l)&&(r[o]=[l].concat(s)):r[o]=l}(e.options,n);var f=function(e,n,t){var o=n.options.props;if(!r(o)){var i={},s=e.attrs,l=e.props;if(a(s)||a(l))for(var c in o){var u=_(c);Ve(i,l,c,u,!0)||Ve(i,s,c,u,!1)}return i}}(n,e);if(s(e.options.functional))return function(e,n,t,r,s){var l=e.options,c={},u=l.props;if(a(u))for(var d in u)c[d]=Et(d,u,n||o);else a(t.attrs)&&ht(c,t.attrs),a(t.props)&&ht(c,t.props);var p=new ft(t,c,s,r,e),f=l.render.call(null,p._c,p);if(f instanceof pe)return mt(f,t,p.parent,l,p);if(i(f)){for(var m=Ge(f)||[],h=new Array(m.length),g=0;g<m.length;g++)h[g]=mt(m[g],t,p.parent,l,p);return h}}(e,f,n,t,l);var m=n.on;if(n.on=n.nativeOn,s(e.options.abstract)){var g=n.slot;n={},g&&(n.slot=g)}!function(e){for(var n=e.hook||(e.hook={}),t=0;t<yt.length;t++){var o=yt[t],i=n[o],r=bt[o];i===r||i&&i._merged||(n[o]=i?xt(r,i):r)}}(n);var b=gt(e.options)||c;return new pe("vue-component-".concat(e.cid).concat(b?"-".concat(b):""),n,void 0,void 0,void 0,t,{Ctor:e,propsData:f,listeners:m,tag:c,children:l},p)}}}function xt(e,n){var t=function(t,o){e(t,o),n(t,o)};return t._merged=!0,t}var wt=R,kt=$.optionMergeStrategies;function Tt(e,n){if(!n)return e;for(var t,o,i,r=ce?Reflect.ownKeys(n):Object.keys(n),a=0;a<r.length;a++)"__ob__"!==(t=r[a])&&(o=e[t],i=n[t],k(e,t)?o!==i&&p(o)&&p(i)&&Tt(o,i):Ce(e,t,i));return e}function jt(e,n,t){return t?function(){var o=c(n)?n.call(t,t):n,i=c(e)?e.call(t,t):e;return o?Tt(o,i):i}:n?e?function(){return Tt(c(n)?n.call(this,this):n,c(e)?e.call(this,this):e)}:n:e}function St(e,n){var t=n?e?e.concat(n):i(n)?n:[n]:e;return t?function(e){for(var n=[],t=0;t<e.length;t++)-1===n.indexOf(e[t])&&n.push(e[t]);return n}(t):t}function It(e,n,t,o){var i=Object.create(e||null);return n?C(i,n):i}kt.data=function(e,n,t){return t?jt(e,n,t):n&&"function"!=typeof n?e:jt(e,n)},U.forEach((function(e){kt[e]=St})),N.forEach((function(e){kt[e+"s"]=It})),kt.watch=function(e,n,t,o){if(e===te&&(e=void 0),n===te&&(n=void 0),!n)return Object.create(e||null);if(!e)return n;var r={};for(var a in C(r,e),n){var s=r[a],l=n[a];s&&!i(s)&&(s=[s]),r[a]=s?s.concat(l):i(l)?l:[l]}return r},kt.props=kt.methods=kt.inject=kt.computed=function(e,n,t,o){if(!e)return n;var i=Object.create(null);return C(i,e),n&&C(i,n),i},kt.provide=jt;var zt=function(e,n){return void 0===n?e:n};function _t(e,n,t){if(c(n)&&(n=n.options),function(e,n){var t=e.props;if(t){var o,r,a={};if(i(t))for(o=t.length;o--;)"string"==typeof(r=t[o])&&(a[S(r)]={type:null});else if(p(t))for(var s in t)r=t[s],a[S(s)]=p(r)?r:{type:r};else 0;e.props=a}}(n),function(e,n){var t=e.inject;if(t){var o=e.inject={};if(i(t))for(var r=0;r<t.length;r++)o[t[r]]={from:t[r]};else if(p(t))for(var a in t){var s=t[a];o[a]=p(s)?C({from:a},s):{from:s}}else 0}}(n),function(e){var n=e.directives;if(n)for(var t in n){var o=n[t];c(o)&&(n[t]={bind:o,update:o})}}(n),!n._base&&(n.extends&&(e=_t(e,n.extends,t)),n.mixins))for(var o=0,r=n.mixins.length;o<r;o++)e=_t(e,n.mixins[o],t);var a,s={};for(a in e)l(a);for(a in n)k(e,a)||l(a);function l(o){var i=kt[o]||zt;s[o]=i(e[o],n[o],t,o)}return s}function Pt(e,n,t,o){if("string"==typeof t){var i=e[n];if(k(i,t))return i[t];var r=S(t);if(k(i,r))return i[r];var a=I(r);return k(i,a)?i[a]:i[t]||i[r]||i[a]}}function Et(e,n,t,o){var i=n[e],r=!k(t,e),a=t[e],s=Dt(Boolean,i.type);if(s>-1)if(r&&!k(i,"default"))a=!1;else if(""===a||a===_(e)){var l=Dt(String,i.type);(l<0||s<l)&&(a=!0)}if(void 0===a){a=function(e,n,t){if(!k(n,"default"))return;var o=n.default;0;if(e&&e.$options.propsData&&void 0===e.$options.propsData[t]&&void 0!==e._props[t])return e._props[t];return c(o)&&"Function"!==Ot(n.type)?o.call(e):o}(o,i,e);var u=Se;Ie(!0),Pe(a),Ie(u)}return a}var Ct=/^\s*function (\w+)/;function Ot(e){var n=e&&e.toString().match(Ct);return n?n[1]:""}function Rt(e,n){return Ot(e)===Ot(n)}function Dt(e,n){if(!i(n))return Rt(n,e)?0:-1;for(var t=0,o=n.length;t<o;t++)if(Rt(n[t],e))return t;return-1}var Bt={enumerable:!0,configurable:!0,get:R,set:R};function Lt(e,n,t){Bt.get=function(){return this[n][t]},Bt.set=function(e){this[n][t]=e},Object.defineProperty(e,t,Bt)}function At(e){var n=e.$options;if(n.props&&function(e,n){var t=e.$options.propsData||{},o=e._props=De({}),i=e.$options._propKeys=[];e.$parent&&Ie(!1);var r=function(r){i.push(r);var a=Et(r,n,t,e);Ee(o,r,a),r in e||Lt(e,"_props",r)};for(var a in n)r(a);Ie(!0)}(e,n.props),function(e){var n=e.$options,t=n.setup;if(t){var o=e._setupContext=bn(e);de(e),ve();var i=In(t,null,[e._props||De({}),o],e,"setup");if(xe(),de(),c(i))n.render=i;else if(u(i))if(e._setupState=i,i.__sfc){var r=e._setupProxy={};for(var a in i)"__sfc"!==a&&Fe(r,i,a)}else for(var a in i)q(a)||Fe(e,i,a);else 0}}(e),n.methods&&function(e,n){e.$options.props;for(var t in n)e[t]="function"!=typeof n[t]?R:P(n[t],e)}(e,n.methods),n.data)!function(e){var n=e.$options.data;p(n=e._data=c(n)?function(e,n){ve();try{return e.call(n,n)}catch(e){return Sn(e,n,"data()"),{}}finally{xe()}}(n,e):n||{})||(n={});var t=Object.keys(n),o=e.$options.props,i=(e.$options.methods,t.length);for(;i--;){var r=t[i];0,o&&k(o,r)||q(r)||Lt(e,"_data",r)}var a=Pe(n);a&&a.vmCount++}(e);else{var t=Pe(e._data={});t&&t.vmCount++}n.computed&&function(e,n){var t=e._computedWatchers=Object.create(null),o=re();for(var i in n){var r=n[i],a=c(r)?r:r.get;0,o||(t[i]=new qn(e,a||R,R,Ft)),i in e||Mt(e,i,r)}}(e,n.computed),n.watch&&n.watch!==te&&function(e,n){for(var t in n){var o=n[t];if(i(o))for(var r=0;r<o.length;r++)$t(e,t,o[r]);else $t(e,t,o)}}(e,n.watch)}var Ft={lazy:!0};function Mt(e,n,t){var o=!re();c(t)?(Bt.get=o?Nt(n):Ut(t),Bt.set=R):(Bt.get=t.get?o&&!1!==t.cache?Nt(n):Ut(t.get):R,Bt.set=t.set||R),Object.defineProperty(e,n,Bt)}function Nt(e){return function(){var n=this._computedWatchers&&this._computedWatchers[e];if(n)return n.dirty&&n.evaluate(),be.target&&n.depend(),n.value}}function Ut(e){return function(){return e.call(this,this)}}function $t(e,n,t,o){return p(t)&&(o=t,t=t.handler),"string"==typeof t&&(t=e[t]),e.$watch(n,t,o)}var Ht=0;function qt(e){var n=e.options;if(e.super){var t=qt(e.super);if(t!==e.superOptions){e.superOptions=t;var o=function(e){var n,t=e.options,o=e.sealedOptions;for(var i in t)t[i]!==o[i]&&(n||(n={}),n[i]=t[i]);return n}(e);o&&C(e.extendOptions,o),(n=e.options=_t(t,e.extendOptions)).name&&(n.components[n.name]=e)}}return n}function Wt(e){this._init(e)}function Vt(e){e.cid=0;var n=1;e.extend=function(e){e=e||{};var t=this,o=t.cid,i=e._Ctor||(e._Ctor={});if(i[o])return i[o];var r=gt(e)||gt(t.options);var a=function(e){this._init(e)};return(a.prototype=Object.create(t.prototype)).constructor=a,a.cid=n++,a.options=_t(t.options,e),a.super=t,a.options.props&&function(e){var n=e.options.props;for(var t in n)Lt(e.prototype,"_props",t)}(a),a.options.computed&&function(e){var n=e.options.computed;for(var t in n)Mt(e.prototype,t,n[t])}(a),a.extend=t.extend,a.mixin=t.mixin,a.use=t.use,N.forEach((function(e){a[e]=t[e]})),r&&(a.options.components[r]=a),a.superOptions=t.options,a.extendOptions=e,a.sealedOptions=C({},a.options),i[o]=a,a}}function Gt(e){return e&&(gt(e.Ctor.options)||e.tag)}function Jt(e,n){return i(e)?e.indexOf(n)>-1:"string"==typeof e?e.split(",").indexOf(n)>-1:!!f(e)&&e.test(n)}function Yt(e,n){var t=e.cache,o=e.keys,i=e._vnode;for(var r in t){var a=t[r];if(a){var s=a.name;s&&!n(s)&&Kt(t,r,o,i)}}}function Kt(e,n,t,o){var i=e[n];!i||o&&i.tag===o.tag||i.componentInstance.$destroy(),e[n]=null,x(t,n)}!function(e){e.prototype._init=function(e){var n=this;n._uid=Ht++,n._isVue=!0,n.__v_skip=!0,n._scope=new Ne(!0),n._scope._vm=!0,e&&e._isComponent?function(e,n){var t=e.$options=Object.create(e.constructor.options),o=n._parentVnode;t.parent=n.parent,t._parentVnode=o;var i=o.componentOptions;t.propsData=i.propsData,t._parentListeners=i.listeners,t._renderChildren=i.children,t._componentTag=i.tag,n.render&&(t.render=n.render,t.staticRenderFns=n.staticRenderFns)}(n,e):n.$options=_t(qt(n.constructor),e||{},n),n._renderProxy=n,n._self=n,function(e){var n=e.$options,t=n.parent;if(t&&!n.abstract){for(;t.$options.abstract&&t.$parent;)t=t.$parent;t.$children.push(e)}e.$parent=t,e.$root=t?t.$root:e,e.$children=[],e.$refs={},e._provided=t?t._provided:Object.create(null),e._watcher=null,e._inactive=null,e._directInactive=!1,e._isMounted=!1,e._isDestroyed=!1,e._isBeingDestroyed=!1}(n),function(e){e._events=Object.create(null),e._hasHookEvent=!1;var n=e.$options._parentListeners;n&&Jn(e,n)}(n),function(e){e._vnode=null,e._staticTrees=null;var n=e.$options,t=e.$vnode=n._parentVnode,i=t&&t.context;e.$slots=dn(n._renderChildren,i),e.$scopedSlots=t?mn(e.$parent,t.data.scopedSlots,e.$slots):o,e._c=function(n,t,o,i){return jn(e,n,t,o,i,!1)},e.$createElement=function(n,t,o,i){return jn(e,n,t,o,i,!0)};var r=t&&t.data;Ee(e,"$attrs",r&&r.attrs||o,null,!0),Ee(e,"$listeners",n._parentListeners||o,null,!0)}(n),Qn(n,"beforeCreate",void 0,!1),function(e){var n=pt(e.$options.inject,e);n&&(Ie(!1),Object.keys(n).forEach((function(t){Ee(e,t,n[t])})),Ie(!0))}(n),At(n),function(e){var n=e.$options.provide;if(n){var t=c(n)?n.call(e):n;if(!u(t))return;for(var o=Ue(e),i=ce?Reflect.ownKeys(t):Object.keys(t),r=0;r<i.length;r++){var a=i[r];Object.defineProperty(o,a,Object.getOwnPropertyDescriptor(t,a))}}}(n),Qn(n,"created"),n.$options.el&&n.$mount(n.$options.el)}}(Wt),function(e){var n={get:function(){return this._data}},t={get:function(){return this._props}};Object.defineProperty(e.prototype,"$data",n),Object.defineProperty(e.prototype,"$props",t),e.prototype.$set=Ce,e.prototype.$delete=Oe,e.prototype.$watch=function(e,n,t){if(p(n))return $t(this,e,n,t);(t=t||{}).user=!0;var o=new qn(this,e,n,t);if(t.immediate){var i='callback for immediate watcher "'.concat(o.expression,'"');ve(),In(n,this,[o.value],this,i),xe()}return function(){o.teardown()}}}(Wt),function(e){var n=/^hook:/;e.prototype.$on=function(e,t){var o=this;if(i(e))for(var r=0,a=e.length;r<a;r++)o.$on(e[r],t);else(o._events[e]||(o._events[e]=[])).push(t),n.test(e)&&(o._hasHookEvent=!0);return o},e.prototype.$once=function(e,n){var t=this;function o(){t.$off(e,o),n.apply(t,arguments)}return o.fn=n,t.$on(e,o),t},e.prototype.$off=function(e,n){var t=this;if(!arguments.length)return t._events=Object.create(null),t;if(i(e)){for(var o=0,r=e.length;o<r;o++)t.$off(e[o],n);return t}var a,s=t._events[e];if(!s)return t;if(!n)return t._events[e]=null,t;for(var l=s.length;l--;)if((a=s[l])===n||a.fn===n){s.splice(l,1);break}return t},e.prototype.$emit=function(e){var n=this,t=n._events[e];if(t){t=t.length>1?E(t):t;for(var o=E(arguments,1),i='event handler for "'.concat(e,'"'),r=0,a=t.length;r<a;r++)In(t[r],n,o,n,i)}return n}}(Wt),function(e){e.prototype._update=function(e,n){var t=this,o=t.$el,i=t._vnode,r=Kn(t);t._vnode=e,t.$el=i?t.__patch__(i,e):t.__patch__(t.$el,e,n,!1),r(),o&&(o.__vue__=null),t.$el&&(t.$el.__vue__=t);for(var a=t;a&&a.$vnode&&a.$parent&&a.$vnode===a.$parent._vnode;)a.$parent.$el=a.$el,a=a.$parent},e.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},e.prototype.$destroy=function(){var e=this;if(!e._isBeingDestroyed){Qn(e,"beforeDestroy"),e._isBeingDestroyed=!0;var n=e.$parent;!n||n._isBeingDestroyed||e.$options.abstract||x(n.$children,e),e._scope.stop(),e._data.__ob__&&e._data.__ob__.vmCount--,e._isDestroyed=!0,e.__patch__(e._vnode,null),Qn(e,"destroyed"),e.$off(),e.$el&&(e.$el.__vue__=null),e.$vnode&&(e.$vnode.parent=null)}}}(Wt),function(e){un(e.prototype),e.prototype.$nextTick=function(e){return Fn(e,this)},e.prototype._render=function(){var e,n=this,t=n.$options,o=t.render,r=t._parentVnode;r&&n._isMounted&&(n.$scopedSlots=mn(n.$parent,r.data.scopedSlots,n.$slots,n.$scopedSlots),n._slotsProxy&&xn(n._slotsProxy,n.$scopedSlots)),n.$vnode=r;try{de(n),wn=n,e=o.call(n._renderProxy,n.$createElement)}catch(t){Sn(t,n,"render"),e=n._vnode}finally{wn=null,de()}return i(e)&&1===e.length&&(e=e[0]),e instanceof pe||(e=fe()),e.parent=r,e}}(Wt);var Xt=[String,RegExp,Array],Zt={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:Xt,exclude:Xt,max:[String,Number]},methods:{cacheVNode:function(){var e=this.cache,n=this.keys,t=this.vnodeToCache,o=this.keyToCache;if(t){var i=t.tag,r=t.componentInstance,a=t.componentOptions;e[o]={name:Gt(a),tag:i,componentInstance:r},n.push(o),this.max&&n.length>parseInt(this.max)&&Kt(e,n[0],n,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var e in this.cache)Kt(this.cache,e,this.keys)},mounted:function(){var e=this;this.cacheVNode(),this.$watch("include",(function(n){Yt(e,(function(e){return Jt(n,e)}))})),this.$watch("exclude",(function(n){Yt(e,(function(e){return!Jt(n,e)}))}))},updated:function(){this.cacheVNode()},render:function(){var e=this.$slots.default,n=Tn(e),t=n&&n.componentOptions;if(t){var o=Gt(t),i=this.include,r=this.exclude;if(i&&(!o||!Jt(i,o))||r&&o&&Jt(r,o))return n;var a=this.cache,s=this.keys,l=null==n.key?t.Ctor.cid+(t.tag?"::".concat(t.tag):""):n.key;a[l]?(n.componentInstance=a[l].componentInstance,x(s,l),s.push(l)):(this.vnodeToCache=n,this.keyToCache=l),n.data.keepAlive=!0}return n||e&&e[0]}}};!function(e){var n={get:function(){return $}};Object.defineProperty(e,"config",n),e.util={warn:wt,extend:C,mergeOptions:_t,defineReactive:Ee},e.set=Ce,e.delete=Oe,e.nextTick=Fn,e.observable=function(e){return Pe(e),e},e.options=Object.create(null),N.forEach((function(n){e.options[n+"s"]=Object.create(null)})),e.options._base=e,C(e.options.components,Zt),function(e){e.use=function(e){var n=this._installedPlugins||(this._installedPlugins=[]);if(n.indexOf(e)>-1)return this;var t=E(arguments,1);return t.unshift(this),c(e.install)?e.install.apply(e,t):c(e)&&e.apply(null,t),n.push(e),this}}(e),function(e){e.mixin=function(e){return this.options=_t(this.options,e),this}}(e),Vt(e),function(e){N.forEach((function(n){e[n]=function(e,t){return t?("component"===n&&p(t)&&(t.name=t.name||e,t=this.options._base.extend(t)),"directive"===n&&c(t)&&(t={bind:t,update:t}),this.options[n+"s"][e]=t,t):this.options[n+"s"][e]}}))}(e)}(Wt),Object.defineProperty(Wt.prototype,"$isServer",{get:re}),Object.defineProperty(Wt.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(Wt,"FunctionalRenderContext",{value:ft}),Wt.version="2.7.10";var Qt=y("style,class"),eo=y("input,textarea,option,select,progress"),no=y("contenteditable,draggable,spellcheck"),to=y("events,caret,typing,plaintext-only"),oo=y("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),io="http://www.w3.org/1999/xlink",ro=function(e){return":"===e.charAt(5)&&"xlink"===e.slice(0,5)},ao=function(e){return ro(e)?e.slice(6,e.length):""},so=function(e){return null==e||!1===e};function lo(e){for(var n=e.data,t=e,o=e;a(o.componentInstance);)(o=o.componentInstance._vnode)&&o.data&&(n=co(o.data,n));for(;a(t=t.parent);)t&&t.data&&(n=co(n,t.data));return function(e,n){if(a(e)||a(n))return uo(e,po(n));return""}(n.staticClass,n.class)}function co(e,n){return{staticClass:uo(e.staticClass,n.staticClass),class:a(e.class)?[e.class,n.class]:n.class}}function uo(e,n){return e?n?e+" "+n:e:n||""}function po(e){return Array.isArray(e)?function(e){for(var n,t="",o=0,i=e.length;o<i;o++)a(n=po(e[o]))&&""!==n&&(t&&(t+=" "),t+=n);return t}(e):u(e)?function(e){var n="";for(var t in e)e[t]&&(n&&(n+=" "),n+=t);return n}(e):"string"==typeof e?e:""}var fo={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},mo=y("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),ho=y("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),go=function(e){return mo(e)||ho(e)};var bo=Object.create(null);var yo=y("text,number,password,search,email,tel,url");var vo=Object.freeze({__proto__:null,createElement:function(e,n){var t=document.createElement(e);return"select"!==e||n.data&&n.data.attrs&&void 0!==n.data.attrs.multiple&&t.setAttribute("multiple","multiple"),t},createElementNS:function(e,n){return document.createElementNS(fo[e],n)},createTextNode:function(e){return document.createTextNode(e)},createComment:function(e){return document.createComment(e)},insertBefore:function(e,n,t){e.insertBefore(n,t)},removeChild:function(e,n){e.removeChild(n)},appendChild:function(e,n){e.appendChild(n)},parentNode:function(e){return e.parentNode},nextSibling:function(e){return e.nextSibling},tagName:function(e){return e.tagName},setTextContent:function(e,n){e.textContent=n},setStyleScope:function(e,n){e.setAttribute(n,"")}}),xo={create:function(e,n){wo(n)},update:function(e,n){e.data.ref!==n.data.ref&&(wo(e,!0),wo(n))},destroy:function(e){wo(e,!0)}};function wo(e,n){var t=e.data.ref;if(a(t)){var o=e.context,r=e.componentInstance||e.elm,s=n?null:r,l=n?void 0:r;if(c(t))In(t,o,[s],o,"template ref function");else{var u=e.data.refInFor,d="string"==typeof t||"number"==typeof t,p=Ae(t),f=o.$refs;if(d||p)if(u){var m=d?f[t]:t.value;n?i(m)&&x(m,r):i(m)?m.includes(r)||m.push(r):d?(f[t]=[r],ko(o,t,f[t])):t.value=[r]}else if(d){if(n&&f[t]!==r)return;f[t]=l,ko(o,t,s)}else if(p){if(n&&t.value!==r)return;t.value=s}else 0}}}function ko(e,n,t){var o=e._setupState;o&&k(o,n)&&(Ae(o[n])?o[n].value=t:o[n]=t)}var To=new pe("",{},[]),jo=["create","activate","update","remove","destroy"];function So(e,n){return e.key===n.key&&e.asyncFactory===n.asyncFactory&&(e.tag===n.tag&&e.isComment===n.isComment&&a(e.data)===a(n.data)&&function(e,n){if("input"!==e.tag)return!0;var t,o=a(t=e.data)&&a(t=t.attrs)&&t.type,i=a(t=n.data)&&a(t=t.attrs)&&t.type;return o===i||yo(o)&&yo(i)}(e,n)||s(e.isAsyncPlaceholder)&&r(n.asyncFactory.error))}function Io(e,n,t){var o,i,r={};for(o=n;o<=t;++o)a(i=e[o].key)&&(r[i]=o);return r}var zo={create:_o,update:_o,destroy:function(e){_o(e,To)}};function _o(e,n){(e.data.directives||n.data.directives)&&function(e,n){var t,o,i,r=e===To,a=n===To,s=Eo(e.data.directives,e.context),l=Eo(n.data.directives,n.context),c=[],u=[];for(t in l)o=s[t],i=l[t],o?(i.oldValue=o.value,i.oldArg=o.arg,Oo(i,"update",n,e),i.def&&i.def.componentUpdated&&u.push(i)):(Oo(i,"bind",n,e),i.def&&i.def.inserted&&c.push(i));if(c.length){var d=function(){for(var t=0;t<c.length;t++)Oo(c[t],"inserted",n,e)};r?We(n,"insert",d):d()}u.length&&We(n,"postpatch",(function(){for(var t=0;t<u.length;t++)Oo(u[t],"componentUpdated",n,e)}));if(!r)for(t in s)l[t]||Oo(s[t],"unbind",e,e,a)}(e,n)}var Po=Object.create(null);function Eo(e,n){var t,o,i=Object.create(null);if(!e)return i;for(t=0;t<e.length;t++){if((o=e[t]).modifiers||(o.modifiers=Po),i[Co(o)]=o,n._setupState&&n._setupState.__sfc){var r=o.def||Pt(n,"_setupState","v-"+o.name);o.def="function"==typeof r?{bind:r,update:r}:r}o.def=o.def||Pt(n.$options,"directives",o.name)}return i}function Co(e){return e.rawName||"".concat(e.name,".").concat(Object.keys(e.modifiers||{}).join("."))}function Oo(e,n,t,o,i){var r=e.def&&e.def[n];if(r)try{r(t.elm,e,t,o,i)}catch(o){Sn(o,t.context,"directive ".concat(e.name," ").concat(n," hook"))}}var Ro=[xo,zo];function Do(e,n){var t=n.componentOptions;if(!(a(t)&&!1===t.Ctor.options.inheritAttrs||r(e.data.attrs)&&r(n.data.attrs))){var o,i,l=n.elm,c=e.data.attrs||{},u=n.data.attrs||{};for(o in(a(u.__ob__)||s(u._v_attr_proxy))&&(u=n.data.attrs=C({},u)),u)i=u[o],c[o]!==i&&Bo(l,o,i,n.data.pre);for(o in(K||Z)&&u.value!==c.value&&Bo(l,"value",u.value),c)r(u[o])&&(ro(o)?l.removeAttributeNS(io,ao(o)):no(o)||l.removeAttribute(o))}}function Bo(e,n,t,o){o||e.tagName.indexOf("-")>-1?Lo(e,n,t):oo(n)?so(t)?e.removeAttribute(n):(t="allowfullscreen"===n&&"EMBED"===e.tagName?"true":n,e.setAttribute(n,t)):no(n)?e.setAttribute(n,function(e,n){return so(n)||"false"===n?"false":"contenteditable"===e&&to(n)?n:"true"}(n,t)):ro(n)?so(t)?e.removeAttributeNS(io,ao(n)):e.setAttributeNS(io,n,t):Lo(e,n,t)}function Lo(e,n,t){if(so(t))e.removeAttribute(n);else{if(K&&!X&&"TEXTAREA"===e.tagName&&"placeholder"===n&&""!==t&&!e.__ieph){var o=function(n){n.stopImmediatePropagation(),e.removeEventListener("input",o)};e.addEventListener("input",o),e.__ieph=!0}e.setAttribute(n,t)}}var Ao={create:Do,update:Do};function Fo(e,n){var t=n.elm,o=n.data,i=e.data;if(!(r(o.staticClass)&&r(o.class)&&(r(i)||r(i.staticClass)&&r(i.class)))){var s=lo(n),l=t._transitionClasses;a(l)&&(s=uo(s,po(l))),s!==t._prevClass&&(t.setAttribute("class",s),t._prevClass=s)}}var Mo,No={create:Fo,update:Fo};function Uo(e,n,t){var o=Mo;return function i(){var r=n.apply(null,arguments);null!==r&&qo(e,i,t,o)}}var $o=En&&!(ne&&Number(ne[1])<=53);function Ho(e,n,t,o){if($o){var i=at,r=n;n=r._wrapper=function(e){if(e.target===e.currentTarget||e.timeStamp>=i||e.timeStamp<=0||e.target.ownerDocument!==document)return r.apply(this,arguments)}}Mo.addEventListener(e,n,oe?{capture:t,passive:o}:t)}function qo(e,n,t,o){(o||Mo).removeEventListener(e,n._wrapper||n,t)}function Wo(e,n){if(!r(e.data.on)||!r(n.data.on)){var t=n.data.on||{},o=e.data.on||{};Mo=n.elm||e.elm,function(e){if(a(e.__r)){var n=K?"change":"input";e[n]=[].concat(e.__r,e[n]||[]),delete e.__r}a(e.__c)&&(e.change=[].concat(e.__c,e.change||[]),delete e.__c)}(t),qe(t,o,Ho,qo,Uo,n.context),Mo=void 0}}var Vo,Go={create:Wo,update:Wo,destroy:function(e){return Wo(e,To)}};function Jo(e,n){if(!r(e.data.domProps)||!r(n.data.domProps)){var t,o,i=n.elm,l=e.data.domProps||{},c=n.data.domProps||{};for(t in(a(c.__ob__)||s(c._v_attr_proxy))&&(c=n.data.domProps=C({},c)),l)t in c||(i[t]="");for(t in c){if(o=c[t],"textContent"===t||"innerHTML"===t){if(n.children&&(n.children.length=0),o===l[t])continue;1===i.childNodes.length&&i.removeChild(i.childNodes[0])}if("value"===t&&"PROGRESS"!==i.tagName){i._value=o;var u=r(o)?"":String(o);Yo(i,u)&&(i.value=u)}else if("innerHTML"===t&&ho(i.tagName)&&r(i.innerHTML)){(Vo=Vo||document.createElement("div")).innerHTML="<svg>".concat(o,"</svg>");for(var d=Vo.firstChild;i.firstChild;)i.removeChild(i.firstChild);for(;d.firstChild;)i.appendChild(d.firstChild)}else if(o!==l[t])try{i[t]=o}catch(e){}}}}function Yo(e,n){return!e.composing&&("OPTION"===e.tagName||function(e,n){var t=!0;try{t=document.activeElement!==e}catch(e){}return t&&e.value!==n}(e,n)||function(e,n){var t=e.value,o=e._vModifiers;if(a(o)){if(o.number)return b(t)!==b(n);if(o.trim)return t.trim()!==n.trim()}return t!==n}(e,n))}var Ko={create:Jo,update:Jo},Xo=T((function(e){var n={},t=/:(.+)/;return e.split(/;(?![^(]*\))/g).forEach((function(e){if(e){var o=e.split(t);o.length>1&&(n[o[0].trim()]=o[1].trim())}})),n}));function Zo(e){var n=Qo(e.style);return e.staticStyle?C(e.staticStyle,n):n}function Qo(e){return Array.isArray(e)?O(e):"string"==typeof e?Xo(e):e}var ei,ni=/^--/,ti=/\s*!important$/,oi=function(e,n,t){if(ni.test(n))e.style.setProperty(n,t);else if(ti.test(t))e.style.setProperty(_(n),t.replace(ti,""),"important");else{var o=ri(n);if(Array.isArray(t))for(var i=0,r=t.length;i<r;i++)e.style[o]=t[i];else e.style[o]=t}},ii=["Webkit","Moz","ms"],ri=T((function(e){if(ei=ei||document.createElement("div").style,"filter"!==(e=S(e))&&e in ei)return e;for(var n=e.charAt(0).toUpperCase()+e.slice(1),t=0;t<ii.length;t++){var o=ii[t]+n;if(o in ei)return o}}));function ai(e,n){var t=n.data,o=e.data;if(!(r(t.staticStyle)&&r(t.style)&&r(o.staticStyle)&&r(o.style))){var i,s,l=n.elm,c=o.staticStyle,u=o.normalizedStyle||o.style||{},d=c||u,p=Qo(n.data.style)||{};n.data.normalizedStyle=a(p.__ob__)?C({},p):p;var f=function(e,n){var t,o={};if(n)for(var i=e;i.componentInstance;)(i=i.componentInstance._vnode)&&i.data&&(t=Zo(i.data))&&C(o,t);(t=Zo(e.data))&&C(o,t);for(var r=e;r=r.parent;)r.data&&(t=Zo(r.data))&&C(o,t);return o}(n,!0);for(s in d)r(f[s])&&oi(l,s,"");for(s in f)(i=f[s])!==d[s]&&oi(l,s,null==i?"":i)}}var si={create:ai,update:ai},li=/\s+/;function ci(e,n){if(n&&(n=n.trim()))if(e.classList)n.indexOf(" ")>-1?n.split(li).forEach((function(n){return e.classList.add(n)})):e.classList.add(n);else{var t=" ".concat(e.getAttribute("class")||""," ");t.indexOf(" "+n+" ")<0&&e.setAttribute("class",(t+n).trim())}}function ui(e,n){if(n&&(n=n.trim()))if(e.classList)n.indexOf(" ")>-1?n.split(li).forEach((function(n){return e.classList.remove(n)})):e.classList.remove(n),e.classList.length||e.removeAttribute("class");else{for(var t=" ".concat(e.getAttribute("class")||""," "),o=" "+n+" ";t.indexOf(o)>=0;)t=t.replace(o," ");(t=t.trim())?e.setAttribute("class",t):e.removeAttribute("class")}}function di(e){if(e){if("object"==typeof e){var n={};return!1!==e.css&&C(n,pi(e.name||"v")),C(n,e),n}return"string"==typeof e?pi(e):void 0}}var pi=T((function(e){return{enterClass:"".concat(e,"-enter"),enterToClass:"".concat(e,"-enter-to"),enterActiveClass:"".concat(e,"-enter-active"),leaveClass:"".concat(e,"-leave"),leaveToClass:"".concat(e,"-leave-to"),leaveActiveClass:"".concat(e,"-leave-active")}})),fi=J&&!X,mi="transition",hi="transitionend",gi="animation",bi="animationend";fi&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(mi="WebkitTransition",hi="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(gi="WebkitAnimation",bi="webkitAnimationEnd"));var yi=J?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(e){return e()};function vi(e){yi((function(){yi(e)}))}function xi(e,n){var t=e._transitionClasses||(e._transitionClasses=[]);t.indexOf(n)<0&&(t.push(n),ci(e,n))}function wi(e,n){e._transitionClasses&&x(e._transitionClasses,n),ui(e,n)}function ki(e,n,t){var o=ji(e,n),i=o.type,r=o.timeout,a=o.propCount;if(!i)return t();var s="transition"===i?hi:bi,l=0,c=function(){e.removeEventListener(s,u),t()},u=function(n){n.target===e&&++l>=a&&c()};setTimeout((function(){l<a&&c()}),r+1),e.addEventListener(s,u)}var Ti=/\b(transform|all)(,|$)/;function ji(e,n){var t,o=window.getComputedStyle(e),i=(o[mi+"Delay"]||"").split(", "),r=(o[mi+"Duration"]||"").split(", "),a=Si(i,r),s=(o[gi+"Delay"]||"").split(", "),l=(o[gi+"Duration"]||"").split(", "),c=Si(s,l),u=0,d=0;return"transition"===n?a>0&&(t="transition",u=a,d=r.length):"animation"===n?c>0&&(t="animation",u=c,d=l.length):d=(t=(u=Math.max(a,c))>0?a>c?"transition":"animation":null)?"transition"===t?r.length:l.length:0,{type:t,timeout:u,propCount:d,hasTransform:"transition"===t&&Ti.test(o[mi+"Property"])}}function Si(e,n){for(;e.length<n.length;)e=e.concat(e);return Math.max.apply(null,n.map((function(n,t){return Ii(n)+Ii(e[t])})))}function Ii(e){return 1e3*Number(e.slice(0,-1).replace(",","."))}function zi(e,n){var t=e.elm;a(t._leaveCb)&&(t._leaveCb.cancelled=!0,t._leaveCb());var o=di(e.data.transition);if(!r(o)&&!a(t._enterCb)&&1===t.nodeType){for(var i=o.css,s=o.type,l=o.enterClass,d=o.enterToClass,p=o.enterActiveClass,f=o.appearClass,m=o.appearToClass,h=o.appearActiveClass,g=o.beforeEnter,y=o.enter,v=o.afterEnter,x=o.enterCancelled,w=o.beforeAppear,k=o.appear,T=o.afterAppear,j=o.appearCancelled,S=o.duration,I=Yn,z=Yn.$vnode;z&&z.parent;)I=z.context,z=z.parent;var _=!I._isMounted||!e.isRootInsert;if(!_||k||""===k){var P=_&&f?f:l,E=_&&h?h:p,C=_&&m?m:d,O=_&&w||g,R=_&&c(k)?k:y,D=_&&T||v,B=_&&j||x,L=b(u(S)?S.enter:S);0;var A=!1!==i&&!X,M=Ei(R),N=t._enterCb=F((function(){A&&(wi(t,C),wi(t,E)),N.cancelled?(A&&wi(t,P),B&&B(t)):D&&D(t),t._enterCb=null}));e.data.show||We(e,"insert",(function(){var n=t.parentNode,o=n&&n._pending&&n._pending[e.key];o&&o.tag===e.tag&&o.elm._leaveCb&&o.elm._leaveCb(),R&&R(t,N)})),O&&O(t),A&&(xi(t,P),xi(t,E),vi((function(){wi(t,P),N.cancelled||(xi(t,C),M||(Pi(L)?setTimeout(N,L):ki(t,s,N)))}))),e.data.show&&(n&&n(),R&&R(t,N)),A||M||N()}}}function _i(e,n){var t=e.elm;a(t._enterCb)&&(t._enterCb.cancelled=!0,t._enterCb());var o=di(e.data.transition);if(r(o)||1!==t.nodeType)return n();if(!a(t._leaveCb)){var i=o.css,s=o.type,l=o.leaveClass,c=o.leaveToClass,d=o.leaveActiveClass,p=o.beforeLeave,f=o.leave,m=o.afterLeave,h=o.leaveCancelled,g=o.delayLeave,y=o.duration,v=!1!==i&&!X,x=Ei(f),w=b(u(y)?y.leave:y);0;var k=t._leaveCb=F((function(){t.parentNode&&t.parentNode._pending&&(t.parentNode._pending[e.key]=null),v&&(wi(t,c),wi(t,d)),k.cancelled?(v&&wi(t,l),h&&h(t)):(n(),m&&m(t)),t._leaveCb=null}));g?g(T):T()}function T(){k.cancelled||(!e.data.show&&t.parentNode&&((t.parentNode._pending||(t.parentNode._pending={}))[e.key]=e),p&&p(t),v&&(xi(t,l),xi(t,d),vi((function(){wi(t,l),k.cancelled||(xi(t,c),x||(Pi(w)?setTimeout(k,w):ki(t,s,k)))}))),f&&f(t,k),v||x||k())}}function Pi(e){return"number"==typeof e&&!isNaN(e)}function Ei(e){if(r(e))return!1;var n=e.fns;return a(n)?Ei(Array.isArray(n)?n[0]:n):(e._length||e.length)>1}function Ci(e,n){!0!==n.data.show&&zi(n)}var Oi=function(e){var n,t,o={},c=e.modules,u=e.nodeOps;for(n=0;n<jo.length;++n)for(o[jo[n]]=[],t=0;t<c.length;++t)a(c[t][jo[n]])&&o[jo[n]].push(c[t][jo[n]]);function d(e){var n=u.parentNode(e);a(n)&&u.removeChild(n,e)}function p(e,n,t,i,r,l,c){if(a(e.elm)&&a(l)&&(e=l[c]=he(e)),e.isRootInsert=!r,!function(e,n,t,i){var r=e.data;if(a(r)){var l=a(e.componentInstance)&&r.keepAlive;if(a(r=r.hook)&&a(r=r.init)&&r(e,!1),a(e.componentInstance))return f(e,n),m(t,e.elm,i),s(l)&&function(e,n,t,i){var r,s=e;for(;s.componentInstance;)if(s=s.componentInstance._vnode,a(r=s.data)&&a(r=r.transition)){for(r=0;r<o.activate.length;++r)o.activate[r](To,s);n.push(s);break}m(t,e.elm,i)}(e,n,t,i),!0}}(e,n,t,i)){var d=e.data,p=e.children,g=e.tag;a(g)?(e.elm=e.ns?u.createElementNS(e.ns,g):u.createElement(g,e),v(e),h(e,p,n),a(d)&&b(e,n),m(t,e.elm,i)):s(e.isComment)?(e.elm=u.createComment(e.text),m(t,e.elm,i)):(e.elm=u.createTextNode(e.text),m(t,e.elm,i))}}function f(e,n){a(e.data.pendingInsert)&&(n.push.apply(n,e.data.pendingInsert),e.data.pendingInsert=null),e.elm=e.componentInstance.$el,g(e)?(b(e,n),v(e)):(wo(e),n.push(e))}function m(e,n,t){a(e)&&(a(t)?u.parentNode(t)===e&&u.insertBefore(e,n,t):u.appendChild(e,n))}function h(e,n,t){if(i(n)){0;for(var o=0;o<n.length;++o)p(n[o],t,e.elm,null,!0,n,o)}else l(e.text)&&u.appendChild(e.elm,u.createTextNode(String(e.text)))}function g(e){for(;e.componentInstance;)e=e.componentInstance._vnode;return a(e.tag)}function b(e,t){for(var i=0;i<o.create.length;++i)o.create[i](To,e);a(n=e.data.hook)&&(a(n.create)&&n.create(To,e),a(n.insert)&&t.push(e))}function v(e){var n;if(a(n=e.fnScopeId))u.setStyleScope(e.elm,n);else for(var t=e;t;)a(n=t.context)&&a(n=n.$options._scopeId)&&u.setStyleScope(e.elm,n),t=t.parent;a(n=Yn)&&n!==e.context&&n!==e.fnContext&&a(n=n.$options._scopeId)&&u.setStyleScope(e.elm,n)}function x(e,n,t,o,i,r){for(;o<=i;++o)p(t[o],r,e,n,!1,t,o)}function w(e){var n,t,i=e.data;if(a(i))for(a(n=i.hook)&&a(n=n.destroy)&&n(e),n=0;n<o.destroy.length;++n)o.destroy[n](e);if(a(n=e.children))for(t=0;t<e.children.length;++t)w(e.children[t])}function k(e,n,t){for(;n<=t;++n){var o=e[n];a(o)&&(a(o.tag)?(T(o),w(o)):d(o.elm))}}function T(e,n){if(a(n)||a(e.data)){var t,i=o.remove.length+1;for(a(n)?n.listeners+=i:n=function(e,n){function t(){0==--t.listeners&&d(e)}return t.listeners=n,t}(e.elm,i),a(t=e.componentInstance)&&a(t=t._vnode)&&a(t.data)&&T(t,n),t=0;t<o.remove.length;++t)o.remove[t](e,n);a(t=e.data.hook)&&a(t=t.remove)?t(e,n):n()}else d(e.elm)}function j(e,n,t,o){for(var i=t;i<o;i++){var r=n[i];if(a(r)&&So(e,r))return i}}function S(e,n,t,i,l,c){if(e!==n){a(n.elm)&&a(i)&&(n=i[l]=he(n));var d=n.elm=e.elm;if(s(e.isAsyncPlaceholder))a(n.asyncFactory.resolved)?_(e.elm,n,t):n.isAsyncPlaceholder=!0;else if(s(n.isStatic)&&s(e.isStatic)&&n.key===e.key&&(s(n.isCloned)||s(n.isOnce)))n.componentInstance=e.componentInstance;else{var f,m=n.data;a(m)&&a(f=m.hook)&&a(f=f.prepatch)&&f(e,n);var h=e.children,b=n.children;if(a(m)&&g(n)){for(f=0;f<o.update.length;++f)o.update[f](e,n);a(f=m.hook)&&a(f=f.update)&&f(e,n)}r(n.text)?a(h)&&a(b)?h!==b&&function(e,n,t,o,i){var s,l,c,d=0,f=0,m=n.length-1,h=n[0],g=n[m],b=t.length-1,y=t[0],v=t[b],w=!i;for(0;d<=m&&f<=b;)r(h)?h=n[++d]:r(g)?g=n[--m]:So(h,y)?(S(h,y,o,t,f),h=n[++d],y=t[++f]):So(g,v)?(S(g,v,o,t,b),g=n[--m],v=t[--b]):So(h,v)?(S(h,v,o,t,b),w&&u.insertBefore(e,h.elm,u.nextSibling(g.elm)),h=n[++d],v=t[--b]):So(g,y)?(S(g,y,o,t,f),w&&u.insertBefore(e,g.elm,h.elm),g=n[--m],y=t[++f]):(r(s)&&(s=Io(n,d,m)),r(l=a(y.key)?s[y.key]:j(y,n,d,m))?p(y,o,e,h.elm,!1,t,f):So(c=n[l],y)?(S(c,y,o,t,f),n[l]=void 0,w&&u.insertBefore(e,c.elm,h.elm)):p(y,o,e,h.elm,!1,t,f),y=t[++f]);d>m?x(e,r(t[b+1])?null:t[b+1].elm,t,f,b,o):f>b&&k(n,d,m)}(d,h,b,t,c):a(b)?(a(e.text)&&u.setTextContent(d,""),x(d,null,b,0,b.length-1,t)):a(h)?k(h,0,h.length-1):a(e.text)&&u.setTextContent(d,""):e.text!==n.text&&u.setTextContent(d,n.text),a(m)&&a(f=m.hook)&&a(f=f.postpatch)&&f(e,n)}}}function I(e,n,t){if(s(t)&&a(e.parent))e.parent.data.pendingInsert=n;else for(var o=0;o<n.length;++o)n[o].data.hook.insert(n[o])}var z=y("attrs,class,staticClass,staticStyle,key");function _(e,n,t,o){var i,r=n.tag,l=n.data,c=n.children;if(o=o||l&&l.pre,n.elm=e,s(n.isComment)&&a(n.asyncFactory))return n.isAsyncPlaceholder=!0,!0;if(a(l)&&(a(i=l.hook)&&a(i=i.init)&&i(n,!0),a(i=n.componentInstance)))return f(n,t),!0;if(a(r)){if(a(c))if(e.hasChildNodes())if(a(i=l)&&a(i=i.domProps)&&a(i=i.innerHTML)){if(i!==e.innerHTML)return!1}else{for(var u=!0,d=e.firstChild,p=0;p<c.length;p++){if(!d||!_(d,c[p],t,o)){u=!1;break}d=d.nextSibling}if(!u||d)return!1}else h(n,c,t);if(a(l)){var m=!1;for(var g in l)if(!z(g)){m=!0,b(n,t);break}!m&&l.class&&Un(l.class)}}else e.data!==n.text&&(e.data=n.text);return!0}return function(e,n,t,i){if(!r(n)){var l,c=!1,d=[];if(r(e))c=!0,p(n,d);else{var f=a(e.nodeType);if(!f&&So(e,n))S(e,n,d,null,null,i);else{if(f){if(1===e.nodeType&&e.hasAttribute("data-server-rendered")&&(e.removeAttribute("data-server-rendered"),t=!0),s(t)&&_(e,n,d))return I(n,d,!0),e;l=e,e=new pe(u.tagName(l).toLowerCase(),{},[],void 0,l)}var m=e.elm,h=u.parentNode(m);if(p(n,d,m._leaveCb?null:h,u.nextSibling(m)),a(n.parent))for(var b=n.parent,y=g(n);b;){for(var v=0;v<o.destroy.length;++v)o.destroy[v](b);if(b.elm=n.elm,y){for(var x=0;x<o.create.length;++x)o.create[x](To,b);var T=b.data.hook.insert;if(T.merged)for(var j=1;j<T.fns.length;j++)T.fns[j]()}else wo(b);b=b.parent}a(h)?k([e],0,0):a(e.tag)&&w(e)}}return I(n,d,c),n.elm}a(e)&&w(e)}}({nodeOps:vo,modules:[Ao,No,Go,Ko,si,J?{create:Ci,activate:Ci,remove:function(e,n){!0!==e.data.show?_i(e,n):n()}}:{}].concat(Ro)});X&&document.addEventListener("selectionchange",(function(){var e=document.activeElement;e&&e.vmodel&&Ni(e,"input")}));var Ri={inserted:function(e,n,t,o){"select"===t.tag?(o.elm&&!o.elm._vOptions?We(t,"postpatch",(function(){Ri.componentUpdated(e,n,t)})):Di(e,n,t.context),e._vOptions=[].map.call(e.options,Ai)):("textarea"===t.tag||yo(e.type))&&(e._vModifiers=n.modifiers,n.modifiers.lazy||(e.addEventListener("compositionstart",Fi),e.addEventListener("compositionend",Mi),e.addEventListener("change",Mi),X&&(e.vmodel=!0)))},componentUpdated:function(e,n,t){if("select"===t.tag){Di(e,n,t.context);var o=e._vOptions,i=e._vOptions=[].map.call(e.options,Ai);if(i.some((function(e,n){return!L(e,o[n])})))(e.multiple?n.value.some((function(e){return Li(e,i)})):n.value!==n.oldValue&&Li(n.value,i))&&Ni(e,"change")}}};function Di(e,n,t){Bi(e,n,t),(K||Z)&&setTimeout((function(){Bi(e,n,t)}),0)}function Bi(e,n,t){var o=n.value,i=e.multiple;if(!i||Array.isArray(o)){for(var r,a,s=0,l=e.options.length;s<l;s++)if(a=e.options[s],i)r=A(o,Ai(a))>-1,a.selected!==r&&(a.selected=r);else if(L(Ai(a),o))return void(e.selectedIndex!==s&&(e.selectedIndex=s));i||(e.selectedIndex=-1)}}function Li(e,n){return n.every((function(n){return!L(n,e)}))}function Ai(e){return"_value"in e?e._value:e.value}function Fi(e){e.target.composing=!0}function Mi(e){e.target.composing&&(e.target.composing=!1,Ni(e.target,"input"))}function Ni(e,n){var t=document.createEvent("HTMLEvents");t.initEvent(n,!0,!0),e.dispatchEvent(t)}function Ui(e){return!e.componentInstance||e.data&&e.data.transition?e:Ui(e.componentInstance._vnode)}var $i={model:Ri,show:{bind:function(e,n,t){var o=n.value,i=(t=Ui(t)).data&&t.data.transition,r=e.__vOriginalDisplay="none"===e.style.display?"":e.style.display;o&&i?(t.data.show=!0,zi(t,(function(){e.style.display=r}))):e.style.display=o?r:"none"},update:function(e,n,t){var o=n.value;!o!=!n.oldValue&&((t=Ui(t)).data&&t.data.transition?(t.data.show=!0,o?zi(t,(function(){e.style.display=e.__vOriginalDisplay})):_i(t,(function(){e.style.display="none"}))):e.style.display=o?e.__vOriginalDisplay:"none")},unbind:function(e,n,t,o,i){i||(e.style.display=e.__vOriginalDisplay)}}},Hi={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function qi(e){var n=e&&e.componentOptions;return n&&n.Ctor.options.abstract?qi(Tn(n.children)):e}function Wi(e){var n={},t=e.$options;for(var o in t.propsData)n[o]=e[o];var i=t._parentListeners;for(var o in i)n[S(o)]=i[o];return n}function Vi(e,n){if(/\d-keep-alive$/.test(n.tag))return e("keep-alive",{props:n.componentOptions.propsData})}var Gi=function(e){return e.tag||fn(e)},Ji=function(e){return"show"===e.name},Yi={name:"transition",props:Hi,abstract:!0,render:function(e){var n=this,t=this.$slots.default;if(t&&(t=t.filter(Gi)).length){0;var o=this.mode;0;var i=t[0];if(function(e){for(;e=e.parent;)if(e.data.transition)return!0}(this.$vnode))return i;var r=qi(i);if(!r)return i;if(this._leaving)return Vi(e,i);var a="__transition-".concat(this._uid,"-");r.key=null==r.key?r.isComment?a+"comment":a+r.tag:l(r.key)?0===String(r.key).indexOf(a)?r.key:a+r.key:r.key;var s=(r.data||(r.data={})).transition=Wi(this),c=this._vnode,u=qi(c);if(r.data.directives&&r.data.directives.some(Ji)&&(r.data.show=!0),u&&u.data&&!function(e,n){return n.key===e.key&&n.tag===e.tag}(r,u)&&!fn(u)&&(!u.componentInstance||!u.componentInstance._vnode.isComment)){var d=u.data.transition=C({},s);if("out-in"===o)return this._leaving=!0,We(d,"afterLeave",(function(){n._leaving=!1,n.$forceUpdate()})),Vi(e,i);if("in-out"===o){if(fn(r))return c;var p,f=function(){p()};We(s,"afterEnter",f),We(s,"enterCancelled",f),We(d,"delayLeave",(function(e){p=e}))}}return i}}},Ki=C({tag:String,moveClass:String},Hi);function Xi(e){e.elm._moveCb&&e.elm._moveCb(),e.elm._enterCb&&e.elm._enterCb()}function Zi(e){e.data.newPos=e.elm.getBoundingClientRect()}function Qi(e){var n=e.data.pos,t=e.data.newPos,o=n.left-t.left,i=n.top-t.top;if(o||i){e.data.moved=!0;var r=e.elm.style;r.transform=r.WebkitTransform="translate(".concat(o,"px,").concat(i,"px)"),r.transitionDuration="0s"}}delete Ki.mode;var er={Transition:Yi,TransitionGroup:{props:Ki,beforeMount:function(){var e=this,n=this._update;this._update=function(t,o){var i=Kn(e);e.__patch__(e._vnode,e.kept,!1,!0),e._vnode=e.kept,i(),n.call(e,t,o)}},render:function(e){for(var n=this.tag||this.$vnode.data.tag||"span",t=Object.create(null),o=this.prevChildren=this.children,i=this.$slots.default||[],r=this.children=[],a=Wi(this),s=0;s<i.length;s++){if((u=i[s]).tag)if(null!=u.key&&0!==String(u.key).indexOf("__vlist"))r.push(u),t[u.key]=u,(u.data||(u.data={})).transition=a;else;}if(o){var l=[],c=[];for(s=0;s<o.length;s++){var u;(u=o[s]).data.transition=a,u.data.pos=u.elm.getBoundingClientRect(),t[u.key]?l.push(u):c.push(u)}this.kept=e(n,null,l),this.removed=c}return e(n,null,r)},updated:function(){var e=this.prevChildren,n=this.moveClass||(this.name||"v")+"-move";e.length&&this.hasMove(e[0].elm,n)&&(e.forEach(Xi),e.forEach(Zi),e.forEach(Qi),this._reflow=document.body.offsetHeight,e.forEach((function(e){if(e.data.moved){var t=e.elm,o=t.style;xi(t,n),o.transform=o.WebkitTransform=o.transitionDuration="",t.addEventListener(hi,t._moveCb=function e(o){o&&o.target!==t||o&&!/transform$/.test(o.propertyName)||(t.removeEventListener(hi,e),t._moveCb=null,wi(t,n))})}})))},methods:{hasMove:function(e,n){if(!fi)return!1;if(this._hasMove)return this._hasMove;var t=e.cloneNode();e._transitionClasses&&e._transitionClasses.forEach((function(e){ui(t,e)})),ci(t,n),t.style.display="none",this.$el.appendChild(t);var o=ji(t);return this.$el.removeChild(t),this._hasMove=o.hasTransform}}}};Wt.config.mustUseProp=function(e,n,t){return"value"===t&&eo(e)&&"button"!==n||"selected"===t&&"option"===e||"checked"===t&&"input"===e||"muted"===t&&"video"===e},Wt.config.isReservedTag=go,Wt.config.isReservedAttr=Qt,Wt.config.getTagNamespace=function(e){return ho(e)?"svg":"math"===e?"math":void 0},Wt.config.isUnknownElement=function(e){if(!J)return!0;if(go(e))return!1;if(e=e.toLowerCase(),null!=bo[e])return bo[e];var n=document.createElement(e);return e.indexOf("-")>-1?bo[e]=n.constructor===window.HTMLUnknownElement||n.constructor===window.HTMLElement:bo[e]=/HTMLUnknownElement/.test(n.toString())},C(Wt.options.directives,$i),C(Wt.options.components,er),Wt.prototype.__patch__=J?Oi:R,Wt.prototype.$mount=function(e,n){return function(e,n,t){var o;e.$el=n,e.$options.render||(e.$options.render=fe),Qn(e,"beforeMount"),o=function(){e._update(e._render(),t)},new qn(e,o,R,{before:function(){e._isMounted&&!e._isDestroyed&&Qn(e,"beforeUpdate")}},!0),t=!1;var i=e._preWatchers;if(i)for(var r=0;r<i.length;r++)i[r].run();return null==e.$vnode&&(e._isMounted=!0,Qn(e,"mounted")),e}(this,e=e&&J?function(e){if("string"==typeof e){var n=document.querySelector(e);return n||document.createElement("div")}return e}(e):void 0,n)},J&&setTimeout((function(){$.devtools&&ae&&ae.emit("init",Wt)}),0)},function(e,n){var t=Array.isArray;e.exports=t},function(e,n,t){var o=t(27),i="object"==typeof self&&self&&self.Object===Object&&self,r=o||i||Function("return this")();e.exports=r},function(e,n,t){var o=t(71),i=t(74);e.exports=function(e,n){var t=i(e,n);return o(t)?t:void 0}},function(e,n,t){"use strict";function o(e,n,t,o,i,r,a,s){var l,c="function"==typeof e?e.options:e;if(n&&(c.render=n,c.staticRenderFns=t,c._compiled=!0),o&&(c.functional=!0),r&&(c._scopeId="data-v-"+r),a?(l=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),i&&i.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(a)},c._ssrRegister=l):i&&(l=s?function(){i.call(this,(c.functional?this.parent:this).$root.$options.shadowRoot)}:i),l)if(c.functional){c._injectStyles=l;var u=c.render;c.render=function(e,n){return l.call(n),u(e,n)}}else{var d=c.beforeCreate;c.beforeCreate=d?[].concat(d,l):[l]}return{exports:e,options:c}}t.d(n,"a",(function(){return o}))},function(e,n){e.exports=function(e){return null!=e&&"object"==typeof e}},function(e,n,t){var o=t(7),i=t(56),r=t(57),a=o?o.toStringTag:void 0;e.exports=function(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":a&&a in Object(e)?i(e):r(e)}},function(e,n,t){var o=t(2).Symbol;e.exports=o},function(e,n,t){var o=t(61),i=t(62),r=t(63),a=t(64),s=t(65);function l(e){var n=-1,t=null==e?0:e.length;for(this.clear();++n<t;){var o=e[n];this.set(o[0],o[1])}}l.prototype.clear=o,l.prototype.delete=i,l.prototype.get=r,l.prototype.has=a,l.prototype.set=s,e.exports=l},function(e,n,t){var o=t(29);e.exports=function(e,n){for(var t=e.length;t--;)if(o(e[t][0],n))return t;return-1}},function(e,n,t){var o=t(3)(Object,"create");e.exports=o},function(e,n,t){var o=t(83);e.exports=function(e,n){var t=e.__data__;return o(n)?t["string"==typeof n?"string":"hash"]:t.map}},function(e,n,t){var o=t(22);e.exports=function(e){if("string"==typeof e||o(e))return e;var n=e+"";return"0"==n&&1/e==-1/0?"-0":n}},function(e,n){var t=/^\s+|\s+$/g,o=/^[-+]0x[0-9a-f]+$/i,i=/^0b[01]+$/i,r=/^0o[0-7]+$/i,a=parseInt,s="object"==typeof global&&global&&global.Object===Object&&global,l="object"==typeof self&&self&&self.Object===Object&&self,c=s||l||Function("return this")(),u=Object.prototype.toString,d=Math.max,p=Math.min,f=function(){return c.Date.now()};function m(e){var n=typeof e;return!!e&&("object"==n||"function"==n)}function h(e){if("number"==typeof e)return e;if(function(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&"[object Symbol]"==u.call(e)}(e))return NaN;if(m(e)){var n="function"==typeof e.valueOf?e.valueOf():e;e=m(n)?n+"":n}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(t,"");var s=i.test(e);return s||r.test(e)?a(e.slice(2),s?2:8):o.test(e)?NaN:+e}e.exports=function(e,n,t){var o,i,r,a,s,l,c=0,u=!1,g=!1,b=!0;if("function"!=typeof e)throw new TypeError("Expected a function");function y(n){var t=o,r=i;return o=i=void 0,c=n,a=e.apply(r,t)}function v(e){return c=e,s=setTimeout(w,n),u?y(e):a}function x(e){var t=e-l;return void 0===l||t>=n||t<0||g&&e-c>=r}function w(){var e=f();if(x(e))return k(e);s=setTimeout(w,function(e){var t=n-(e-l);return g?p(t,r-(e-c)):t}(e))}function k(e){return s=void 0,b&&o?y(e):(o=i=void 0,a)}function T(){var e=f(),t=x(e);if(o=arguments,i=this,l=e,t){if(void 0===s)return v(l);if(g)return s=setTimeout(w,n),y(l)}return void 0===s&&(s=setTimeout(w,n)),a}return n=h(n)||0,m(t)&&(u=!!t.leading,r=(g="maxWait"in t)?d(h(t.maxWait)||0,n):r,b="trailing"in t?!!t.trailing:b),T.cancel=function(){void 0!==s&&clearTimeout(s),c=0,o=l=i=s=void 0},T.flush=function(){return void 0===s?a:k(f())},T}},function(e,n,t){var o,i;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(i="function"==typeof(o=function(){var e,n,t={version:"0.2.0"},o=t.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function i(e,n,t){return e<n?n:e>t?t:e}function r(e){return 100*(-1+e)}t.configure=function(e){var n,t;for(n in e)void 0!==(t=e[n])&&e.hasOwnProperty(n)&&(o[n]=t);return this},t.status=null,t.set=function(e){var n=t.isStarted();e=i(e,o.minimum,1),t.status=1===e?null:e;var l=t.render(!n),c=l.querySelector(o.barSelector),u=o.speed,d=o.easing;return l.offsetWidth,a((function(n){""===o.positionUsing&&(o.positionUsing=t.getPositioningCSS()),s(c,function(e,n,t){var i;return(i="translate3d"===o.positionUsing?{transform:"translate3d("+r(e)+"%,0,0)"}:"translate"===o.positionUsing?{transform:"translate("+r(e)+"%,0)"}:{"margin-left":r(e)+"%"}).transition="all "+n+"ms "+t,i}(e,u,d)),1===e?(s(l,{transition:"none",opacity:1}),l.offsetWidth,setTimeout((function(){s(l,{transition:"all "+u+"ms linear",opacity:0}),setTimeout((function(){t.remove(),n()}),u)}),u)):setTimeout(n,u)})),this},t.isStarted=function(){return"number"==typeof t.status},t.start=function(){t.status||t.set(0);var e=function(){setTimeout((function(){t.status&&(t.trickle(),e())}),o.trickleSpeed)};return o.trickle&&e(),this},t.done=function(e){return e||t.status?t.inc(.3+.5*Math.random()).set(1):this},t.inc=function(e){var n=t.status;return n?("number"!=typeof e&&(e=(1-n)*i(Math.random()*n,.1,.95)),n=i(n+e,0,.994),t.set(n)):t.start()},t.trickle=function(){return t.inc(Math.random()*o.trickleRate)},e=0,n=0,t.promise=function(o){return o&&"resolved"!==o.state()?(0===n&&t.start(),e++,n++,o.always((function(){0==--n?(e=0,t.done()):t.set((e-n)/e)})),this):this},t.render=function(e){if(t.isRendered())return document.getElementById("nprogress");c(document.documentElement,"nprogress-busy");var n=document.createElement("div");n.id="nprogress",n.innerHTML=o.template;var i,a=n.querySelector(o.barSelector),l=e?"-100":r(t.status||0),u=document.querySelector(o.parent);return s(a,{transition:"all 0 linear",transform:"translate3d("+l+"%,0,0)"}),o.showSpinner||(i=n.querySelector(o.spinnerSelector))&&p(i),u!=document.body&&c(u,"nprogress-custom-parent"),u.appendChild(n),n},t.remove=function(){u(document.documentElement,"nprogress-busy"),u(document.querySelector(o.parent),"nprogress-custom-parent");var e=document.getElementById("nprogress");e&&p(e)},t.isRendered=function(){return!!document.getElementById("nprogress")},t.getPositioningCSS=function(){var e=document.body.style,n="WebkitTransform"in e?"Webkit":"MozTransform"in e?"Moz":"msTransform"in e?"ms":"OTransform"in e?"O":"";return n+"Perspective"in e?"translate3d":n+"Transform"in e?"translate":"margin"};var a=function(){var e=[];function n(){var t=e.shift();t&&t(n)}return function(t){e.push(t),1==e.length&&n()}}(),s=function(){var e=["Webkit","O","Moz","ms"],n={};function t(t){return t=t.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(e,n){return n.toUpperCase()})),n[t]||(n[t]=function(n){var t=document.body.style;if(n in t)return n;for(var o,i=e.length,r=n.charAt(0).toUpperCase()+n.slice(1);i--;)if((o=e[i]+r)in t)return o;return n}(t))}function o(e,n,o){n=t(n),e.style[n]=o}return function(e,n){var t,i,r=arguments;if(2==r.length)for(t in n)void 0!==(i=n[t])&&n.hasOwnProperty(t)&&o(e,t,i);else o(e,r[1],r[2])}}();function l(e,n){return("string"==typeof e?e:d(e)).indexOf(" "+n+" ")>=0}function c(e,n){var t=d(e),o=t+n;l(t,n)||(e.className=o.substring(1))}function u(e,n){var t,o=d(e);l(e,n)&&(t=o.replace(" "+n+" "," "),e.className=t.substring(1,t.length-1))}function d(e){return(" "+(e.className||"")+" ").replace(/\s+/gi," ")}function p(e){e&&e.parentNode&&e.parentNode.removeChild(e)}return t})?o.call(n,t,n,e):o)||(e.exports=i)},function(e,n,t){var o=t(55),i=t(5),r=Object.prototype,a=r.hasOwnProperty,s=r.propertyIsEnumerable,l=o(function(){return arguments}())?o:function(e){return i(e)&&a.call(e,"callee")&&!s.call(e,"callee")};e.exports=l},function(e,n,t){var o=t(3)(t(2),"Map");e.exports=o},function(e,n){e.exports=function(e){var n=typeof e;return null!=e&&("object"==n||"function"==n)}},function(e,n,t){var o=t(75),i=t(82),r=t(84),a=t(85),s=t(86);function l(e){var n=-1,t=null==e?0:e.length;for(this.clear();++n<t;){var o=e[n];this.set(o[0],o[1])}}l.prototype.clear=o,l.prototype.delete=i,l.prototype.get=r,l.prototype.has=a,l.prototype.set=s,e.exports=l},function(e,n){e.exports=function(e){var n=-1,t=Array(e.size);return e.forEach((function(e){t[++n]=e})),t}},function(e,n){e.exports=function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991}},function(e,n,t){var o=t(1),i=t(22),r=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,a=/^\w*$/;e.exports=function(e,n){if(o(e))return!1;var t=typeof e;return!("number"!=t&&"symbol"!=t&&"boolean"!=t&&null!=e&&!i(e))||(a.test(e)||!r.test(e)||null!=n&&e in Object(n))}},function(e,n,t){var o=t(6),i=t(5);e.exports=function(e){return"symbol"==typeof e||i(e)&&"[object Symbol]"==o(e)}},function(e,n){e.exports=function(e){return e}},function(e,n){function t(e,n){for(var t=0,o=e.length-1;o>=0;o--){var i=e[o];"."===i?e.splice(o,1):".."===i?(e.splice(o,1),t++):t&&(e.splice(o,1),t--)}if(n)for(;t--;t)e.unshift("..");return e}function o(e,n){if(e.filter)return e.filter(n);for(var t=[],o=0;o<e.length;o++)n(e[o],o,e)&&t.push(e[o]);return t}n.resolve=function(){for(var e="",n=!1,i=arguments.length-1;i>=-1&&!n;i--){var r=i>=0?arguments[i]:process.cwd();if("string"!=typeof r)throw new TypeError("Arguments to path.resolve must be strings");r&&(e=r+"/"+e,n="/"===r.charAt(0))}return(n?"/":"")+(e=t(o(e.split("/"),(function(e){return!!e})),!n).join("/"))||"."},n.normalize=function(e){var r=n.isAbsolute(e),a="/"===i(e,-1);return(e=t(o(e.split("/"),(function(e){return!!e})),!r).join("/"))||r||(e="."),e&&a&&(e+="/"),(r?"/":"")+e},n.isAbsolute=function(e){return"/"===e.charAt(0)},n.join=function(){var e=Array.prototype.slice.call(arguments,0);return n.normalize(o(e,(function(e,n){if("string"!=typeof e)throw new TypeError("Arguments to path.join must be strings");return e})).join("/"))},n.relative=function(e,t){function o(e){for(var n=0;n<e.length&&""===e[n];n++);for(var t=e.length-1;t>=0&&""===e[t];t--);return n>t?[]:e.slice(n,t-n+1)}e=n.resolve(e).substr(1),t=n.resolve(t).substr(1);for(var i=o(e.split("/")),r=o(t.split("/")),a=Math.min(i.length,r.length),s=a,l=0;l<a;l++)if(i[l]!==r[l]){s=l;break}var c=[];for(l=s;l<i.length;l++)c.push("..");return(c=c.concat(r.slice(s))).join("/")},n.sep="/",n.delimiter=":",n.dirname=function(e){if("string"!=typeof e&&(e+=""),0===e.length)return".";for(var n=e.charCodeAt(0),t=47===n,o=-1,i=!0,r=e.length-1;r>=1;--r)if(47===(n=e.charCodeAt(r))){if(!i){o=r;break}}else i=!1;return-1===o?t?"/":".":t&&1===o?"/":e.slice(0,o)},n.basename=function(e,n){var t=function(e){"string"!=typeof e&&(e+="");var n,t=0,o=-1,i=!0;for(n=e.length-1;n>=0;--n)if(47===e.charCodeAt(n)){if(!i){t=n+1;break}}else-1===o&&(i=!1,o=n+1);return-1===o?"":e.slice(t,o)}(e);return n&&t.substr(-1*n.length)===n&&(t=t.substr(0,t.length-n.length)),t},n.extname=function(e){"string"!=typeof e&&(e+="");for(var n=-1,t=0,o=-1,i=!0,r=0,a=e.length-1;a>=0;--a){var s=e.charCodeAt(a);if(47!==s)-1===o&&(i=!1,o=a+1),46===s?-1===n?n=a:1!==r&&(r=1):-1!==n&&(r=-1);else if(!i){t=a+1;break}}return-1===n||-1===o||0===r||1===r&&n===o-1&&n===t+1?"":e.slice(n,o)};var i="b"==="ab".substr(-1)?function(e,n,t){return e.substr(n,t)}:function(e,n,t){return n<0&&(n=e.length+n),e.substr(n,t)}},function(e,n){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,n){e.exports=function(e,n){for(var t=-1,o=n.length,i=e.length;++t<o;)e[i+t]=n[t];return e}},function(e,n){var t="object"==typeof global&&global&&global.Object===Object&&global;e.exports=t},function(e,n,t){var o=t(8),i=t(66),r=t(67),a=t(68),s=t(69),l=t(70);function c(e){var n=this.__data__=new o(e);this.size=n.size}c.prototype.clear=i,c.prototype.delete=r,c.prototype.get=a,c.prototype.has=s,c.prototype.set=l,e.exports=c},function(e,n){e.exports=function(e,n){return e===n||e!=e&&n!=n}},function(e,n,t){var o=t(6),i=t(17);e.exports=function(e){if(!i(e))return!1;var n=o(e);return"[object Function]"==n||"[object GeneratorFunction]"==n||"[object AsyncFunction]"==n||"[object Proxy]"==n}},function(e,n){var t=Function.prototype.toString;e.exports=function(e){if(null!=e){try{return t.call(e)}catch(e){}try{return e+""}catch(e){}}return""}},function(e,n,t){var o=t(87),i=t(5);e.exports=function e(n,t,r,a,s){return n===t||(null==n||null==t||!i(n)&&!i(t)?n!=n&&t!=t:o(n,t,r,a,e,s))}},function(e,n,t){var o=t(34),i=t(90),r=t(35);e.exports=function(e,n,t,a,s,l){var c=1&t,u=e.length,d=n.length;if(u!=d&&!(c&&d>u))return!1;var p=l.get(e),f=l.get(n);if(p&&f)return p==n&&f==e;var m=-1,h=!0,g=2&t?new o:void 0;for(l.set(e,n),l.set(n,e);++m<u;){var b=e[m],y=n[m];if(a)var v=c?a(y,b,m,n,e,l):a(b,y,m,e,n,l);if(void 0!==v){if(v)continue;h=!1;break}if(g){if(!i(n,(function(e,n){if(!r(g,n)&&(b===e||s(b,e,t,a,l)))return g.push(n)}))){h=!1;break}}else if(b!==y&&!s(b,y,t,a,l)){h=!1;break}}return l.delete(e),l.delete(n),h}},function(e,n,t){var o=t(18),i=t(88),r=t(89);function a(e){var n=-1,t=null==e?0:e.length;for(this.__data__=new o;++n<t;)this.add(e[n])}a.prototype.add=a.prototype.push=i,a.prototype.has=r,e.exports=a},function(e,n){e.exports=function(e,n){return e.has(n)}},function(e,n,t){var o=t(100),i=t(106),r=t(40);e.exports=function(e){return r(e)?o(e):i(e)}},function(e,n,t){(function(e){var o=t(2),i=t(102),r=n&&!n.nodeType&&n,a=r&&"object"==typeof e&&e&&!e.nodeType&&e,s=a&&a.exports===r?o.Buffer:void 0,l=(s?s.isBuffer:void 0)||i;e.exports=l}).call(this,t(25)(e))},function(e,n){var t=/^(?:0|[1-9]\d*)$/;e.exports=function(e,n){var o=typeof e;return!!(n=null==n?9007199254740991:n)&&("number"==o||"symbol"!=o&&t.test(e))&&e>-1&&e%1==0&&e<n}},function(e,n,t){var o=t(103),i=t(104),r=t(105),a=r&&r.isTypedArray,s=a?i(a):o;e.exports=s},function(e,n,t){var o=t(30),i=t(20);e.exports=function(e){return null!=e&&i(e.length)&&!o(e)}},function(e,n,t){var o=t(3)(t(2),"Set");e.exports=o},function(e,n,t){var o=t(17);e.exports=function(e){return e==e&&!o(e)}},function(e,n){e.exports=function(e,n){return function(t){return null!=t&&(t[e]===n&&(void 0!==n||e in Object(t)))}}},function(e,n,t){var o=t(45),i=t(12);e.exports=function(e,n){for(var t=0,r=(n=o(n,e)).length;null!=e&&t<r;)e=e[i(n[t++])];return t&&t==r?e:void 0}},function(e,n,t){var o=t(1),i=t(21),r=t(117),a=t(120);e.exports=function(e,n){return o(e)?e:i(e,n)?[e]:r(a(e))}},function(e,n,t){},function(e,n,t){},function(e,n,t){},function(e,n,t){var o=t(53),i=t(58),r=t(129),a=t(137),s=t(146),l=t(51),c=r((function(e){var n=l(e);return s(n)&&(n=void 0),a(o(e,1,s,!0),i(n,2))}));e.exports=c},function(e,n,t){"use strict";
/*!
 * escape-html
 * Copyright(c) 2012-2013 TJ Holowaychuk
 * Copyright(c) 2015 Andreas Lubbe
 * Copyright(c) 2015 Tiancheng "Timothy" Gu
 * MIT Licensed
 */var o=/["'&<>]/;e.exports=function(e){var n,t=""+e,i=o.exec(t);if(!i)return t;var r="",a=0,s=0;for(a=i.index;a<t.length;a++){switch(t.charCodeAt(a)){case 34:n="&quot;";break;case 38:n="&amp;";break;case 39:n="&#39;";break;case 60:n="&lt;";break;case 62:n="&gt;";break;default:continue}s!==a&&(r+=t.substring(s,a)),s=a+1,r+=n}return s!==a?r+t.substring(s,a):r}},function(e,n){e.exports=function(e){var n=null==e?0:e.length;return n?e[n-1]:void 0}},function(e,n,t){e.exports=t(154)},function(e,n,t){var o=t(26),i=t(54);e.exports=function e(n,t,r,a,s){var l=-1,c=n.length;for(r||(r=i),s||(s=[]);++l<c;){var u=n[l];t>0&&r(u)?t>1?e(u,t-1,r,a,s):o(s,u):a||(s[s.length]=u)}return s}},function(e,n,t){var o=t(7),i=t(15),r=t(1),a=o?o.isConcatSpreadable:void 0;e.exports=function(e){return r(e)||i(e)||!!(a&&e&&e[a])}},function(e,n,t){var o=t(6),i=t(5);e.exports=function(e){return i(e)&&"[object Arguments]"==o(e)}},function(e,n,t){var o=t(7),i=Object.prototype,r=i.hasOwnProperty,a=i.toString,s=o?o.toStringTag:void 0;e.exports=function(e){var n=r.call(e,s),t=e[s];try{e[s]=void 0;var o=!0}catch(e){}var i=a.call(e);return o&&(n?e[s]=t:delete e[s]),i}},function(e,n){var t=Object.prototype.toString;e.exports=function(e){return t.call(e)}},function(e,n,t){var o=t(59),i=t(115),r=t(23),a=t(1),s=t(126);e.exports=function(e){return"function"==typeof e?e:null==e?r:"object"==typeof e?a(e)?i(e[0],e[1]):o(e):s(e)}},function(e,n,t){var o=t(60),i=t(114),r=t(43);e.exports=function(e){var n=i(e);return 1==n.length&&n[0][2]?r(n[0][0],n[0][1]):function(t){return t===e||o(t,e,n)}}},function(e,n,t){var o=t(28),i=t(32);e.exports=function(e,n,t,r){var a=t.length,s=a,l=!r;if(null==e)return!s;for(e=Object(e);a--;){var c=t[a];if(l&&c[2]?c[1]!==e[c[0]]:!(c[0]in e))return!1}for(;++a<s;){var u=(c=t[a])[0],d=e[u],p=c[1];if(l&&c[2]){if(void 0===d&&!(u in e))return!1}else{var f=new o;if(r)var m=r(d,p,u,e,n,f);if(!(void 0===m?i(p,d,3,r,f):m))return!1}}return!0}},function(e,n){e.exports=function(){this.__data__=[],this.size=0}},function(e,n,t){var o=t(9),i=Array.prototype.splice;e.exports=function(e){var n=this.__data__,t=o(n,e);return!(t<0)&&(t==n.length-1?n.pop():i.call(n,t,1),--this.size,!0)}},function(e,n,t){var o=t(9);e.exports=function(e){var n=this.__data__,t=o(n,e);return t<0?void 0:n[t][1]}},function(e,n,t){var o=t(9);e.exports=function(e){return o(this.__data__,e)>-1}},function(e,n,t){var o=t(9);e.exports=function(e,n){var t=this.__data__,i=o(t,e);return i<0?(++this.size,t.push([e,n])):t[i][1]=n,this}},function(e,n,t){var o=t(8);e.exports=function(){this.__data__=new o,this.size=0}},function(e,n){e.exports=function(e){var n=this.__data__,t=n.delete(e);return this.size=n.size,t}},function(e,n){e.exports=function(e){return this.__data__.get(e)}},function(e,n){e.exports=function(e){return this.__data__.has(e)}},function(e,n,t){var o=t(8),i=t(16),r=t(18);e.exports=function(e,n){var t=this.__data__;if(t instanceof o){var a=t.__data__;if(!i||a.length<199)return a.push([e,n]),this.size=++t.size,this;t=this.__data__=new r(a)}return t.set(e,n),this.size=t.size,this}},function(e,n,t){var o=t(30),i=t(72),r=t(17),a=t(31),s=/^\[object .+?Constructor\]$/,l=Function.prototype,c=Object.prototype,u=l.toString,d=c.hasOwnProperty,p=RegExp("^"+u.call(d).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");e.exports=function(e){return!(!r(e)||i(e))&&(o(e)?p:s).test(a(e))}},function(e,n,t){var o,i=t(73),r=(o=/[^.]+$/.exec(i&&i.keys&&i.keys.IE_PROTO||""))?"Symbol(src)_1."+o:"";e.exports=function(e){return!!r&&r in e}},function(e,n,t){var o=t(2)["__core-js_shared__"];e.exports=o},function(e,n){e.exports=function(e,n){return null==e?void 0:e[n]}},function(e,n,t){var o=t(76),i=t(8),r=t(16);e.exports=function(){this.size=0,this.__data__={hash:new o,map:new(r||i),string:new o}}},function(e,n,t){var o=t(77),i=t(78),r=t(79),a=t(80),s=t(81);function l(e){var n=-1,t=null==e?0:e.length;for(this.clear();++n<t;){var o=e[n];this.set(o[0],o[1])}}l.prototype.clear=o,l.prototype.delete=i,l.prototype.get=r,l.prototype.has=a,l.prototype.set=s,e.exports=l},function(e,n,t){var o=t(10);e.exports=function(){this.__data__=o?o(null):{},this.size=0}},function(e,n){e.exports=function(e){var n=this.has(e)&&delete this.__data__[e];return this.size-=n?1:0,n}},function(e,n,t){var o=t(10),i=Object.prototype.hasOwnProperty;e.exports=function(e){var n=this.__data__;if(o){var t=n[e];return"__lodash_hash_undefined__"===t?void 0:t}return i.call(n,e)?n[e]:void 0}},function(e,n,t){var o=t(10),i=Object.prototype.hasOwnProperty;e.exports=function(e){var n=this.__data__;return o?void 0!==n[e]:i.call(n,e)}},function(e,n,t){var o=t(10);e.exports=function(e,n){var t=this.__data__;return this.size+=this.has(e)?0:1,t[e]=o&&void 0===n?"__lodash_hash_undefined__":n,this}},function(e,n,t){var o=t(11);e.exports=function(e){var n=o(this,e).delete(e);return this.size-=n?1:0,n}},function(e,n){e.exports=function(e){var n=typeof e;return"string"==n||"number"==n||"symbol"==n||"boolean"==n?"__proto__"!==e:null===e}},function(e,n,t){var o=t(11);e.exports=function(e){return o(this,e).get(e)}},function(e,n,t){var o=t(11);e.exports=function(e){return o(this,e).has(e)}},function(e,n,t){var o=t(11);e.exports=function(e,n){var t=o(this,e),i=t.size;return t.set(e,n),this.size+=t.size==i?0:1,this}},function(e,n,t){var o=t(28),i=t(33),r=t(91),a=t(94),s=t(110),l=t(1),c=t(37),u=t(39),d="[object Object]",p=Object.prototype.hasOwnProperty;e.exports=function(e,n,t,f,m,h){var g=l(e),b=l(n),y=g?"[object Array]":s(e),v=b?"[object Array]":s(n),x=(y="[object Arguments]"==y?d:y)==d,w=(v="[object Arguments]"==v?d:v)==d,k=y==v;if(k&&c(e)){if(!c(n))return!1;g=!0,x=!1}if(k&&!x)return h||(h=new o),g||u(e)?i(e,n,t,f,m,h):r(e,n,y,t,f,m,h);if(!(1&t)){var T=x&&p.call(e,"__wrapped__"),j=w&&p.call(n,"__wrapped__");if(T||j){var S=T?e.value():e,I=j?n.value():n;return h||(h=new o),m(S,I,t,f,h)}}return!!k&&(h||(h=new o),a(e,n,t,f,m,h))}},function(e,n){e.exports=function(e){return this.__data__.set(e,"__lodash_hash_undefined__"),this}},function(e,n){e.exports=function(e){return this.__data__.has(e)}},function(e,n){e.exports=function(e,n){for(var t=-1,o=null==e?0:e.length;++t<o;)if(n(e[t],t,e))return!0;return!1}},function(e,n,t){var o=t(7),i=t(92),r=t(29),a=t(33),s=t(93),l=t(19),c=o?o.prototype:void 0,u=c?c.valueOf:void 0;e.exports=function(e,n,t,o,c,d,p){switch(t){case"[object DataView]":if(e.byteLength!=n.byteLength||e.byteOffset!=n.byteOffset)return!1;e=e.buffer,n=n.buffer;case"[object ArrayBuffer]":return!(e.byteLength!=n.byteLength||!d(new i(e),new i(n)));case"[object Boolean]":case"[object Date]":case"[object Number]":return r(+e,+n);case"[object Error]":return e.name==n.name&&e.message==n.message;case"[object RegExp]":case"[object String]":return e==n+"";case"[object Map]":var f=s;case"[object Set]":var m=1&o;if(f||(f=l),e.size!=n.size&&!m)return!1;var h=p.get(e);if(h)return h==n;o|=2,p.set(e,n);var g=a(f(e),f(n),o,c,d,p);return p.delete(e),g;case"[object Symbol]":if(u)return u.call(e)==u.call(n)}return!1}},function(e,n,t){var o=t(2).Uint8Array;e.exports=o},function(e,n){e.exports=function(e){var n=-1,t=Array(e.size);return e.forEach((function(e,o){t[++n]=[o,e]})),t}},function(e,n,t){var o=t(95),i=Object.prototype.hasOwnProperty;e.exports=function(e,n,t,r,a,s){var l=1&t,c=o(e),u=c.length;if(u!=o(n).length&&!l)return!1;for(var d=u;d--;){var p=c[d];if(!(l?p in n:i.call(n,p)))return!1}var f=s.get(e),m=s.get(n);if(f&&m)return f==n&&m==e;var h=!0;s.set(e,n),s.set(n,e);for(var g=l;++d<u;){var b=e[p=c[d]],y=n[p];if(r)var v=l?r(y,b,p,n,e,s):r(b,y,p,e,n,s);if(!(void 0===v?b===y||a(b,y,t,r,s):v)){h=!1;break}g||(g="constructor"==p)}if(h&&!g){var x=e.constructor,w=n.constructor;x==w||!("constructor"in e)||!("constructor"in n)||"function"==typeof x&&x instanceof x&&"function"==typeof w&&w instanceof w||(h=!1)}return s.delete(e),s.delete(n),h}},function(e,n,t){var o=t(96),i=t(97),r=t(36);e.exports=function(e){return o(e,r,i)}},function(e,n,t){var o=t(26),i=t(1);e.exports=function(e,n,t){var r=n(e);return i(e)?r:o(r,t(e))}},function(e,n,t){var o=t(98),i=t(99),r=Object.prototype.propertyIsEnumerable,a=Object.getOwnPropertySymbols,s=a?function(e){return null==e?[]:(e=Object(e),o(a(e),(function(n){return r.call(e,n)})))}:i;e.exports=s},function(e,n){e.exports=function(e,n){for(var t=-1,o=null==e?0:e.length,i=0,r=[];++t<o;){var a=e[t];n(a,t,e)&&(r[i++]=a)}return r}},function(e,n){e.exports=function(){return[]}},function(e,n,t){var o=t(101),i=t(15),r=t(1),a=t(37),s=t(38),l=t(39),c=Object.prototype.hasOwnProperty;e.exports=function(e,n){var t=r(e),u=!t&&i(e),d=!t&&!u&&a(e),p=!t&&!u&&!d&&l(e),f=t||u||d||p,m=f?o(e.length,String):[],h=m.length;for(var g in e)!n&&!c.call(e,g)||f&&("length"==g||d&&("offset"==g||"parent"==g)||p&&("buffer"==g||"byteLength"==g||"byteOffset"==g)||s(g,h))||m.push(g);return m}},function(e,n){e.exports=function(e,n){for(var t=-1,o=Array(e);++t<e;)o[t]=n(t);return o}},function(e,n){e.exports=function(){return!1}},function(e,n,t){var o=t(6),i=t(20),r=t(5),a={};a["[object Float32Array]"]=a["[object Float64Array]"]=a["[object Int8Array]"]=a["[object Int16Array]"]=a["[object Int32Array]"]=a["[object Uint8Array]"]=a["[object Uint8ClampedArray]"]=a["[object Uint16Array]"]=a["[object Uint32Array]"]=!0,a["[object Arguments]"]=a["[object Array]"]=a["[object ArrayBuffer]"]=a["[object Boolean]"]=a["[object DataView]"]=a["[object Date]"]=a["[object Error]"]=a["[object Function]"]=a["[object Map]"]=a["[object Number]"]=a["[object Object]"]=a["[object RegExp]"]=a["[object Set]"]=a["[object String]"]=a["[object WeakMap]"]=!1,e.exports=function(e){return r(e)&&i(e.length)&&!!a[o(e)]}},function(e,n){e.exports=function(e){return function(n){return e(n)}}},function(e,n,t){(function(e){var o=t(27),i=n&&!n.nodeType&&n,r=i&&"object"==typeof e&&e&&!e.nodeType&&e,a=r&&r.exports===i&&o.process,s=function(){try{var e=r&&r.require&&r.require("util").types;return e||a&&a.binding&&a.binding("util")}catch(e){}}();e.exports=s}).call(this,t(25)(e))},function(e,n,t){var o=t(107),i=t(108),r=Object.prototype.hasOwnProperty;e.exports=function(e){if(!o(e))return i(e);var n=[];for(var t in Object(e))r.call(e,t)&&"constructor"!=t&&n.push(t);return n}},function(e,n){var t=Object.prototype;e.exports=function(e){var n=e&&e.constructor;return e===("function"==typeof n&&n.prototype||t)}},function(e,n,t){var o=t(109)(Object.keys,Object);e.exports=o},function(e,n){e.exports=function(e,n){return function(t){return e(n(t))}}},function(e,n,t){var o=t(111),i=t(16),r=t(112),a=t(41),s=t(113),l=t(6),c=t(31),u=c(o),d=c(i),p=c(r),f=c(a),m=c(s),h=l;(o&&"[object DataView]"!=h(new o(new ArrayBuffer(1)))||i&&"[object Map]"!=h(new i)||r&&"[object Promise]"!=h(r.resolve())||a&&"[object Set]"!=h(new a)||s&&"[object WeakMap]"!=h(new s))&&(h=function(e){var n=l(e),t="[object Object]"==n?e.constructor:void 0,o=t?c(t):"";if(o)switch(o){case u:return"[object DataView]";case d:return"[object Map]";case p:return"[object Promise]";case f:return"[object Set]";case m:return"[object WeakMap]"}return n}),e.exports=h},function(e,n,t){var o=t(3)(t(2),"DataView");e.exports=o},function(e,n,t){var o=t(3)(t(2),"Promise");e.exports=o},function(e,n,t){var o=t(3)(t(2),"WeakMap");e.exports=o},function(e,n,t){var o=t(42),i=t(36);e.exports=function(e){for(var n=i(e),t=n.length;t--;){var r=n[t],a=e[r];n[t]=[r,a,o(a)]}return n}},function(e,n,t){var o=t(32),i=t(116),r=t(123),a=t(21),s=t(42),l=t(43),c=t(12);e.exports=function(e,n){return a(e)&&s(n)?l(c(e),n):function(t){var a=i(t,e);return void 0===a&&a===n?r(t,e):o(n,a,3)}}},function(e,n,t){var o=t(44);e.exports=function(e,n,t){var i=null==e?void 0:o(e,n);return void 0===i?t:i}},function(e,n,t){var o=t(118),i=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,r=/\\(\\)?/g,a=o((function(e){var n=[];return 46===e.charCodeAt(0)&&n.push(""),e.replace(i,(function(e,t,o,i){n.push(o?i.replace(r,"$1"):t||e)})),n}));e.exports=a},function(e,n,t){var o=t(119);e.exports=function(e){var n=o(e,(function(e){return 500===t.size&&t.clear(),e})),t=n.cache;return n}},function(e,n,t){var o=t(18);function i(e,n){if("function"!=typeof e||null!=n&&"function"!=typeof n)throw new TypeError("Expected a function");var t=function(){var o=arguments,i=n?n.apply(this,o):o[0],r=t.cache;if(r.has(i))return r.get(i);var a=e.apply(this,o);return t.cache=r.set(i,a)||r,a};return t.cache=new(i.Cache||o),t}i.Cache=o,e.exports=i},function(e,n,t){var o=t(121);e.exports=function(e){return null==e?"":o(e)}},function(e,n,t){var o=t(7),i=t(122),r=t(1),a=t(22),s=o?o.prototype:void 0,l=s?s.toString:void 0;e.exports=function e(n){if("string"==typeof n)return n;if(r(n))return i(n,e)+"";if(a(n))return l?l.call(n):"";var t=n+"";return"0"==t&&1/n==-1/0?"-0":t}},function(e,n){e.exports=function(e,n){for(var t=-1,o=null==e?0:e.length,i=Array(o);++t<o;)i[t]=n(e[t],t,e);return i}},function(e,n,t){var o=t(124),i=t(125);e.exports=function(e,n){return null!=e&&i(e,n,o)}},function(e,n){e.exports=function(e,n){return null!=e&&n in Object(e)}},function(e,n,t){var o=t(45),i=t(15),r=t(1),a=t(38),s=t(20),l=t(12);e.exports=function(e,n,t){for(var c=-1,u=(n=o(n,e)).length,d=!1;++c<u;){var p=l(n[c]);if(!(d=null!=e&&t(e,p)))break;e=e[p]}return d||++c!=u?d:!!(u=null==e?0:e.length)&&s(u)&&a(p,u)&&(r(e)||i(e))}},function(e,n,t){var o=t(127),i=t(128),r=t(21),a=t(12);e.exports=function(e){return r(e)?o(a(e)):i(e)}},function(e,n){e.exports=function(e){return function(n){return null==n?void 0:n[e]}}},function(e,n,t){var o=t(44);e.exports=function(e){return function(n){return o(n,e)}}},function(e,n,t){var o=t(23),i=t(130),r=t(132);e.exports=function(e,n){return r(i(e,n,o),e+"")}},function(e,n,t){var o=t(131),i=Math.max;e.exports=function(e,n,t){return n=i(void 0===n?e.length-1:n,0),function(){for(var r=arguments,a=-1,s=i(r.length-n,0),l=Array(s);++a<s;)l[a]=r[n+a];a=-1;for(var c=Array(n+1);++a<n;)c[a]=r[a];return c[n]=t(l),o(e,this,c)}}},function(e,n){e.exports=function(e,n,t){switch(t.length){case 0:return e.call(n);case 1:return e.call(n,t[0]);case 2:return e.call(n,t[0],t[1]);case 3:return e.call(n,t[0],t[1],t[2])}return e.apply(n,t)}},function(e,n,t){var o=t(133),i=t(136)(o);e.exports=i},function(e,n,t){var o=t(134),i=t(135),r=t(23),a=i?function(e,n){return i(e,"toString",{configurable:!0,enumerable:!1,value:o(n),writable:!0})}:r;e.exports=a},function(e,n){e.exports=function(e){return function(){return e}}},function(e,n,t){var o=t(3),i=function(){try{var e=o(Object,"defineProperty");return e({},"",{}),e}catch(e){}}();e.exports=i},function(e,n){var t=Date.now;e.exports=function(e){var n=0,o=0;return function(){var i=t(),r=16-(i-o);if(o=i,r>0){if(++n>=800)return arguments[0]}else n=0;return e.apply(void 0,arguments)}}},function(e,n,t){var o=t(34),i=t(138),r=t(143),a=t(35),s=t(144),l=t(19);e.exports=function(e,n,t){var c=-1,u=i,d=e.length,p=!0,f=[],m=f;if(t)p=!1,u=r;else if(d>=200){var h=n?null:s(e);if(h)return l(h);p=!1,u=a,m=new o}else m=n?[]:f;e:for(;++c<d;){var g=e[c],b=n?n(g):g;if(g=t||0!==g?g:0,p&&b==b){for(var y=m.length;y--;)if(m[y]===b)continue e;n&&m.push(b),f.push(g)}else u(m,b,t)||(m!==f&&m.push(b),f.push(g))}return f}},function(e,n,t){var o=t(139);e.exports=function(e,n){return!!(null==e?0:e.length)&&o(e,n,0)>-1}},function(e,n,t){var o=t(140),i=t(141),r=t(142);e.exports=function(e,n,t){return n==n?r(e,n,t):o(e,i,t)}},function(e,n){e.exports=function(e,n,t,o){for(var i=e.length,r=t+(o?1:-1);o?r--:++r<i;)if(n(e[r],r,e))return r;return-1}},function(e,n){e.exports=function(e){return e!=e}},function(e,n){e.exports=function(e,n,t){for(var o=t-1,i=e.length;++o<i;)if(e[o]===n)return o;return-1}},function(e,n){e.exports=function(e,n,t){for(var o=-1,i=null==e?0:e.length;++o<i;)if(t(n,e[o]))return!0;return!1}},function(e,n,t){var o=t(41),i=t(145),r=t(19),a=o&&1/r(new o([,-0]))[1]==1/0?function(e){return new o(e)}:i;e.exports=a},function(e,n){e.exports=function(){}},function(e,n,t){var o=t(40),i=t(5);e.exports=function(e){return i(e)&&o(e)}},function(e,n,t){},function(e,n,t){},function(e,n,t){},function(e,n,t){},function(e,n,t){"use strict";t(46)},function(e,n,t){"use strict";t(47)},function(e,n,t){"use strict";t(48)},function(e,n,t){"use strict";t.r(n);var o=t(0);
/*!
  * vue-router v3.6.5
  * (c) 2022 Evan You
  * @license MIT
  */function i(e,n){for(var t in n)e[t]=n[t];return e}var r=/[!'()*]/g,a=function(e){return"%"+e.charCodeAt(0).toString(16)},s=/%2C/g,l=function(e){return encodeURIComponent(e).replace(r,a).replace(s,",")};function c(e){try{return decodeURIComponent(e)}catch(e){0}return e}var u=function(e){return null==e||"object"==typeof e?e:String(e)};function d(e){var n={};return(e=e.trim().replace(/^(\?|#|&)/,""))?(e.split("&").forEach((function(e){var t=e.replace(/\+/g," ").split("="),o=c(t.shift()),i=t.length>0?c(t.join("=")):null;void 0===n[o]?n[o]=i:Array.isArray(n[o])?n[o].push(i):n[o]=[n[o],i]})),n):n}function p(e){var n=e?Object.keys(e).map((function(n){var t=e[n];if(void 0===t)return"";if(null===t)return l(n);if(Array.isArray(t)){var o=[];return t.forEach((function(e){void 0!==e&&(null===e?o.push(l(n)):o.push(l(n)+"="+l(e)))})),o.join("&")}return l(n)+"="+l(t)})).filter((function(e){return e.length>0})).join("&"):null;return n?"?"+n:""}var f=/\/?$/;function m(e,n,t,o){var i=o&&o.options.stringifyQuery,r=n.query||{};try{r=h(r)}catch(e){}var a={name:n.name||e&&e.name,meta:e&&e.meta||{},path:n.path||"/",hash:n.hash||"",query:r,params:n.params||{},fullPath:y(n,i),matched:e?b(e):[]};return t&&(a.redirectedFrom=y(t,i)),Object.freeze(a)}function h(e){if(Array.isArray(e))return e.map(h);if(e&&"object"==typeof e){var n={};for(var t in e)n[t]=h(e[t]);return n}return e}var g=m(null,{path:"/"});function b(e){for(var n=[];e;)n.unshift(e),e=e.parent;return n}function y(e,n){var t=e.path,o=e.query;void 0===o&&(o={});var i=e.hash;return void 0===i&&(i=""),(t||"/")+(n||p)(o)+i}function v(e,n,t){return n===g?e===n:!!n&&(e.path&&n.path?e.path.replace(f,"")===n.path.replace(f,"")&&(t||e.hash===n.hash&&x(e.query,n.query)):!(!e.name||!n.name)&&(e.name===n.name&&(t||e.hash===n.hash&&x(e.query,n.query)&&x(e.params,n.params))))}function x(e,n){if(void 0===e&&(e={}),void 0===n&&(n={}),!e||!n)return e===n;var t=Object.keys(e).sort(),o=Object.keys(n).sort();return t.length===o.length&&t.every((function(t,i){var r=e[t];if(o[i]!==t)return!1;var a=n[t];return null==r||null==a?r===a:"object"==typeof r&&"object"==typeof a?x(r,a):String(r)===String(a)}))}function w(e){for(var n=0;n<e.matched.length;n++){var t=e.matched[n];for(var o in t.instances){var i=t.instances[o],r=t.enteredCbs[o];if(i&&r){delete t.enteredCbs[o];for(var a=0;a<r.length;a++)i._isBeingDestroyed||r[a](i)}}}}var k={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(e,n){var t=n.props,o=n.children,r=n.parent,a=n.data;a.routerView=!0;for(var s=r.$createElement,l=t.name,c=r.$route,u=r._routerViewCache||(r._routerViewCache={}),d=0,p=!1;r&&r._routerRoot!==r;){var f=r.$vnode?r.$vnode.data:{};f.routerView&&d++,f.keepAlive&&r._directInactive&&r._inactive&&(p=!0),r=r.$parent}if(a.routerViewDepth=d,p){var m=u[l],h=m&&m.component;return h?(m.configProps&&T(h,a,m.route,m.configProps),s(h,a,o)):s()}var g=c.matched[d],b=g&&g.components[l];if(!g||!b)return u[l]=null,s();u[l]={component:b},a.registerRouteInstance=function(e,n){var t=g.instances[l];(n&&t!==e||!n&&t===e)&&(g.instances[l]=n)},(a.hook||(a.hook={})).prepatch=function(e,n){g.instances[l]=n.componentInstance},a.hook.init=function(e){e.data.keepAlive&&e.componentInstance&&e.componentInstance!==g.instances[l]&&(g.instances[l]=e.componentInstance),w(c)};var y=g.props&&g.props[l];return y&&(i(u[l],{route:c,configProps:y}),T(b,a,c,y)),s(b,a,o)}};function T(e,n,t,o){var r=n.props=function(e,n){switch(typeof n){case"undefined":return;case"object":return n;case"function":return n(e);case"boolean":return n?e.params:void 0;default:0}}(t,o);if(r){r=n.props=i({},r);var a=n.attrs=n.attrs||{};for(var s in r)e.props&&s in e.props||(a[s]=r[s],delete r[s])}}function j(e,n,t){var o=e.charAt(0);if("/"===o)return e;if("?"===o||"#"===o)return n+e;var i=n.split("/");t&&i[i.length-1]||i.pop();for(var r=e.replace(/^\//,"").split("/"),a=0;a<r.length;a++){var s=r[a];".."===s?i.pop():"."!==s&&i.push(s)}return""!==i[0]&&i.unshift(""),i.join("/")}function S(e){return e.replace(/\/(?:\s*\/)+/g,"/")}var I=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)},z=U,_=R,P=function(e,n){return B(R(e,n),n)},E=B,C=N,O=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function R(e,n){for(var t,o=[],i=0,r=0,a="",s=n&&n.delimiter||"/";null!=(t=O.exec(e));){var l=t[0],c=t[1],u=t.index;if(a+=e.slice(r,u),r=u+l.length,c)a+=c[1];else{var d=e[r],p=t[2],f=t[3],m=t[4],h=t[5],g=t[6],b=t[7];a&&(o.push(a),a="");var y=null!=p&&null!=d&&d!==p,v="+"===g||"*"===g,x="?"===g||"*"===g,w=t[2]||s,k=m||h;o.push({name:f||i++,prefix:p||"",delimiter:w,optional:x,repeat:v,partial:y,asterisk:!!b,pattern:k?A(k):b?".*":"[^"+L(w)+"]+?"})}}return r<e.length&&(a+=e.substr(r)),a&&o.push(a),o}function D(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function B(e,n){for(var t=new Array(e.length),o=0;o<e.length;o++)"object"==typeof e[o]&&(t[o]=new RegExp("^(?:"+e[o].pattern+")$",M(n)));return function(n,o){for(var i="",r=n||{},a=(o||{}).pretty?D:encodeURIComponent,s=0;s<e.length;s++){var l=e[s];if("string"!=typeof l){var c,u=r[l.name];if(null==u){if(l.optional){l.partial&&(i+=l.prefix);continue}throw new TypeError('Expected "'+l.name+'" to be defined')}if(I(u)){if(!l.repeat)throw new TypeError('Expected "'+l.name+'" to not repeat, but received `'+JSON.stringify(u)+"`");if(0===u.length){if(l.optional)continue;throw new TypeError('Expected "'+l.name+'" to not be empty')}for(var d=0;d<u.length;d++){if(c=a(u[d]),!t[s].test(c))throw new TypeError('Expected all "'+l.name+'" to match "'+l.pattern+'", but received `'+JSON.stringify(c)+"`");i+=(0===d?l.prefix:l.delimiter)+c}}else{if(c=l.asterisk?encodeURI(u).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):a(u),!t[s].test(c))throw new TypeError('Expected "'+l.name+'" to match "'+l.pattern+'", but received "'+c+'"');i+=l.prefix+c}}else i+=l}return i}}function L(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function A(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function F(e,n){return e.keys=n,e}function M(e){return e&&e.sensitive?"":"i"}function N(e,n,t){I(n)||(t=n||t,n=[]);for(var o=(t=t||{}).strict,i=!1!==t.end,r="",a=0;a<e.length;a++){var s=e[a];if("string"==typeof s)r+=L(s);else{var l=L(s.prefix),c="(?:"+s.pattern+")";n.push(s),s.repeat&&(c+="(?:"+l+c+")*"),r+=c=s.optional?s.partial?l+"("+c+")?":"(?:"+l+"("+c+"))?":l+"("+c+")"}}var u=L(t.delimiter||"/"),d=r.slice(-u.length)===u;return o||(r=(d?r.slice(0,-u.length):r)+"(?:"+u+"(?=$))?"),r+=i?"$":o&&d?"":"(?="+u+"|$)",F(new RegExp("^"+r,M(t)),n)}function U(e,n,t){return I(n)||(t=n||t,n=[]),t=t||{},e instanceof RegExp?function(e,n){var t=e.source.match(/\((?!\?)/g);if(t)for(var o=0;o<t.length;o++)n.push({name:o,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return F(e,n)}(e,n):I(e)?function(e,n,t){for(var o=[],i=0;i<e.length;i++)o.push(U(e[i],n,t).source);return F(new RegExp("(?:"+o.join("|")+")",M(t)),n)}(e,n,t):function(e,n,t){return N(R(e,t),n,t)}(e,n,t)}z.parse=_,z.compile=P,z.tokensToFunction=E,z.tokensToRegExp=C;var $=Object.create(null);function H(e,n,t){n=n||{};try{var o=$[e]||($[e]=z.compile(e));return"string"==typeof n.pathMatch&&(n[0]=n.pathMatch),o(n,{pretty:!0})}catch(e){return""}finally{delete n[0]}}function q(e,n,t,o){var r="string"==typeof e?{path:e}:e;if(r._normalized)return r;if(r.name){var a=(r=i({},e)).params;return a&&"object"==typeof a&&(r.params=i({},a)),r}if(!r.path&&r.params&&n){(r=i({},r))._normalized=!0;var s=i(i({},n.params),r.params);if(n.name)r.name=n.name,r.params=s;else if(n.matched.length){var l=n.matched[n.matched.length-1].path;r.path=H(l,s,n.path)}else 0;return r}var c=function(e){var n="",t="",o=e.indexOf("#");o>=0&&(n=e.slice(o),e=e.slice(0,o));var i=e.indexOf("?");return i>=0&&(t=e.slice(i+1),e=e.slice(0,i)),{path:e,query:t,hash:n}}(r.path||""),p=n&&n.path||"/",f=c.path?j(c.path,p,t||r.append):p,m=function(e,n,t){void 0===n&&(n={});var o,i=t||d;try{o=i(e||"")}catch(e){o={}}for(var r in n){var a=n[r];o[r]=Array.isArray(a)?a.map(u):u(a)}return o}(c.query,r.query,o&&o.options.parseQuery),h=r.hash||c.hash;return h&&"#"!==h.charAt(0)&&(h="#"+h),{_normalized:!0,path:f,query:m,hash:h}}var W,V=function(){},G={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(e){var n=this,t=this.$router,o=this.$route,r=t.resolve(this.to,o,this.append),a=r.location,s=r.route,l=r.href,c={},u=t.options.linkActiveClass,d=t.options.linkExactActiveClass,p=null==u?"router-link-active":u,h=null==d?"router-link-exact-active":d,g=null==this.activeClass?p:this.activeClass,b=null==this.exactActiveClass?h:this.exactActiveClass,y=s.redirectedFrom?m(null,q(s.redirectedFrom),null,t):s;c[b]=v(o,y,this.exactPath),c[g]=this.exact||this.exactPath?c[b]:function(e,n){return 0===e.path.replace(f,"/").indexOf(n.path.replace(f,"/"))&&(!n.hash||e.hash===n.hash)&&function(e,n){for(var t in n)if(!(t in e))return!1;return!0}(e.query,n.query)}(o,y);var x=c[b]?this.ariaCurrentValue:null,w=function(e){J(e)&&(n.replace?t.replace(a,V):t.push(a,V))},k={click:J};Array.isArray(this.event)?this.event.forEach((function(e){k[e]=w})):k[this.event]=w;var T={class:c},j=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:l,route:s,navigate:w,isActive:c[g],isExactActive:c[b]});if(j){if(1===j.length)return j[0];if(j.length>1||!j.length)return 0===j.length?e():e("span",{},j)}if("a"===this.tag)T.on=k,T.attrs={href:l,"aria-current":x};else{var S=function e(n){var t;if(n)for(var o=0;o<n.length;o++){if("a"===(t=n[o]).tag)return t;if(t.children&&(t=e(t.children)))return t}}(this.$slots.default);if(S){S.isStatic=!1;var I=S.data=i({},S.data);for(var z in I.on=I.on||{},I.on){var _=I.on[z];z in k&&(I.on[z]=Array.isArray(_)?_:[_])}for(var P in k)P in I.on?I.on[P].push(k[P]):I.on[P]=w;var E=S.data.attrs=i({},S.data.attrs);E.href=l,E["aria-current"]=x}else T.on=k}return e(this.tag,T,this.$slots.default)}};function J(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey||e.defaultPrevented||void 0!==e.button&&0!==e.button)){if(e.currentTarget&&e.currentTarget.getAttribute){var n=e.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(n))return}return e.preventDefault&&e.preventDefault(),!0}}var Y="undefined"!=typeof window;function K(e,n,t,o,i){var r=n||[],a=t||Object.create(null),s=o||Object.create(null);e.forEach((function(e){!function e(n,t,o,i,r,a){var s=i.path,l=i.name;0;var c=i.pathToRegexpOptions||{},u=function(e,n,t){t||(e=e.replace(/\/$/,""));if("/"===e[0])return e;if(null==n)return e;return S(n.path+"/"+e)}(s,r,c.strict);"boolean"==typeof i.caseSensitive&&(c.sensitive=i.caseSensitive);var d={path:u,regex:X(u,c),components:i.components||{default:i.component},alias:i.alias?"string"==typeof i.alias?[i.alias]:i.alias:[],instances:{},enteredCbs:{},name:l,parent:r,matchAs:a,redirect:i.redirect,beforeEnter:i.beforeEnter,meta:i.meta||{},props:null==i.props?{}:i.components?i.props:{default:i.props}};i.children&&i.children.forEach((function(i){var r=a?S(a+"/"+i.path):void 0;e(n,t,o,i,d,r)}));t[d.path]||(n.push(d.path),t[d.path]=d);if(void 0!==i.alias)for(var p=Array.isArray(i.alias)?i.alias:[i.alias],f=0;f<p.length;++f){0;var m={path:p[f],children:i.children};e(n,t,o,m,r,d.path||"/")}l&&(o[l]||(o[l]=d))}(r,a,s,e,i)}));for(var l=0,c=r.length;l<c;l++)"*"===r[l]&&(r.push(r.splice(l,1)[0]),c--,l--);return{pathList:r,pathMap:a,nameMap:s}}function X(e,n){return z(e,[],n)}function Z(e,n){var t=K(e),o=t.pathList,i=t.pathMap,r=t.nameMap;function a(e,t,a){var s=q(e,t,!1,n),c=s.name;if(c){var u=r[c];if(!u)return l(null,s);var d=u.regex.keys.filter((function(e){return!e.optional})).map((function(e){return e.name}));if("object"!=typeof s.params&&(s.params={}),t&&"object"==typeof t.params)for(var p in t.params)!(p in s.params)&&d.indexOf(p)>-1&&(s.params[p]=t.params[p]);return s.path=H(u.path,s.params),l(u,s,a)}if(s.path){s.params={};for(var f=0;f<o.length;f++){var m=o[f],h=i[m];if(Q(h.regex,s.path,s.params))return l(h,s,a)}}return l(null,s)}function s(e,t){var o=e.redirect,i="function"==typeof o?o(m(e,t,null,n)):o;if("string"==typeof i&&(i={path:i}),!i||"object"!=typeof i)return l(null,t);var s=i,c=s.name,u=s.path,d=t.query,p=t.hash,f=t.params;if(d=s.hasOwnProperty("query")?s.query:d,p=s.hasOwnProperty("hash")?s.hash:p,f=s.hasOwnProperty("params")?s.params:f,c){r[c];return a({_normalized:!0,name:c,query:d,hash:p,params:f},void 0,t)}if(u){var h=function(e,n){return j(e,n.parent?n.parent.path:"/",!0)}(u,e);return a({_normalized:!0,path:H(h,f),query:d,hash:p},void 0,t)}return l(null,t)}function l(e,t,o){return e&&e.redirect?s(e,o||t):e&&e.matchAs?function(e,n,t){var o=a({_normalized:!0,path:H(t,n.params)});if(o){var i=o.matched,r=i[i.length-1];return n.params=o.params,l(r,n)}return l(null,n)}(0,t,e.matchAs):m(e,t,o,n)}return{match:a,addRoute:function(e,n){var t="object"!=typeof e?r[e]:void 0;K([n||e],o,i,r,t),t&&t.alias.length&&K(t.alias.map((function(e){return{path:e,children:[n]}})),o,i,r,t)},getRoutes:function(){return o.map((function(e){return i[e]}))},addRoutes:function(e){K(e,o,i,r)}}}function Q(e,n,t){var o=n.match(e);if(!o)return!1;if(!t)return!0;for(var i=1,r=o.length;i<r;++i){var a=e.keys[i-1];a&&(t[a.name||"pathMatch"]="string"==typeof o[i]?c(o[i]):o[i])}return!0}var ee=Y&&window.performance&&window.performance.now?window.performance:Date;function ne(){return ee.now().toFixed(3)}var te=ne();function oe(){return te}function ie(e){return te=e}var re=Object.create(null);function ae(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var e=window.location.protocol+"//"+window.location.host,n=window.location.href.replace(e,""),t=i({},window.history.state);return t.key=oe(),window.history.replaceState(t,"",n),window.addEventListener("popstate",ce),function(){window.removeEventListener("popstate",ce)}}function se(e,n,t,o){if(e.app){var i=e.options.scrollBehavior;i&&e.app.$nextTick((function(){var r=function(){var e=oe();if(e)return re[e]}(),a=i.call(e,n,t,o?r:null);a&&("function"==typeof a.then?a.then((function(e){me(e,r)})).catch((function(e){0})):me(a,r))}))}}function le(){var e=oe();e&&(re[e]={x:window.pageXOffset,y:window.pageYOffset})}function ce(e){le(),e.state&&e.state.key&&ie(e.state.key)}function ue(e){return pe(e.x)||pe(e.y)}function de(e){return{x:pe(e.x)?e.x:window.pageXOffset,y:pe(e.y)?e.y:window.pageYOffset}}function pe(e){return"number"==typeof e}var fe=/^#\d/;function me(e,n){var t,o="object"==typeof e;if(o&&"string"==typeof e.selector){var i=fe.test(e.selector)?document.getElementById(e.selector.slice(1)):document.querySelector(e.selector);if(i){var r=e.offset&&"object"==typeof e.offset?e.offset:{};n=function(e,n){var t=document.documentElement.getBoundingClientRect(),o=e.getBoundingClientRect();return{x:o.left-t.left-n.x,y:o.top-t.top-n.y}}(i,r={x:pe((t=r).x)?t.x:0,y:pe(t.y)?t.y:0})}else ue(e)&&(n=de(e))}else o&&ue(e)&&(n=de(e));n&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:n.x,top:n.y,behavior:e.behavior}):window.scrollTo(n.x,n.y))}var he,ge=Y&&((-1===(he=window.navigator.userAgent).indexOf("Android 2.")&&-1===he.indexOf("Android 4.0")||-1===he.indexOf("Mobile Safari")||-1!==he.indexOf("Chrome")||-1!==he.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function be(e,n){le();var t=window.history;try{if(n){var o=i({},t.state);o.key=oe(),t.replaceState(o,"",e)}else t.pushState({key:ie(ne())},"",e)}catch(t){window.location[n?"replace":"assign"](e)}}function ye(e){be(e,!0)}var ve={redirected:2,aborted:4,cancelled:8,duplicated:16};function xe(e,n){return ke(e,n,ve.redirected,'Redirected when going from "'+e.fullPath+'" to "'+function(e){if("string"==typeof e)return e;if("path"in e)return e.path;var n={};return Te.forEach((function(t){t in e&&(n[t]=e[t])})),JSON.stringify(n,null,2)}(n)+'" via a navigation guard.')}function we(e,n){return ke(e,n,ve.cancelled,'Navigation cancelled from "'+e.fullPath+'" to "'+n.fullPath+'" with a new navigation.')}function ke(e,n,t,o){var i=new Error(o);return i._isRouter=!0,i.from=e,i.to=n,i.type=t,i}var Te=["params","query","hash"];function je(e){return Object.prototype.toString.call(e).indexOf("Error")>-1}function Se(e,n){return je(e)&&e._isRouter&&(null==n||e.type===n)}function Ie(e,n,t){var o=function(i){i>=e.length?t():e[i]?n(e[i],(function(){o(i+1)})):o(i+1)};o(0)}function ze(e){return function(n,t,o){var i=!1,r=0,a=null;_e(e,(function(e,n,t,s){if("function"==typeof e&&void 0===e.cid){i=!0,r++;var l,c=Ce((function(n){var i;((i=n).__esModule||Ee&&"Module"===i[Symbol.toStringTag])&&(n=n.default),e.resolved="function"==typeof n?n:W.extend(n),t.components[s]=n,--r<=0&&o()})),u=Ce((function(e){var n="Failed to resolve async component "+s+": "+e;a||(a=je(e)?e:new Error(n),o(a))}));try{l=e(c,u)}catch(e){u(e)}if(l)if("function"==typeof l.then)l.then(c,u);else{var d=l.component;d&&"function"==typeof d.then&&d.then(c,u)}}})),i||o()}}function _e(e,n){return Pe(e.map((function(e){return Object.keys(e.components).map((function(t){return n(e.components[t],e.instances[t],e,t)}))})))}function Pe(e){return Array.prototype.concat.apply([],e)}var Ee="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function Ce(e){var n=!1;return function(){for(var t=[],o=arguments.length;o--;)t[o]=arguments[o];if(!n)return n=!0,e.apply(this,t)}}var Oe=function(e,n){this.router=e,this.base=function(e){if(!e)if(Y){var n=document.querySelector("base");e=(e=n&&n.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else e="/";"/"!==e.charAt(0)&&(e="/"+e);return e.replace(/\/$/,"")}(n),this.current=g,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function Re(e,n,t,o){var i=_e(e,(function(e,o,i,r){var a=function(e,n){"function"!=typeof e&&(e=W.extend(e));return e.options[n]}(e,n);if(a)return Array.isArray(a)?a.map((function(e){return t(e,o,i,r)})):t(a,o,i,r)}));return Pe(o?i.reverse():i)}function De(e,n){if(n)return function(){return e.apply(n,arguments)}}Oe.prototype.listen=function(e){this.cb=e},Oe.prototype.onReady=function(e,n){this.ready?e():(this.readyCbs.push(e),n&&this.readyErrorCbs.push(n))},Oe.prototype.onError=function(e){this.errorCbs.push(e)},Oe.prototype.transitionTo=function(e,n,t){var o,i=this;try{o=this.router.match(e,this.current)}catch(e){throw this.errorCbs.forEach((function(n){n(e)})),e}var r=this.current;this.confirmTransition(o,(function(){i.updateRoute(o),n&&n(o),i.ensureURL(),i.router.afterHooks.forEach((function(e){e&&e(o,r)})),i.ready||(i.ready=!0,i.readyCbs.forEach((function(e){e(o)})))}),(function(e){t&&t(e),e&&!i.ready&&(Se(e,ve.redirected)&&r===g||(i.ready=!0,i.readyErrorCbs.forEach((function(n){n(e)}))))}))},Oe.prototype.confirmTransition=function(e,n,t){var o=this,i=this.current;this.pending=e;var r,a,s=function(e){!Se(e)&&je(e)&&(o.errorCbs.length?o.errorCbs.forEach((function(n){n(e)})):console.error(e)),t&&t(e)},l=e.matched.length-1,c=i.matched.length-1;if(v(e,i)&&l===c&&e.matched[l]===i.matched[c])return this.ensureURL(),e.hash&&se(this.router,i,e,!1),s(((a=ke(r=i,e,ve.duplicated,'Avoided redundant navigation to current location: "'+r.fullPath+'".')).name="NavigationDuplicated",a));var u=function(e,n){var t,o=Math.max(e.length,n.length);for(t=0;t<o&&e[t]===n[t];t++);return{updated:n.slice(0,t),activated:n.slice(t),deactivated:e.slice(t)}}(this.current.matched,e.matched),d=u.updated,p=u.deactivated,f=u.activated,m=[].concat(function(e){return Re(e,"beforeRouteLeave",De,!0)}(p),this.router.beforeHooks,function(e){return Re(e,"beforeRouteUpdate",De)}(d),f.map((function(e){return e.beforeEnter})),ze(f)),h=function(n,t){if(o.pending!==e)return s(we(i,e));try{n(e,i,(function(n){!1===n?(o.ensureURL(!0),s(function(e,n){return ke(e,n,ve.aborted,'Navigation aborted from "'+e.fullPath+'" to "'+n.fullPath+'" via a navigation guard.')}(i,e))):je(n)?(o.ensureURL(!0),s(n)):"string"==typeof n||"object"==typeof n&&("string"==typeof n.path||"string"==typeof n.name)?(s(xe(i,e)),"object"==typeof n&&n.replace?o.replace(n):o.push(n)):t(n)}))}catch(e){s(e)}};Ie(m,h,(function(){Ie(function(e){return Re(e,"beforeRouteEnter",(function(e,n,t,o){return function(e,n,t){return function(o,i,r){return e(o,i,(function(e){"function"==typeof e&&(n.enteredCbs[t]||(n.enteredCbs[t]=[]),n.enteredCbs[t].push(e)),r(e)}))}}(e,t,o)}))}(f).concat(o.router.resolveHooks),h,(function(){if(o.pending!==e)return s(we(i,e));o.pending=null,n(e),o.router.app&&o.router.app.$nextTick((function(){w(e)}))}))}))},Oe.prototype.updateRoute=function(e){this.current=e,this.cb&&this.cb(e)},Oe.prototype.setupListeners=function(){},Oe.prototype.teardown=function(){this.listeners.forEach((function(e){e()})),this.listeners=[],this.current=g,this.pending=null};var Be=function(e){function n(n,t){e.call(this,n,t),this._startLocation=Le(this.base)}return e&&(n.__proto__=e),n.prototype=Object.create(e&&e.prototype),n.prototype.constructor=n,n.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var n=this.router,t=n.options.scrollBehavior,o=ge&&t;o&&this.listeners.push(ae());var i=function(){var t=e.current,i=Le(e.base);e.current===g&&i===e._startLocation||e.transitionTo(i,(function(e){o&&se(n,e,t,!0)}))};window.addEventListener("popstate",i),this.listeners.push((function(){window.removeEventListener("popstate",i)}))}},n.prototype.go=function(e){window.history.go(e)},n.prototype.push=function(e,n,t){var o=this,i=this.current;this.transitionTo(e,(function(e){be(S(o.base+e.fullPath)),se(o.router,e,i,!1),n&&n(e)}),t)},n.prototype.replace=function(e,n,t){var o=this,i=this.current;this.transitionTo(e,(function(e){ye(S(o.base+e.fullPath)),se(o.router,e,i,!1),n&&n(e)}),t)},n.prototype.ensureURL=function(e){if(Le(this.base)!==this.current.fullPath){var n=S(this.base+this.current.fullPath);e?be(n):ye(n)}},n.prototype.getCurrentLocation=function(){return Le(this.base)},n}(Oe);function Le(e){var n=window.location.pathname,t=n.toLowerCase(),o=e.toLowerCase();return!e||t!==o&&0!==t.indexOf(S(o+"/"))||(n=n.slice(e.length)),(n||"/")+window.location.search+window.location.hash}var Ae=function(e){function n(n,t,o){e.call(this,n,t),o&&function(e){var n=Le(e);if(!/^\/#/.test(n))return window.location.replace(S(e+"/#"+n)),!0}(this.base)||Fe()}return e&&(n.__proto__=e),n.prototype=Object.create(e&&e.prototype),n.prototype.constructor=n,n.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var n=this.router.options.scrollBehavior,t=ge&&n;t&&this.listeners.push(ae());var o=function(){var n=e.current;Fe()&&e.transitionTo(Me(),(function(o){t&&se(e.router,o,n,!0),ge||$e(o.fullPath)}))},i=ge?"popstate":"hashchange";window.addEventListener(i,o),this.listeners.push((function(){window.removeEventListener(i,o)}))}},n.prototype.push=function(e,n,t){var o=this,i=this.current;this.transitionTo(e,(function(e){Ue(e.fullPath),se(o.router,e,i,!1),n&&n(e)}),t)},n.prototype.replace=function(e,n,t){var o=this,i=this.current;this.transitionTo(e,(function(e){$e(e.fullPath),se(o.router,e,i,!1),n&&n(e)}),t)},n.prototype.go=function(e){window.history.go(e)},n.prototype.ensureURL=function(e){var n=this.current.fullPath;Me()!==n&&(e?Ue(n):$e(n))},n.prototype.getCurrentLocation=function(){return Me()},n}(Oe);function Fe(){var e=Me();return"/"===e.charAt(0)||($e("/"+e),!1)}function Me(){var e=window.location.href,n=e.indexOf("#");return n<0?"":e=e.slice(n+1)}function Ne(e){var n=window.location.href,t=n.indexOf("#");return(t>=0?n.slice(0,t):n)+"#"+e}function Ue(e){ge?be(Ne(e)):window.location.hash=e}function $e(e){ge?ye(Ne(e)):window.location.replace(Ne(e))}var He=function(e){function n(n,t){e.call(this,n,t),this.stack=[],this.index=-1}return e&&(n.__proto__=e),n.prototype=Object.create(e&&e.prototype),n.prototype.constructor=n,n.prototype.push=function(e,n,t){var o=this;this.transitionTo(e,(function(e){o.stack=o.stack.slice(0,o.index+1).concat(e),o.index++,n&&n(e)}),t)},n.prototype.replace=function(e,n,t){var o=this;this.transitionTo(e,(function(e){o.stack=o.stack.slice(0,o.index).concat(e),n&&n(e)}),t)},n.prototype.go=function(e){var n=this,t=this.index+e;if(!(t<0||t>=this.stack.length)){var o=this.stack[t];this.confirmTransition(o,(function(){var e=n.current;n.index=t,n.updateRoute(o),n.router.afterHooks.forEach((function(n){n&&n(o,e)}))}),(function(e){Se(e,ve.duplicated)&&(n.index=t)}))}},n.prototype.getCurrentLocation=function(){var e=this.stack[this.stack.length-1];return e?e.fullPath:"/"},n.prototype.ensureURL=function(){},n}(Oe),qe=function(e){void 0===e&&(e={}),this.app=null,this.apps=[],this.options=e,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=Z(e.routes||[],this);var n=e.mode||"hash";switch(this.fallback="history"===n&&!ge&&!1!==e.fallback,this.fallback&&(n="hash"),Y||(n="abstract"),this.mode=n,n){case"history":this.history=new Be(this,e.base);break;case"hash":this.history=new Ae(this,e.base,this.fallback);break;case"abstract":this.history=new He(this,e.base);break;default:0}},We={currentRoute:{configurable:!0}};qe.prototype.match=function(e,n,t){return this.matcher.match(e,n,t)},We.currentRoute.get=function(){return this.history&&this.history.current},qe.prototype.init=function(e){var n=this;if(this.apps.push(e),e.$once("hook:destroyed",(function(){var t=n.apps.indexOf(e);t>-1&&n.apps.splice(t,1),n.app===e&&(n.app=n.apps[0]||null),n.app||n.history.teardown()})),!this.app){this.app=e;var t=this.history;if(t instanceof Be||t instanceof Ae){var o=function(e){t.setupListeners(),function(e){var o=t.current,i=n.options.scrollBehavior;ge&&i&&"fullPath"in e&&se(n,e,o,!1)}(e)};t.transitionTo(t.getCurrentLocation(),o,o)}t.listen((function(e){n.apps.forEach((function(n){n._route=e}))}))}},qe.prototype.beforeEach=function(e){return Ge(this.beforeHooks,e)},qe.prototype.beforeResolve=function(e){return Ge(this.resolveHooks,e)},qe.prototype.afterEach=function(e){return Ge(this.afterHooks,e)},qe.prototype.onReady=function(e,n){this.history.onReady(e,n)},qe.prototype.onError=function(e){this.history.onError(e)},qe.prototype.push=function(e,n,t){var o=this;if(!n&&!t&&"undefined"!=typeof Promise)return new Promise((function(n,t){o.history.push(e,n,t)}));this.history.push(e,n,t)},qe.prototype.replace=function(e,n,t){var o=this;if(!n&&!t&&"undefined"!=typeof Promise)return new Promise((function(n,t){o.history.replace(e,n,t)}));this.history.replace(e,n,t)},qe.prototype.go=function(e){this.history.go(e)},qe.prototype.back=function(){this.go(-1)},qe.prototype.forward=function(){this.go(1)},qe.prototype.getMatchedComponents=function(e){var n=e?e.matched?e:this.resolve(e).route:this.currentRoute;return n?[].concat.apply([],n.matched.map((function(e){return Object.keys(e.components).map((function(n){return e.components[n]}))}))):[]},qe.prototype.resolve=function(e,n,t){var o=q(e,n=n||this.history.current,t,this),i=this.match(o,n),r=i.redirectedFrom||i.fullPath;return{location:o,route:i,href:function(e,n,t){var o="hash"===t?"#"+n:n;return e?S(e+"/"+o):o}(this.history.base,r,this.mode),normalizedTo:o,resolved:i}},qe.prototype.getRoutes=function(){return this.matcher.getRoutes()},qe.prototype.addRoute=function(e,n){this.matcher.addRoute(e,n),this.history.current!==g&&this.history.transitionTo(this.history.getCurrentLocation())},qe.prototype.addRoutes=function(e){this.matcher.addRoutes(e),this.history.current!==g&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(qe.prototype,We);var Ve=qe;function Ge(e,n){return e.push(n),function(){var t=e.indexOf(n);t>-1&&e.splice(t,1)}}qe.install=function e(n){if(!e.installed||W!==n){e.installed=!0,W=n;var t=function(e){return void 0!==e},o=function(e,n){var o=e.$options._parentVnode;t(o)&&t(o=o.data)&&t(o=o.registerRouteInstance)&&o(e,n)};n.mixin({beforeCreate:function(){t(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),n.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,o(this,this)},destroyed:function(){o(this)}}),Object.defineProperty(n.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(n.prototype,"$route",{get:function(){return this._routerRoot._route}}),n.component("RouterView",k),n.component("RouterLink",G);var i=n.config.optionMergeStrategies;i.beforeRouteEnter=i.beforeRouteLeave=i.beforeRouteUpdate=i.created}},qe.version="3.6.5",qe.isNavigationFailure=Se,qe.NavigationFailureType=ve,qe.START_LOCATION=g,Y&&window.Vue&&window.Vue.use(qe);var Je={NotFound:()=>t.e(13).then(t.bind(null,230)),Layout:()=>Promise.all([t.e(0),t.e(2),t.e(50)]).then(t.bind(null,228))},Ye={"v-02063ddf":()=>t.e(14).then(t.bind(null,235)),"v-9f22f8a8":()=>t.e(15).then(t.bind(null,236)),"v-16179d28":()=>t.e(16).then(t.bind(null,237)),"v-77f8ec80":()=>t.e(17).then(t.bind(null,238)),"v-5d4e540c":()=>t.e(18).then(t.bind(null,239)),"v-367cff22":()=>t.e(19).then(t.bind(null,240)),"v-18368a94":()=>t.e(20).then(t.bind(null,241)),"v-a85495a8":()=>t.e(21).then(t.bind(null,242)),"v-0bcd9810":()=>t.e(22).then(t.bind(null,243)),"v-585d4b02":()=>t.e(23).then(t.bind(null,244)),"v-f69b32e8":()=>t.e(24).then(t.bind(null,245)),"v-3c8c2c3a":()=>t.e(25).then(t.bind(null,246)),"v-65ca61ec":()=>t.e(26).then(t.bind(null,247)),"v-7a63004c":()=>t.e(27).then(t.bind(null,248)),"v-01157b6c":()=>t.e(28).then(t.bind(null,249)),"v-408b0e68":()=>t.e(29).then(t.bind(null,250)),"v-4fede3cc":()=>t.e(30).then(t.bind(null,251)),"v-fe8b9b74":()=>t.e(31).then(t.bind(null,252)),"v-67d941bf":()=>t.e(32).then(t.bind(null,253)),"v-2cc513e8":()=>t.e(33).then(t.bind(null,254)),"v-25796e4c":()=>t.e(34).then(t.bind(null,255)),"v-4f7a5876":()=>t.e(35).then(t.bind(null,256)),"v-86a08da8":()=>t.e(36).then(t.bind(null,257)),"v-4311ae18":()=>t.e(37).then(t.bind(null,258)),"v-7f5b896c":()=>t.e(38).then(t.bind(null,259)),"v-5908a168":()=>t.e(39).then(t.bind(null,260)),"v-2564926e":()=>t.e(40).then(t.bind(null,261)),"v-3857cc90":()=>t.e(41).then(t.bind(null,262)),"v-843d4e28":()=>t.e(42).then(t.bind(null,263)),"v-1d4ee519":()=>t.e(43).then(t.bind(null,264)),"v-d360c268":()=>t.e(44).then(t.bind(null,265)),"v-68848fec":()=>t.e(45).then(t.bind(null,266)),"v-6076e08c":()=>t.e(46).then(t.bind(null,267)),"v-3f1bddec":()=>t.e(47).then(t.bind(null,268)),"v-3e0f736c":()=>t.e(48).then(t.bind(null,269)),"v-0c3100fc":()=>t.e(49).then(t.bind(null,270))};function Ke(e){const n=Object.create(null);return function(t){return n[t]||(n[t]=e(t))}}const Xe=/-(\w)/g,Ze=Ke(e=>e.replace(Xe,(e,n)=>n?n.toUpperCase():"")),Qe=/\B([A-Z])/g,en=Ke(e=>e.replace(Qe,"-$1").toLowerCase()),nn=Ke(e=>e.charAt(0).toUpperCase()+e.slice(1));function tn(e,n){if(!n)return;if(e(n))return e(n);return n.includes("-")?e(nn(Ze(n))):e(nn(n))||e(en(n))}const on=Object.assign({},Je,Ye),rn=e=>on[e],an=e=>Ye[e],sn=e=>Je[e],ln=e=>o.a.component(e);function cn(e){return tn(an,e)}function un(e){return tn(sn,e)}function dn(e){return tn(rn,e)}function pn(e){return tn(ln,e)}function fn(...e){return Promise.all(e.filter(e=>e).map(async e=>{if(!pn(e)&&dn(e)){const n=await dn(e)();o.a.component(e,n.default)}}))}function mn(e,n){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[e]=n)}var hn=t(49),gn=t.n(hn),bn=t(50),yn=t.n(bn),vn={created(){if(this.siteMeta=this.$site.headTags.filter(([e])=>"meta"===e).map(([e,n])=>n),this.$ssrContext){const n=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(e=n)?e.map(e=>{let n="<meta";return Object.keys(e).forEach(t=>{n+=` ${t}="${yn()(e[t])}"`}),n+">"}).join("\n    "):"",this.$ssrContext.canonicalLink=wn(this.$canonicalUrl)}var e},mounted(){this.currentMetaTags=[...document.querySelectorAll("meta")],this.updateMeta(),this.updateCanonicalLink()},methods:{updateMeta(){document.title=this.$title,document.documentElement.lang=this.$lang;const e=this.getMergedMetaTags();this.currentMetaTags=kn(e,this.currentMetaTags)},getMergedMetaTags(){const e=this.$page.frontmatter.meta||[];return gn()([{name:"description",content:this.$description}],e,this.siteMeta,Tn)},updateCanonicalLink(){xn(),this.$canonicalUrl&&document.head.insertAdjacentHTML("beforeend",wn(this.$canonicalUrl))}},watch:{$page(){this.updateMeta(),this.updateCanonicalLink()}},beforeDestroy(){kn(null,this.currentMetaTags),xn()}};function xn(){const e=document.querySelector("link[rel='canonical']");e&&e.remove()}function wn(e=""){return e?`<link href="${e}" rel="canonical" />`:""}function kn(e,n){if(n&&[...n].filter(e=>e.parentNode===document.head).forEach(e=>document.head.removeChild(e)),e)return e.map(e=>{const n=document.createElement("meta");return Object.keys(e).forEach(t=>{n.setAttribute(t,e[t])}),document.head.appendChild(n),n})}function Tn(e){for(const n of["name","property","itemprop"])if(e.hasOwnProperty(n))return e[n]+n;return JSON.stringify(e)}var jn=t(13),Sn=t.n(jn),In={mounted(){window.addEventListener("scroll",this.onScroll)},methods:{onScroll:Sn()((function(){this.setActiveHash()}),300),setActiveHash(){const e=[].slice.call(document.querySelectorAll(".sidebar-link")),n=[].slice.call(document.querySelectorAll(".header-anchor")).filter(n=>e.some(e=>e.hash===n.hash)),t=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),o=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),i=window.innerHeight+t;for(let e=0;e<n.length;e++){const r=n[e],a=n[e+1],s=0===e&&0===t||t>=r.parentElement.offsetTop+10&&(!a||t<a.parentElement.offsetTop-10),l=decodeURIComponent(this.$route.hash);if(s&&l!==decodeURIComponent(r.hash)){const t=r;if(i===o)for(let t=e+1;t<n.length;t++)if(l===decodeURIComponent(n[t].hash))return;return this.$vuepress.$set("disableScrollBehavior",!0),void this.$router.replace(decodeURIComponent(t.hash),()=>{this.$nextTick(()=>{this.$vuepress.$set("disableScrollBehavior",!1)})})}}}},beforeDestroy(){window.removeEventListener("scroll",this.onScroll)}},zn=(t(147),{data:()=>({zoom:null}),mounted(){this.updateCopy()},updated(){this.updateCopy()},methods:{updateCopy(){setTimeout(()=>{document.querySelectorAll('div[class*="language-"]').forEach(this.generateCopyButton)},1e3)},generateCopyButton:function(e){if(e.classList.contains("codecopy-enabled"))return;const n=document.createElement("span");n.className="code-copy",n.title="Click to Copy to Clipboard",n.addEventListener("click",()=>{this.copyToClipboard(e.innerText),n.classList.add("copied");const t=setTimeout(()=>{n.classList.remove("copied"),clearTimeout(t)},2e3)}),e.appendChild(n),e.classList.add("codecopy-enabled")},copyToClipboard:function(e){const n=document.createElement("textarea");n.value=e,n.setAttribute("readonly",""),n.style.position="absolute",n.style.left="-9999px",document.body.appendChild(n);const t=document.getSelection().rangeCount>0&&document.getSelection().getRangeAt(0);n.select(),document.execCommand("copy"),document.body.removeChild(n),t&&(document.getSelection().removeAllRanges(),document.getSelection().addRange(t))}}}),_n=t(14),Pn=t.n(_n),En={mounted(){Pn.a.configure({showSpinner:!1}),this.$router.beforeEach((e,n,t)=>{e.path===n.path||o.a.component(e.name)||Pn.a.start(),t()}),this.$router.afterEach(()=>{Pn.a.done(),this.isSidebarOpen=!1})}},Cn=(t(148),Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e}),On=function(e){return"IMG"===e.tagName},Rn=function(e){return e&&1===e.nodeType},Dn=function(e){return".svg"===(e.currentSrc||e.src).substr(-4).toLowerCase()},Bn=function(e){try{return Array.isArray(e)?e.filter(On):function(e){return NodeList.prototype.isPrototypeOf(e)}(e)?[].slice.call(e).filter(On):Rn(e)?[e].filter(On):"string"==typeof e?[].slice.call(document.querySelectorAll(e)).filter(On):[]}catch(e){throw new TypeError("The provided selector is invalid.\nExpects a CSS selector, a Node element, a NodeList or an array.\nSee: https://github.com/francoischalifour/medium-zoom")}},Ln=function(e){var n=document.createElement("div");return n.classList.add("medium-zoom-overlay"),n.style.background=e,n},An=function(e){var n=e.getBoundingClientRect(),t=n.top,o=n.left,i=n.width,r=n.height,a=e.cloneNode(),s=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0,l=window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0;return a.removeAttribute("id"),a.style.position="absolute",a.style.top=t+s+"px",a.style.left=o+l+"px",a.style.width=i+"px",a.style.height=r+"px",a.style.transform="",a},Fn=function(e,n){var t=Cn({bubbles:!1,cancelable:!1,detail:void 0},n);if("function"==typeof window.CustomEvent)return new CustomEvent(e,t);var o=document.createEvent("CustomEvent");return o.initCustomEvent(e,t.bubbles,t.cancelable,t.detail),o};!function(e,n){void 0===n&&(n={});var t=n.insertAt;if(e&&"undefined"!=typeof document){var o=document.head||document.getElementsByTagName("head")[0],i=document.createElement("style");i.type="text/css","top"===t&&o.firstChild?o.insertBefore(i,o.firstChild):o.appendChild(i),i.styleSheet?i.styleSheet.cssText=e:i.appendChild(document.createTextNode(e))}}(".medium-zoom-overlay{position:fixed;top:0;right:0;bottom:0;left:0;opacity:0;transition:opacity .3s;will-change:opacity}.medium-zoom--opened .medium-zoom-overlay{cursor:pointer;cursor:zoom-out;opacity:1}.medium-zoom-image{cursor:pointer;cursor:zoom-in;transition:transform .3s cubic-bezier(.2,0,.2,1)!important}.medium-zoom-image--hidden{visibility:hidden}.medium-zoom-image--opened{position:relative;cursor:pointer;cursor:zoom-out;will-change:transform}");var Mn=function e(n){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},o=window.Promise||function(e){function n(){}e(n,n)},i=function(e){var n=e.target;n!==S?-1!==v.indexOf(n)&&h({target:n}):m()},r=function(){if(!w&&j.original){var e=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;Math.abs(k-e)>T.scrollOffset&&setTimeout(m,150)}},a=function(e){var n=e.key||e.keyCode;"Escape"!==n&&"Esc"!==n&&27!==n||m()},s=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=e;if(e.background&&(S.style.background=e.background),e.container&&e.container instanceof Object&&(n.container=Cn({},T.container,e.container)),e.template){var t=Rn(e.template)?e.template:document.querySelector(e.template);n.template=t}return T=Cn({},T,n),v.forEach((function(e){e.dispatchEvent(Fn("medium-zoom:update",{detail:{zoom:I}}))})),I},l=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return e(Cn({},T,n))},c=function(){for(var e=arguments.length,n=Array(e),t=0;t<e;t++)n[t]=arguments[t];var o=n.reduce((function(e,n){return[].concat(e,Bn(n))}),[]);return o.filter((function(e){return-1===v.indexOf(e)})).forEach((function(e){v.push(e),e.classList.add("medium-zoom-image")})),x.forEach((function(e){var n=e.type,t=e.listener,i=e.options;o.forEach((function(e){e.addEventListener(n,t,i)}))})),I},u=function(){for(var e=arguments.length,n=Array(e),t=0;t<e;t++)n[t]=arguments[t];j.zoomed&&m();var o=n.length>0?n.reduce((function(e,n){return[].concat(e,Bn(n))}),[]):v;return o.forEach((function(e){e.classList.remove("medium-zoom-image"),e.dispatchEvent(Fn("medium-zoom:detach",{detail:{zoom:I}}))})),v=v.filter((function(e){return-1===o.indexOf(e)})),I},d=function(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return v.forEach((function(o){o.addEventListener("medium-zoom:"+e,n,t)})),x.push({type:"medium-zoom:"+e,listener:n,options:t}),I},p=function(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return v.forEach((function(o){o.removeEventListener("medium-zoom:"+e,n,t)})),x=x.filter((function(t){return!(t.type==="medium-zoom:"+e&&t.listener.toString()===n.toString())})),I},f=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=e.target,t=function(){var e={width:document.documentElement.clientWidth,height:document.documentElement.clientHeight,left:0,top:0,right:0,bottom:0},n=void 0,t=void 0;if(T.container)if(T.container instanceof Object)n=(e=Cn({},e,T.container)).width-e.left-e.right-2*T.margin,t=e.height-e.top-e.bottom-2*T.margin;else{var o=(Rn(T.container)?T.container:document.querySelector(T.container)).getBoundingClientRect(),i=o.width,r=o.height,a=o.left,s=o.top;e=Cn({},e,{width:i,height:r,left:a,top:s})}n=n||e.width-2*T.margin,t=t||e.height-2*T.margin;var l=j.zoomedHd||j.original,c=Dn(l)?n:l.naturalWidth||n,u=Dn(l)?t:l.naturalHeight||t,d=l.getBoundingClientRect(),p=d.top,f=d.left,m=d.width,h=d.height,g=Math.min(c,n)/m,b=Math.min(u,t)/h,y=Math.min(g,b),v="scale("+y+") translate3d("+((n-m)/2-f+T.margin+e.left)/y+"px, "+((t-h)/2-p+T.margin+e.top)/y+"px, 0)";j.zoomed.style.transform=v,j.zoomedHd&&(j.zoomedHd.style.transform=v)};return new o((function(e){if(n&&-1===v.indexOf(n))e(I);else{if(j.zoomed)e(I);else{if(n)j.original=n;else{if(!(v.length>0))return void e(I);var o=v;j.original=o[0]}if(j.original.dispatchEvent(Fn("medium-zoom:open",{detail:{zoom:I}})),k=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0,w=!0,j.zoomed=An(j.original),document.body.appendChild(S),T.template){var i=Rn(T.template)?T.template:document.querySelector(T.template);j.template=document.createElement("div"),j.template.appendChild(i.content.cloneNode(!0)),document.body.appendChild(j.template)}if(document.body.appendChild(j.zoomed),window.requestAnimationFrame((function(){document.body.classList.add("medium-zoom--opened")})),j.original.classList.add("medium-zoom-image--hidden"),j.zoomed.classList.add("medium-zoom-image--opened"),j.zoomed.addEventListener("click",m),j.zoomed.addEventListener("transitionend",(function n(){w=!1,j.zoomed.removeEventListener("transitionend",n),j.original.dispatchEvent(Fn("medium-zoom:opened",{detail:{zoom:I}})),e(I)})),j.original.getAttribute("data-zoom-src")){j.zoomedHd=j.zoomed.cloneNode(),j.zoomedHd.removeAttribute("srcset"),j.zoomedHd.removeAttribute("sizes"),j.zoomedHd.src=j.zoomed.getAttribute("data-zoom-src"),j.zoomedHd.onerror=function(){clearInterval(r),console.warn("Unable to reach the zoom image target "+j.zoomedHd.src),j.zoomedHd=null,t()};var r=setInterval((function(){j.zoomedHd.complete&&(clearInterval(r),j.zoomedHd.classList.add("medium-zoom-image--opened"),j.zoomedHd.addEventListener("click",m),document.body.appendChild(j.zoomedHd),t())}),10)}else if(j.original.hasAttribute("srcset")){j.zoomedHd=j.zoomed.cloneNode(),j.zoomedHd.removeAttribute("sizes"),j.zoomedHd.removeAttribute("loading");var a=j.zoomedHd.addEventListener("load",(function(){j.zoomedHd.removeEventListener("load",a),j.zoomedHd.classList.add("medium-zoom-image--opened"),j.zoomedHd.addEventListener("click",m),document.body.appendChild(j.zoomedHd),t()}))}else t()}}}))},m=function(){return new o((function(e){if(!w&&j.original){w=!0,document.body.classList.remove("medium-zoom--opened"),j.zoomed.style.transform="",j.zoomedHd&&(j.zoomedHd.style.transform=""),j.template&&(j.template.style.transition="opacity 150ms",j.template.style.opacity=0),j.original.dispatchEvent(Fn("medium-zoom:close",{detail:{zoom:I}})),j.zoomed.addEventListener("transitionend",(function n(){j.original.classList.remove("medium-zoom-image--hidden"),document.body.removeChild(j.zoomed),j.zoomedHd&&document.body.removeChild(j.zoomedHd),document.body.removeChild(S),j.zoomed.classList.remove("medium-zoom-image--opened"),j.template&&document.body.removeChild(j.template),w=!1,j.zoomed.removeEventListener("transitionend",n),j.original.dispatchEvent(Fn("medium-zoom:closed",{detail:{zoom:I}})),j.original=null,j.zoomed=null,j.zoomedHd=null,j.template=null,e(I)}))}else e(I)}))},h=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=e.target;return j.original?m():f({target:n})},g=function(){return T},b=function(){return v},y=function(){return j.original},v=[],x=[],w=!1,k=0,T=t,j={original:null,zoomed:null,zoomedHd:null,template:null};"[object Object]"===Object.prototype.toString.call(n)?T=n:(n||"string"==typeof n)&&c(n),T=Cn({margin:0,background:"#fff",scrollOffset:40,container:null,template:null},T);var S=Ln(T.background);document.addEventListener("click",i),document.addEventListener("keyup",a),document.addEventListener("scroll",r),window.addEventListener("resize",m);var I={open:f,close:m,toggle:h,update:s,clone:l,attach:c,detach:u,on:d,off:p,getOptions:g,getImages:b,getZoomedImage:y};return I},Nn=[vn,In,zn,En,{data:()=>({zoom:null}),mounted(){this.updateZoom()},updated(){this.updateZoom()},methods:{updateZoom(){setTimeout(()=>{this.zoom&&this.zoom.detach(),this.zoom=Mn(".theme-default-content :not(a) > img",void 0)},1e3)}}}],Un={name:"GlobalLayout",computed:{layout(){const e=this.getLayout();return mn("layout",e),o.a.component(e)}},methods:{getLayout(){if(this.$page.path){const e=this.$page.frontmatter.layout;return e&&(this.$vuepress.getLayoutAsyncComponent(e)||this.$vuepress.getVueComponent(e))?e:"Layout"}return"NotFound"}}},$n=t(4),Hn=Object($n.a)(Un,(function(){return(0,this._self._c)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;!function(e,n,t){switch(n){case"components":e[n]||(e[n]={}),Object.assign(e[n],t);break;case"mixins":e[n]||(e[n]=[]),e[n].push(...t);break;default:throw new Error("Unknown option name.")}}(Hn,"mixins",Nn);const qn=[{name:"v-02063ddf",path:"/en/",component:Hn,beforeEnter:(e,n,t)=>{fn("Layout","v-02063ddf").then(t)}},{path:"/en/index.html",redirect:"/en/"},{name:"v-9f22f8a8",path:"/en/api/builder-core.html",component:Hn,beforeEnter:(e,n,t)=>{fn("Layout","v-9f22f8a8").then(t)}},{name:"v-16179d28",path:"/en/api/builder-instance.html",component:Hn,beforeEnter:(e,n,t)=>{fn("Layout","v-16179d28").then(t)}},{name:"v-77f8ec80",path:"/en/api/builder-types.html",component:Hn,beforeEnter:(e,n,t)=>{fn("Layout","v-77f8ec80").then(t)}},{name:"v-5d4e540c",path:"/en/api/config-dev.html",component:Hn,beforeEnter:(e,n,t)=>{fn("Layout","v-5d4e540c").then(t)}},{name:"v-367cff22",path:"/en/api/config-html.html",component:Hn,beforeEnter:(e,n,t)=>{fn("Layout","v-367cff22").then(t)}},{name:"v-18368a94",path:"/en/api/config-output.html",component:Hn,beforeEnter:(e,n,t)=>{fn("Layout","v-18368a94").then(t)}},{name:"v-a85495a8",path:"/en/api/config-performance.html",component:Hn,beforeEnter:(e,n,t)=>{fn("Layout","v-a85495a8").then(t)}},{name:"v-0bcd9810",path:"/en/api/config-security.html",component:Hn,beforeEnter:(e,n,t)=>{fn("Layout","v-0bcd9810").then(t)}},{name:"v-585d4b02",path:"/en/api/config-source.html",component:Hn,beforeEnter:(e,n,t)=>{fn("Layout","v-585d4b02").then(t)}},{name:"v-f69b32e8",path:"/en/api/config-tools.html",component:Hn,beforeEnter:(e,n,t)=>{fn("Layout","v-f69b32e8").then(t)}},{name:"v-3c8c2c3a",path:"/en/api/",component:Hn,beforeEnter:(e,n,t)=>{fn("Layout","v-3c8c2c3a").then(t)}},{path:"/en/api/index.html",redirect:"/en/api/"},{name:"v-65ca61ec",path:"/en/guide/faq/exceptions.html",component:Hn,beforeEnter:(e,n,t)=>{fn("Layout","v-65ca61ec").then(t)}},{name:"v-7a63004c",path:"/en/guide/faq/features.html",component:Hn,beforeEnter:(e,n,t)=>{fn("Layout","v-7a63004c").then(t)}},{name:"v-01157b6c",path:"/en/guide/features.html",component:Hn,beforeEnter:(e,n,t)=>{fn("Layout","v-01157b6c").then(t)}},{name:"v-408b0e68",path:"/en/guide/glossary.html",component:Hn,beforeEnter:(e,n,t)=>{fn("Layout","v-408b0e68").then(t)}},{name:"v-4fede3cc",path:"/en/guide/introduction.html",component:Hn,beforeEnter:(e,n,t)=>{fn("Layout","v-4fede3cc").then(t)}},{name:"v-fe8b9b74",path:"/en/guide/quick-start.html",component:Hn,beforeEnter:(e,n,t)=>{fn("Layout","v-fe8b9b74").then(t)}},{name:"v-67d941bf",path:"/zh/",component:Hn,beforeEnter:(e,n,t)=>{fn("Layout","v-67d941bf").then(t)}},{path:"/zh/index.html",redirect:"/zh/"},{name:"v-2cc513e8",path:"/zh/api/builder-core.html",component:Hn,beforeEnter:(e,n,t)=>{fn("Layout","v-2cc513e8").then(t)}},{name:"v-25796e4c",path:"/zh/api/builder-instance.html",component:Hn,beforeEnter:(e,n,t)=>{fn("Layout","v-25796e4c").then(t)}},{name:"v-4f7a5876",path:"/zh/api/builder-types.html",component:Hn,beforeEnter:(e,n,t)=>{fn("Layout","v-4f7a5876").then(t)}},{name:"v-86a08da8",path:"/zh/api/config-dev.html",component:Hn,beforeEnter:(e,n,t)=>{fn("Layout","v-86a08da8").then(t)}},{name:"v-4311ae18",path:"/zh/api/config-html.html",component:Hn,beforeEnter:(e,n,t)=>{fn("Layout","v-4311ae18").then(t)}},{name:"v-7f5b896c",path:"/zh/api/config-output.html",component:Hn,beforeEnter:(e,n,t)=>{fn("Layout","v-7f5b896c").then(t)}},{name:"v-5908a168",path:"/zh/api/config-performance.html",component:Hn,beforeEnter:(e,n,t)=>{fn("Layout","v-5908a168").then(t)}},{name:"v-2564926e",path:"/zh/api/config-security.html",component:Hn,beforeEnter:(e,n,t)=>{fn("Layout","v-2564926e").then(t)}},{name:"v-3857cc90",path:"/zh/api/config-source.html",component:Hn,beforeEnter:(e,n,t)=>{fn("Layout","v-3857cc90").then(t)}},{name:"v-843d4e28",path:"/zh/api/config-tools.html",component:Hn,beforeEnter:(e,n,t)=>{fn("Layout","v-843d4e28").then(t)}},{name:"v-1d4ee519",path:"/zh/api/",component:Hn,beforeEnter:(e,n,t)=>{fn("Layout","v-1d4ee519").then(t)}},{path:"/zh/api/index.html",redirect:"/zh/api/"},{name:"v-d360c268",path:"/zh/guide/faq/exceptions.html",component:Hn,beforeEnter:(e,n,t)=>{fn("Layout","v-d360c268").then(t)}},{name:"v-68848fec",path:"/zh/guide/faq/features.html",component:Hn,beforeEnter:(e,n,t)=>{fn("Layout","v-68848fec").then(t)}},{name:"v-6076e08c",path:"/zh/guide/features.html",component:Hn,beforeEnter:(e,n,t)=>{fn("Layout","v-6076e08c").then(t)}},{name:"v-3f1bddec",path:"/zh/guide/glossary.html",component:Hn,beforeEnter:(e,n,t)=>{fn("Layout","v-3f1bddec").then(t)}},{name:"v-3e0f736c",path:"/zh/guide/introduction.html",component:Hn,beforeEnter:(e,n,t)=>{fn("Layout","v-3e0f736c").then(t)}},{name:"v-0c3100fc",path:"/zh/guide/quick-start.html",component:Hn,beforeEnter:(e,n,t)=>{fn("Layout","v-0c3100fc").then(t)}},{path:"*",component:Hn}],Wn={title:"",description:"",base:"/builder/",headTags:[["link",{rel:"icon",href:"https://modernjs.dev/img/favicon.ico"}],["meta",{name:"theme-color",content:"#5c6ac4"}],["meta",{name:"apple-mobile-web-app-capable",content:"yes"}],["meta",{name:"viewport",content:"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"}],["meta",{name:"apple-mobile-web-app-status-bar-style",content:"black"}]],pages:[{title:"Home",frontmatter:{home:!0,actionText:"Introduction",actionLink:"/en/guide/introduction.html",subActionText:"Quick Start",subActionLink:"/en/guide/quick-start.html",features:[{title:"Out of the box",details:"Based on the best practices of ByteDance, provide useful features for web development by default."},{title:"Deep optimization",details:"Built-in split chunk strategy, automatically optimize static resources, ensure performance of production app."},{title:"Extensible",details:"Provides rich configuration items and a flexible plugin system to support in-depth customization of all features."}]},regularPath:"/en/",relativePath:"en/README.md",key:"v-02063ddf",path:"/en/",lastUpdated:"10/13/2022, 3:49:10 AM",lastUpdatedTimestamp:166563295e4,headersStr:null,content:"The Modern\n\nWeb Build Engine\n\nA Universal Build Engine for Modern Web Development\n\nCopyright © 2022 ByteDance.",normalizedContent:"the modern\n\nweb build engine\n\na universal build engine for modern web development\n\ncopyright © 2022 bytedance.",charsets:{}},{title:"Builder Core",frontmatter:{extractApiHeaders:[2]},regularPath:"/en/api/builder-core.html",relativePath:"en/api/builder-core.md",key:"v-9f22f8a8",path:"/en/api/builder-core.html",headers:[{level:2,title:"createBuilder",slug:"createbuilder",normalizedTitle:"createbuilder",charIndex:89},{level:3,title:"Webpack Provider",slug:"webpack-provider",normalizedTitle:"webpack provider",charIndex:348},{level:3,title:"Rspack Provider",slug:"rspack-provider",normalizedTitle:"rspack provider",charIndex:761},{level:3,title:"options",slug:"options",normalizedTitle:"options",charIndex:744},{level:4,title:"Target Type",slug:"target-type",normalizedTitle:"target type",charIndex:2028},{level:2,title:"mergeBuilderConfig",slug:"mergebuilderconfig",normalizedTitle:"mergebuilderconfig",charIndex:2463},{level:2,title:"webpack",slug:"webpack",normalizedTitle:"webpack",charIndex:211},{level:2,title:"HtmlWebpackPlugin",slug:"htmlwebpackplugin",normalizedTitle:"htmlwebpackplugin",charIndex:3361}],lastUpdated:"10/13/2022, 3:49:10 AM",lastUpdatedTimestamp:166563295e4,headersStr:"createBuilder Webpack Provider Rspack Provider options Target Type mergeBuilderConfig webpack HtmlWebpackPlugin",content:"# Builder Core\n\nThis section describes some of the core methods provided by Builder.\n\n\n# createBuilder\n\nCreate a Builder instance object.\n\nWhen using this method, it needs to be used with the @modern-js/builder-webpack-provider or @modern-js/builder-rspack-provider. Providers implements corresponding build feature based on specific bundlers.\n\n\n# Webpack Provider\n\nWhen builderWebpackProvider is passed, the Builder will use webpack as the bundler for building.\n\nimport { createBuilder } from '@modern-js/builder';\nimport { builderWebpackProvider } from '@modern-js/builder-webpack-provider';\n\nconst provider = builderWebpackProvider({\n  builderConfig: {\n    // some configs\n  },\n});\n\nconst builder = await createBuilder(provider, {\n  // some options\n});\n\n\n\n# Rspack Provider\n\nWhen builderRspackProvider is passed, the Builder will use rspack as the bundler for building.\n\nimport { createBuilder } from '@modern-js/builder';\nimport { builderRspackProvider } from '@modern-js/builder-rspack-provider';\n\nconst provider = builderRspackProvider({\n  builderConfig: {\n    // some configs\n  },\n});\n\nconst builder = await createBuilder(provider, {\n  // some options\n});\n\n\n> Tips: @modern-js/builder-rspack-provider has not been developed yet.\n\n\n# options\n\nThe second parameter of createBuilder is a options object, you can pass in the following options:\n\ntype BuilderEntry = Record<string, string | string[]>;\n\ntype BuilderTarget = 'web' | 'node' | 'modern-web';\n\ntype CreateBuilderOptions = {\n  cwd?: string;\n  entry?: BuilderEntry;\n  target?: BuilderTarget | BuilderTarget[];\n  framework?: string;\n  configPath?: string | null;\n};\n\n\nDescription:\n\n * cwd: The root path of the current build, the default value is process.cwd().\n * entry: Build entry object.\n * target: Build target type, the default value is ['web'].\n * framework: The name of the framework, a unique identifier, the default value is 'modern.js'.\n * configPath: The path to the framework config file (absolute path), this parameter affects the build cache update.\n\n# Target Type\n\ntarget can be set to the following values:\n\n * web: Build for browsers.\n * modern-web: Build for modern browsers.\n * node: Build for SSR scenarios.\n\nWhen target is an array containing multiple values, Builder will perform multiple builds at the same time.\n\nFor example, we can build a browser target and an node target at the same time:\n\nconst builder = await createBuilder(provider, {\n  target: ['web', 'node'],\n});\n\n\n\n# mergeBuilderConfig\n\nMerges multiple Builder config objects and returns a new merged object.\n\n * Type\n\nfunction mergeBuilderConfig(...configs: BuilderConfig[]): BuilderConfig;\n\n\n * Example\n\nimport { mergeBuilderConfig } from '@modern-js/builder';\n\nconst config1 = {\n  dev: {\n    https: false,\n  },\n};\nconst config2 = {\n  dev: {\n    https: true,\n  },\n};\n\nconst mergedConfig = mergeBuilderConfig(config1, config2);\n\nconsole.log(mergedConfig); // { dev: { https: true } }\n\n\n> This method does not modify the original config object.\n\n\n# webpack\n\nA webpack object for consuming webpack builtin plugins or type definitions.\n\n * Example\n\nimport webpack from '@modern-js/builder-webpack-provider/webpack';\n\nnew webpack.DefinePlugin();\n\n\n> In most scenarios, it is recommended to import webpack from Builder instead of manually installing a \"webpack\" dependency, which can avoid multi-instance problems.\n\n\n# HtmlWebpackPlugin\n\nHtmlWebpackPlugin object, usually used to implement custom plugins of HtmlWebpackPlugin.\n\n * Example\n\nimport HtmlWebpackPlugin from '@modern-js/builder-webpack-provider/html-webpack-plugin';\n\n\n> In most scenarios, it is recommended to import HtmlWebpackPlugin from builder instead of manually installing a \"html-webpack-plugin\" dependency, which can avoid multi-instance problems.",normalizedContent:"# builder core\n\nthis section describes some of the core methods provided by builder.\n\n\n# createbuilder\n\ncreate a builder instance object.\n\nwhen using this method, it needs to be used with the @modern-js/builder-webpack-provider or @modern-js/builder-rspack-provider. providers implements corresponding build feature based on specific bundlers.\n\n\n# webpack provider\n\nwhen builderwebpackprovider is passed, the builder will use webpack as the bundler for building.\n\nimport { createbuilder } from '@modern-js/builder';\nimport { builderwebpackprovider } from '@modern-js/builder-webpack-provider';\n\nconst provider = builderwebpackprovider({\n  builderconfig: {\n    // some configs\n  },\n});\n\nconst builder = await createbuilder(provider, {\n  // some options\n});\n\n\n\n# rspack provider\n\nwhen builderrspackprovider is passed, the builder will use rspack as the bundler for building.\n\nimport { createbuilder } from '@modern-js/builder';\nimport { builderrspackprovider } from '@modern-js/builder-rspack-provider';\n\nconst provider = builderrspackprovider({\n  builderconfig: {\n    // some configs\n  },\n});\n\nconst builder = await createbuilder(provider, {\n  // some options\n});\n\n\n> tips: @modern-js/builder-rspack-provider has not been developed yet.\n\n\n# options\n\nthe second parameter of createbuilder is a options object, you can pass in the following options:\n\ntype builderentry = record<string, string | string[]>;\n\ntype buildertarget = 'web' | 'node' | 'modern-web';\n\ntype createbuilderoptions = {\n  cwd?: string;\n  entry?: builderentry;\n  target?: buildertarget | buildertarget[];\n  framework?: string;\n  configpath?: string | null;\n};\n\n\ndescription:\n\n * cwd: the root path of the current build, the default value is process.cwd().\n * entry: build entry object.\n * target: build target type, the default value is ['web'].\n * framework: the name of the framework, a unique identifier, the default value is 'modern.js'.\n * configpath: the path to the framework config file (absolute path), this parameter affects the build cache update.\n\n# target type\n\ntarget can be set to the following values:\n\n * web: build for browsers.\n * modern-web: build for modern browsers.\n * node: build for ssr scenarios.\n\nwhen target is an array containing multiple values, builder will perform multiple builds at the same time.\n\nfor example, we can build a browser target and an node target at the same time:\n\nconst builder = await createbuilder(provider, {\n  target: ['web', 'node'],\n});\n\n\n\n# mergebuilderconfig\n\nmerges multiple builder config objects and returns a new merged object.\n\n * type\n\nfunction mergebuilderconfig(...configs: builderconfig[]): builderconfig;\n\n\n * example\n\nimport { mergebuilderconfig } from '@modern-js/builder';\n\nconst config1 = {\n  dev: {\n    https: false,\n  },\n};\nconst config2 = {\n  dev: {\n    https: true,\n  },\n};\n\nconst mergedconfig = mergebuilderconfig(config1, config2);\n\nconsole.log(mergedconfig); // { dev: { https: true } }\n\n\n> this method does not modify the original config object.\n\n\n# webpack\n\na webpack object for consuming webpack builtin plugins or type definitions.\n\n * example\n\nimport webpack from '@modern-js/builder-webpack-provider/webpack';\n\nnew webpack.defineplugin();\n\n\n> in most scenarios, it is recommended to import webpack from builder instead of manually installing a \"webpack\" dependency, which can avoid multi-instance problems.\n\n\n# htmlwebpackplugin\n\nhtmlwebpackplugin object, usually used to implement custom plugins of htmlwebpackplugin.\n\n * example\n\nimport htmlwebpackplugin from '@modern-js/builder-webpack-provider/html-webpack-plugin';\n\n\n> in most scenarios, it is recommended to import htmlwebpackplugin from builder instead of manually installing a \"html-webpack-plugin\" dependency, which can avoid multi-instance problems.",charsets:{cjk:!0}},{title:"Builder Instance",frontmatter:{extractApiHeaders:[2]},regularPath:"/en/api/builder-instance.html",relativePath:"en/api/builder-instance.md",key:"v-16179d28",path:"/en/api/builder-instance.html",headers:[{level:2,title:"builder.context",slug:"builder-context",normalizedTitle:"builder.context",charIndex:110},{level:3,title:"builder.context.entry",slug:"builder-context-entry",normalizedTitle:"builder.context.entry",charIndex:203},{level:3,title:"builder.context.rootPath",slug:"builder-context-rootpath",normalizedTitle:"builder.context.rootpath",charIndex:373},{level:3,title:"builder.context.srcPath",slug:"builder-context-srcpath",normalizedTitle:"builder.context.srcpath",charIndex:527},{level:3,title:"builder.context.distPath",slug:"builder-context-distpath",normalizedTitle:"builder.context.distpath",charIndex:630},{level:3,title:"builder.context.cachePath",slug:"builder-context-cachepath",normalizedTitle:"builder.context.cachepath",charIndex:805},{level:3,title:"builder.context.configPath",slug:"builder-context-configpath",normalizedTitle:"builder.context.configpath",charIndex:916},{level:3,title:"builder.context.tsconfigPath",slug:"builder-context-tsconfigpath",normalizedTitle:"builder.context.tsconfigpath",charIndex:1109},{level:3,title:"builder.context.framework",slug:"builder-context-framework",normalizedTitle:"builder.context.framework",charIndex:1313},{level:3,title:"builder.context.devServer",slug:"builder-context-devserver",normalizedTitle:"builder.context.devserver",charIndex:1474},{level:2,title:"builder.build",slug:"builder-build",normalizedTitle:"builder.build",charIndex:1657},{level:3,title:"Development environment build",slug:"development-environment-build",normalizedTitle:"development environment build",charIndex:1891},{level:3,title:"Monitor file changes",slug:"monitor-file-changes",normalizedTitle:"monitor file changes",charIndex:2067},{level:2,title:"builder.startDevServer",slug:"builder-startdevserver",normalizedTitle:"builder.startdevserver",charIndex:2222},{level:3,title:"Disable print URLs",slug:"disable-print-urls",normalizedTitle:"disable print urls",charIndex:3353},{level:3,title:"Strict Port",slug:"strict-port",normalizedTitle:"strict port",charIndex:3524},{level:3,title:"Custom Compiler",slug:"custom-compiler",normalizedTitle:"custom compiler",charIndex:3797},{level:2,title:"builder.createCompiler",slug:"builder-createcompiler",normalizedTitle:"builder.createcompiler",charIndex:3961},{level:2,title:"builder.addPlugins",slug:"builder-addplugins",normalizedTitle:"builder.addplugins",charIndex:4275},{level:2,title:"builder.removePlugins",slug:"builder-removeplugins",normalizedTitle:"builder.removeplugins",charIndex:4911},{level:2,title:"builder.isPluginExists",slug:"builder-ispluginexists",normalizedTitle:"builder.ispluginexists",charIndex:5350}],lastUpdated:"10/13/2022, 3:49:10 AM",lastUpdatedTimestamp:166563295e4,headersStr:"builder.context builder.context.entry builder.context.rootPath builder.context.srcPath builder.context.distPath builder.context.cachePath builder.context.configPath builder.context.tsconfigPath builder.context.framework builder.context.devServer builder.build Development environment build Monitor file changes builder.startDevServer Disable print URLs Strict Port Custom Compiler builder.createCompiler builder.addPlugins builder.removePlugins builder.isPluginExists",content:"# Builder Instance\n\nThis section describes all the properties and methods on the Builder instance object.\n\n\n# builder.context\n\nbuilder.context is a read-only object that provides some context infos.\n\n\n# builder.context.entry\n\nThe entry object, corresponding to the entry option of createBuilder method.\n\n * Type\n\ntype BuilderEntry = Record<string, string | string[]>;\n\n\n\n# builder.context.rootPath\n\nThe root path of current build, corresponding to the cwd option of createBuilder method.\n\n * Type\n\ntype RootPath = string;\n\n\n\n# builder.context.srcPath\n\nThe absolute path to the src directory.\n\n * Type\n\ntype SrcPath = string;\n\n\n\n# builder.context.distPath\n\nThe absolute path of the output directory, corresponding to the output.distPath.root config in BuilderConfig.\n\n * Type\n\ntype DistPath = string;\n\n\n\n# builder.context.cachePath\n\nThe absolute path of the build cache files.\n\n * Type\n\ntype CachePath = string;\n\n\n\n# builder.context.configPath\n\nThe absolute path to the framework config file, corresponding to the configPath option of createBuilder method.\n\n * Type\n\ntype ConfigPath = string | undefined;\n\n\n\n# builder.context.tsconfigPath\n\nThe absolute path of the tsconfig.json file, or undefined if the tsconfig.json file does not exist in current project.\n\n * Type\n\ntype TsconfigPath = string | undefined;\n\n\n\n# builder.context.framework\n\nThe name of the framework, a unique identifier, the default value is 'modern.js'.\n\n * Type\n\ntype Framework = string | undefined;\n\n\n\n# builder.context.devServer\n\nDev Server information, including the current Dev Server hostname and port number.\n\n * Type\n\ntype DevServer = {\n  hostname: string;\n  port: number;\n};\n\n\n\n# builder.build\n\nPerform a production build.\n\n * Type\n\ntype BuildOptions = {\n  mode?: 'development' | 'production';\n  watch?: boolean;\n};\n\nfunction Build(options?: BuildOptions): Promise<void>;\n\n\n * Example\n\nawait builder.build();\n\n\n\n# Development environment build\n\nIf you need to perform a development build, you can set the mode option to 'development'.\n\nawait builder.build({\n  mode: 'development',\n});\n\n\n\n# Monitor file changes\n\nIf you need to watch file changes and re-build, you can set the watch option to true.\n\nawait builder.build({\n  watch: true,\n});\n\n\n\n# builder.startDevServer\n\nStart the local Dev Server, based on the Modern.js Dev Server.\n\n * Type\n\ntype StartDevServerOptions = {\n  // Whether to output URL infos, the default is true\n  printURLs?: boolean;\n  // Whether to throw an exception when the port is occupied, the default is false\n  strictPort?: boolean;\n  // custom Compiler object\n  compiler?: Compiler | MultiCompiler;\n  // passing through the build-independent dev server configuration\n  serverOptions?: Partial<ModernDevServerOptions>;\n};\n\ntype StartDevServerResult = {\n  urls: string[];\n  port: number;\n  server: Server;\n};\n\nfunction StartDevServer(\n  options?: StartDevServerOptions,\n): Promise<StartDevServerResult>;\n\n\n * Example\n\nStart Dev Server:\n\nawait builder.startDevServer();\n\n\nstartDevServer returns the following parameters:\n\n * urls: URLs to access Dev Server.\n * port: The actual listening port number.\n * server: Server instance object.\n\nconst { urls, port, server } = await builder.startDevServer();\nconsole.log(urls); // ['http://localhost:8080', 'http://192.168.0.1:8080']\nconsole.log(port); // 8080\n\n// Close the Dev Server\nawait server.close();\n\n\n\n# Disable print URLs\n\nSetting printURLs to false to disable the default URL output, so you can custom the logs.\n\nawait builder.startDevServer({\n  printURLs: false,\n});\n\n\n\n# Strict Port\n\nWhen a port is occupied, Builder will automatically increment the port number until an available port is found.\n\nSet strictPort to true and Builder will throw an exception when the port is occupied.\n\nawait builder.startDevServer({\n  strictPort: true,\n});\n\n\n\n# Custom Compiler\n\nIn some cases, you may want to use a custom compiler:\n\nconst compiler = webpack({\n  // ...\n});\nawait builder.startDevServer({\n  compiler,\n});\n\n\n\n# builder.createCompiler\n\nCreate a Compiler object.\n\n * Type\n\nfunction CreateCompiler(): Promise<Compiler | MultiCompiler>;\n\n\n * Example\n\nconst compiler = await builder.createCompiler();\n\n\n> In most scenarios, you do not need to use this API unless you need to custom the Dev Server or other advanced scenarios.\n\n\n# builder.addPlugins\n\nRegister one or more Builder plugins, which can be called multiple times.\n\nThis method needs to be called before compiling. If it is called after compiling, it will not affect the compilation result.\n\n * Type\n\ntype AddPluginsOptions = { before?: string } | { after?: string };\n\nfunction AddPlugins(\n  plugins: BuilderPlugins[],\n  options?: AddPluginsOptions,\n): Promise<void>;\n\n\n * Example\n\nbuilder.addPlugins([PluginFoo(), PluginBar()]);\n\n// Insert before the bar plugin\nbuilder.addPlugins([PluginFoo()], { before: 'bar' });\n\n// Insert after the bar plugin\nbuilder.addPlugins([PluginFoo()], { after: 'bar' });\n\n\n\n# builder.removePlugins\n\nRemoves one or more Builder plugins, which can be called multiple times.\n\nThis method needs to be called before compiling. If it is called after compiling, it will not affect the compilation result.\n\n * Type\n\nfunction RemovePlugins(pluginNames: string[]): void;\n\n\n * Example\n\n// add plugin\nconst pluginFoo = PluginFoo();\nbuilder.addPlugins(pluginFoo);\n\n// remove plugin\nbuilder.removePlugins([pluginFoo.name]);\n\n\n\n# builder.isPluginExists\n\nDetermines whether a plugin has been registered.\n\n * Type\n\nfunction IsPluginExists(pluginName: string): boolean;\n\n\n * Example\n\nbuilder.addPlugins([PluginFoo()]);\n\nbuilder.isPluginExists(PluginFoo().name); // true\n",normalizedContent:"# builder instance\n\nthis section describes all the properties and methods on the builder instance object.\n\n\n# builder.context\n\nbuilder.context is a read-only object that provides some context infos.\n\n\n# builder.context.entry\n\nthe entry object, corresponding to the entry option of createbuilder method.\n\n * type\n\ntype builderentry = record<string, string | string[]>;\n\n\n\n# builder.context.rootpath\n\nthe root path of current build, corresponding to the cwd option of createbuilder method.\n\n * type\n\ntype rootpath = string;\n\n\n\n# builder.context.srcpath\n\nthe absolute path to the src directory.\n\n * type\n\ntype srcpath = string;\n\n\n\n# builder.context.distpath\n\nthe absolute path of the output directory, corresponding to the output.distpath.root config in builderconfig.\n\n * type\n\ntype distpath = string;\n\n\n\n# builder.context.cachepath\n\nthe absolute path of the build cache files.\n\n * type\n\ntype cachepath = string;\n\n\n\n# builder.context.configpath\n\nthe absolute path to the framework config file, corresponding to the configpath option of createbuilder method.\n\n * type\n\ntype configpath = string | undefined;\n\n\n\n# builder.context.tsconfigpath\n\nthe absolute path of the tsconfig.json file, or undefined if the tsconfig.json file does not exist in current project.\n\n * type\n\ntype tsconfigpath = string | undefined;\n\n\n\n# builder.context.framework\n\nthe name of the framework, a unique identifier, the default value is 'modern.js'.\n\n * type\n\ntype framework = string | undefined;\n\n\n\n# builder.context.devserver\n\ndev server information, including the current dev server hostname and port number.\n\n * type\n\ntype devserver = {\n  hostname: string;\n  port: number;\n};\n\n\n\n# builder.build\n\nperform a production build.\n\n * type\n\ntype buildoptions = {\n  mode?: 'development' | 'production';\n  watch?: boolean;\n};\n\nfunction build(options?: buildoptions): promise<void>;\n\n\n * example\n\nawait builder.build();\n\n\n\n# development environment build\n\nif you need to perform a development build, you can set the mode option to 'development'.\n\nawait builder.build({\n  mode: 'development',\n});\n\n\n\n# monitor file changes\n\nif you need to watch file changes and re-build, you can set the watch option to true.\n\nawait builder.build({\n  watch: true,\n});\n\n\n\n# builder.startdevserver\n\nstart the local dev server, based on the modern.js dev server.\n\n * type\n\ntype startdevserveroptions = {\n  // whether to output url infos, the default is true\n  printurls?: boolean;\n  // whether to throw an exception when the port is occupied, the default is false\n  strictport?: boolean;\n  // custom compiler object\n  compiler?: compiler | multicompiler;\n  // passing through the build-independent dev server configuration\n  serveroptions?: partial<moderndevserveroptions>;\n};\n\ntype startdevserverresult = {\n  urls: string[];\n  port: number;\n  server: server;\n};\n\nfunction startdevserver(\n  options?: startdevserveroptions,\n): promise<startdevserverresult>;\n\n\n * example\n\nstart dev server:\n\nawait builder.startdevserver();\n\n\nstartdevserver returns the following parameters:\n\n * urls: urls to access dev server.\n * port: the actual listening port number.\n * server: server instance object.\n\nconst { urls, port, server } = await builder.startdevserver();\nconsole.log(urls); // ['http://localhost:8080', 'http://192.168.0.1:8080']\nconsole.log(port); // 8080\n\n// close the dev server\nawait server.close();\n\n\n\n# disable print urls\n\nsetting printurls to false to disable the default url output, so you can custom the logs.\n\nawait builder.startdevserver({\n  printurls: false,\n});\n\n\n\n# strict port\n\nwhen a port is occupied, builder will automatically increment the port number until an available port is found.\n\nset strictport to true and builder will throw an exception when the port is occupied.\n\nawait builder.startdevserver({\n  strictport: true,\n});\n\n\n\n# custom compiler\n\nin some cases, you may want to use a custom compiler:\n\nconst compiler = webpack({\n  // ...\n});\nawait builder.startdevserver({\n  compiler,\n});\n\n\n\n# builder.createcompiler\n\ncreate a compiler object.\n\n * type\n\nfunction createcompiler(): promise<compiler | multicompiler>;\n\n\n * example\n\nconst compiler = await builder.createcompiler();\n\n\n> in most scenarios, you do not need to use this api unless you need to custom the dev server or other advanced scenarios.\n\n\n# builder.addplugins\n\nregister one or more builder plugins, which can be called multiple times.\n\nthis method needs to be called before compiling. if it is called after compiling, it will not affect the compilation result.\n\n * type\n\ntype addpluginsoptions = { before?: string } | { after?: string };\n\nfunction addplugins(\n  plugins: builderplugins[],\n  options?: addpluginsoptions,\n): promise<void>;\n\n\n * example\n\nbuilder.addplugins([pluginfoo(), pluginbar()]);\n\n// insert before the bar plugin\nbuilder.addplugins([pluginfoo()], { before: 'bar' });\n\n// insert after the bar plugin\nbuilder.addplugins([pluginfoo()], { after: 'bar' });\n\n\n\n# builder.removeplugins\n\nremoves one or more builder plugins, which can be called multiple times.\n\nthis method needs to be called before compiling. if it is called after compiling, it will not affect the compilation result.\n\n * type\n\nfunction removeplugins(pluginnames: string[]): void;\n\n\n * example\n\n// add plugin\nconst pluginfoo = pluginfoo();\nbuilder.addplugins(pluginfoo);\n\n// remove plugin\nbuilder.removeplugins([pluginfoo.name]);\n\n\n\n# builder.ispluginexists\n\ndetermines whether a plugin has been registered.\n\n * type\n\nfunction ispluginexists(pluginname: string): boolean;\n\n\n * example\n\nbuilder.addplugins([pluginfoo()]);\n\nbuilder.ispluginexists(pluginfoo().name); // true\n",charsets:{cjk:!0}},{title:"Builder Types",frontmatter:{extractApiHeaders:[2]},regularPath:"/en/api/builder-types.html",relativePath:"en/api/builder-types.md",key:"v-77f8ec80",path:"/en/api/builder-types.html",headers:[{level:2,title:"BuilderInstance",slug:"builderinstance",normalizedTitle:"builderinstance",charIndex:98},{level:2,title:"BuilderContext",slug:"buildercontext",normalizedTitle:"buildercontext",charIndex:278},{level:2,title:"BuilderPlugin",slug:"builderplugin",normalizedTitle:"builderplugin",charIndex:461},{level:2,title:"BuilderTarget",slug:"buildertarget",normalizedTitle:"buildertarget",charIndex:799}],lastUpdated:"10/13/2022, 3:49:10 AM",lastUpdatedTimestamp:166563295e4,headersStr:"BuilderInstance BuilderContext BuilderPlugin BuilderTarget",content:"# Builder Types\n\nThis section describes some of the type definitions provided by the Builder.\n\n\n# BuilderInstance\n\nThe type of the Builder instance.\n\nimport { BuilderInstance } from '@modern-js/builder';\n\nconst builder: BuilderInstance = await createBuilder(provider, {});\n\n\n\n# BuilderContext\n\nThe type of the context property in the Builder instance.\n\nimport { BuilderContext } from '@modern-js/builder';\n\nconst context: BuilderContext = builder.context;\n\n\n\n# BuilderPlugin\n\nThe type of Builder plugin, should be used with the BuilderPluginAPI type exported from the provider.\n\nimport { BuilderPlugin } from '@modern-js/builder';\nimport { BuilderPluginAPI } from '@modern-js/builder-webpack-provider';\n\nconst myPlugin: BuilderPlugin<BuilderPluginAPI> = {\n  name: 'my-plugin',\n  setup() {},\n};\n\n\n\n# BuilderTarget\n\nThe type of build target.\n\nimport { BuilderTarget } from '@modern-js/builder';\n",normalizedContent:"# builder types\n\nthis section describes some of the type definitions provided by the builder.\n\n\n# builderinstance\n\nthe type of the builder instance.\n\nimport { builderinstance } from '@modern-js/builder';\n\nconst builder: builderinstance = await createbuilder(provider, {});\n\n\n\n# buildercontext\n\nthe type of the context property in the builder instance.\n\nimport { buildercontext } from '@modern-js/builder';\n\nconst context: buildercontext = builder.context;\n\n\n\n# builderplugin\n\nthe type of builder plugin, should be used with the builderpluginapi type exported from the provider.\n\nimport { builderplugin } from '@modern-js/builder';\nimport { builderpluginapi } from '@modern-js/builder-webpack-provider';\n\nconst myplugin: builderplugin<builderpluginapi> = {\n  name: 'my-plugin',\n  setup() {},\n};\n\n\n\n# buildertarget\n\nthe type of build target.\n\nimport { buildertarget } from '@modern-js/builder';\n",charsets:{}},{title:"Dev Config",frontmatter:{extractApiHeaders:[2]},regularPath:"/en/api/config-dev.html",relativePath:"en/api/config-dev.md",key:"v-5d4e540c",path:"/en/api/config-dev.html",headers:[{level:2,title:"dev.assetPrefix",slug:"dev-assetprefix",normalizedTitle:"dev.assetprefix",charIndex:87},{level:4,title:"Boolean Type",slug:"boolean-type",normalizedTitle:"boolean type",charIndex:419},{level:4,title:"String type",slug:"string-type",normalizedTitle:"string type",charIndex:725},{level:2,title:"dev.hmr",slug:"dev-hmr",normalizedTitle:"dev.hmr",charIndex:1015},{level:2,title:"dev.https",slug:"dev-https",normalizedTitle:"dev.https",charIndex:1229},{level:4,title:"Automatically generate certificates",slug:"automatically-generate-certificates",normalizedTitle:"automatically generate certificates",charIndex:1575},{level:4,title:"Manually set the certificate",slug:"manually-set-the-certificate",normalizedTitle:"manually set the certificate",charIndex:2098},{level:2,title:"dev.port",slug:"dev-port",normalizedTitle:"dev.port",charIndex:2570},{level:4,title:"Example",slug:"example",normalizedTitle:"example",charIndex:2782},{level:2,title:"dev.progressBar",slug:"dev-progressbar",normalizedTitle:"dev.progressbar",charIndex:2869},{level:2,title:"dev.startUrl",slug:"dev-starturl",normalizedTitle:"dev.starturl",charIndex:3029}],lastUpdated:"10/13/2022, 3:49:10 AM",lastUpdatedTimestamp:166563295e4,headersStr:"dev.assetPrefix Boolean Type String type dev.hmr dev.https Automatically generate certificates Manually set the certificate dev.port Example dev.progressBar dev.startUrl",content:"# Dev Config\n\nThis section describes some dev configurations in Modern.js Builder.\n\n\n# dev.assetPrefix\n\n * Type: boolean | string\n * Default: '/'\n\nSet the URL prefix of static resources in the development environment, similar to the output.publicPath config of webpack.\n\nThis config is only used in the development environment. In the production environment, please use the output.assetPrefix to set the URL prefix.\n\n# Boolean Type\n\nIf assetPrefix is set to true, the URL prefix will be //ip:port/:\n\nexport default {\n  dev: {\n    assetPrefix: true,\n  },\n};\n\n\nThe script URL will be:\n\n<script defer src=\"//${ip}:8080/static/js/main.js\"><\/script>\n\n\nIf assetPrefix is set to false or not set, / is used as the default value.\n\n# String type\n\nWhen the value of assetPrefix is string type, the string will be used as the URL prefix:\n\nexport default {\n  dev: {\n    assetPrefix: 'http://example.com/assets/',\n  },\n};\n\n\nThe script URL will be:\n\n<script defer src=\"http://example.com/assets/static/js/main.js\"><\/script>\n\n\n\n# dev.hmr\n\n * Type: boolean\n * Default: true\n\nWhether to enable Hot Module Replacement.\n\nIf hmr is set to false, the HMR and react-refresh will no longer work.\n\nexport default {\n  dev: {\n    hmr: false,\n  },\n};\n\n\n\n# dev.https\n\n * Type: boolean | { key: string; cert: string }\n * Default: false\n\nAfter configuring this option, you can enable HTTPS Dev Server, and disabling the HTTP Dev Server.\n\nHTTP:\n\n  > Local: http://localhost:8080/\n  > Network: http://192.168.0.1:8080/\n\n\nHTTPS:\n\n  > Local: https://localhost:8080/\n  > Network: https://192.168.0.1:8080/\n\n\n# Automatically generate certificates\n\nYou can directly set https to true, Builder will automatically generate the HTTPS certificate based on devcert.\n\nexport default {\n  dev: {\n    https: true,\n  },\n};\n\n\nThe devcert has some limitations, it does not currently support IP addresses yet.\n\nTIP\n\nThe https proxy automatically installs the certificate and needs root authority, please enter the password according to the prompt. The password is only used to trust the certificate, and will not be leaked or be used elsewhere.\n\n# Manually set the certificate\n\nYou can also manually pass in the certificate and the private key required in the dev.https option. This parameter will be directly passed to the createServer method of the https module in Node.js.\n\nFor details, please refer to https.createServer.\n\nimport fs from 'fs';\n\nexport default {\n  dev: {\n    https: {\n      key: fs.readFileSync('certificates/private.pem'),\n      cert: fs.readFileSync('certificates/public.pem'),\n    },\n  },\n};\n\n\n\n# dev.port\n\n * Type: number\n * Default: 8080\n\nSpecify a port number for Dev Server to listen.\n\nBy default, Dev Server listens on port 8080 and automatically increments the port number when the port is occupied.\n\n# Example\n\nSet the port to 3000:\n\nexport default {\n  dev: {\n    port: 3000,\n  },\n};\n\n\n\n# dev.progressBar\n\n * Type: boolean\n * Default: true\n\nWhether to progress bar during compilation.\n\nexport default {\n  dev: {\n    progressBar: false,\n  },\n};\n\n\n\n# dev.startUrl\n\n * Type: boolean | string | string[] | undefined\n * Default: undefined\n\ndev.startUrl is used to set the page to open when starting,and the default is not to open. You can set it to the following values:\n\nexport default {\n  dev: {\n    // Open the project's default preview page\n    startUrl: true,\n    // Open the specified page\n    startUrl: 'http://localhost:8080',\n    // Open multiple pages\n    startUrl: ['http://localhost:8080', 'http://localhost:8080/about'],\n  },\n};\n",normalizedContent:"# dev config\n\nthis section describes some dev configurations in modern.js builder.\n\n\n# dev.assetprefix\n\n * type: boolean | string\n * default: '/'\n\nset the url prefix of static resources in the development environment, similar to the output.publicpath config of webpack.\n\nthis config is only used in the development environment. in the production environment, please use the output.assetprefix to set the url prefix.\n\n# boolean type\n\nif assetprefix is set to true, the url prefix will be //ip:port/:\n\nexport default {\n  dev: {\n    assetprefix: true,\n  },\n};\n\n\nthe script url will be:\n\n<script defer src=\"//${ip}:8080/static/js/main.js\"><\/script>\n\n\nif assetprefix is set to false or not set, / is used as the default value.\n\n# string type\n\nwhen the value of assetprefix is string type, the string will be used as the url prefix:\n\nexport default {\n  dev: {\n    assetprefix: 'http://example.com/assets/',\n  },\n};\n\n\nthe script url will be:\n\n<script defer src=\"http://example.com/assets/static/js/main.js\"><\/script>\n\n\n\n# dev.hmr\n\n * type: boolean\n * default: true\n\nwhether to enable hot module replacement.\n\nif hmr is set to false, the hmr and react-refresh will no longer work.\n\nexport default {\n  dev: {\n    hmr: false,\n  },\n};\n\n\n\n# dev.https\n\n * type: boolean | { key: string; cert: string }\n * default: false\n\nafter configuring this option, you can enable https dev server, and disabling the http dev server.\n\nhttp:\n\n  > local: http://localhost:8080/\n  > network: http://192.168.0.1:8080/\n\n\nhttps:\n\n  > local: https://localhost:8080/\n  > network: https://192.168.0.1:8080/\n\n\n# automatically generate certificates\n\nyou can directly set https to true, builder will automatically generate the https certificate based on devcert.\n\nexport default {\n  dev: {\n    https: true,\n  },\n};\n\n\nthe devcert has some limitations, it does not currently support ip addresses yet.\n\ntip\n\nthe https proxy automatically installs the certificate and needs root authority, please enter the password according to the prompt. the password is only used to trust the certificate, and will not be leaked or be used elsewhere.\n\n# manually set the certificate\n\nyou can also manually pass in the certificate and the private key required in the dev.https option. this parameter will be directly passed to the createserver method of the https module in node.js.\n\nfor details, please refer to https.createserver.\n\nimport fs from 'fs';\n\nexport default {\n  dev: {\n    https: {\n      key: fs.readfilesync('certificates/private.pem'),\n      cert: fs.readfilesync('certificates/public.pem'),\n    },\n  },\n};\n\n\n\n# dev.port\n\n * type: number\n * default: 8080\n\nspecify a port number for dev server to listen.\n\nby default, dev server listens on port 8080 and automatically increments the port number when the port is occupied.\n\n# example\n\nset the port to 3000:\n\nexport default {\n  dev: {\n    port: 3000,\n  },\n};\n\n\n\n# dev.progressbar\n\n * type: boolean\n * default: true\n\nwhether to progress bar during compilation.\n\nexport default {\n  dev: {\n    progressbar: false,\n  },\n};\n\n\n\n# dev.starturl\n\n * type: boolean | string | string[] | undefined\n * default: undefined\n\ndev.starturl is used to set the page to open when starting,and the default is not to open. you can set it to the following values:\n\nexport default {\n  dev: {\n    // open the project's default preview page\n    starturl: true,\n    // open the specified page\n    starturl: 'http://localhost:8080',\n    // open multiple pages\n    starturl: ['http://localhost:8080', 'http://localhost:8080/about'],\n  },\n};\n",charsets:{cjk:!0}},{title:"Html Config",frontmatter:{extractApiHeaders:[2]},regularPath:"/en/api/config-html.html",relativePath:"en/api/config-html.md",key:"v-367cff22",path:"/en/api/config-html.html",headers:[{level:2,title:"html.appIcon",slug:"html-appicon",normalizedTitle:"html.appicon",charIndex:89},{level:4,title:"Example",slug:"example",normalizedTitle:"example",charIndex:399},{level:2,title:"html.crossorigin",slug:"html-crossorigin",normalizedTitle:"html.crossorigin",charIndex:631},{level:4,title:"Example",slug:"example-2",normalizedTitle:"example",charIndex:399},{level:2,title:"html.disableHtmlFolder",slug:"html-disablehtmlfolder",normalizedTitle:"html.disablehtmlfolder",charIndex:1055},{level:4,title:"Example",slug:"example-3",normalizedTitle:"example",charIndex:399},{level:2,title:"html.favicon",slug:"html-favicon",normalizedTitle:"html.favicon",charIndex:1701},{level:4,title:"Example",slug:"example-4",normalizedTitle:"example",charIndex:399},{level:2,title:"html.faviconByEntries",slug:"html-faviconbyentries",normalizedTitle:"html.faviconbyentries",charIndex:2173},{level:4,title:"Example",slug:"example-5",normalizedTitle:"example",charIndex:399},{level:2,title:"html.inject",slug:"html-inject",normalizedTitle:"html.inject",charIndex:2766},{level:4,title:"Default inject position",slug:"default-inject-position",normalizedTitle:"default inject position",charIndex:3177},{level:4,title:"Inject into body",slug:"inject-into-body",normalizedTitle:"inject into body",charIndex:3528},{level:2,title:"html.injectByEntries",slug:"html-injectbyentries",normalizedTitle:"html.injectbyentries",charIndex:4016},{level:4,title:"Example",slug:"example-6",normalizedTitle:"example",charIndex:399},{level:2,title:"html.meta",slug:"html-meta",normalizedTitle:"html.meta",charIndex:4627},{level:4,title:"String Type",slug:"string-type",normalizedTitle:"string type",charIndex:4777},{level:4,title:"Object Type",slug:"object-type",normalizedTitle:"object type",charIndex:5158},{level:3,title:"Remove Default Value",slug:"remove-default-value",normalizedTitle:"remove default value",charIndex:5641},{level:2,title:"html.metaByEntries",slug:"html-metabyentries",normalizedTitle:"html.metabyentries",charIndex:5871},{level:4,title:"Example",slug:"example-7",normalizedTitle:"example",charIndex:399},{level:2,title:"html.mountId",slug:"html-mountid",normalizedTitle:"html.mountid",charIndex:6519},{level:4,title:"Example",slug:"example-8",normalizedTitle:"example",charIndex:399},{level:2,title:"html.template",slug:"html-template",normalizedTitle:"html.template",charIndex:7064},{level:4,title:"Example",slug:"example-9",normalizedTitle:"example",charIndex:399},{level:2,title:"html.templateByEntries",slug:"html-templatebyentries",normalizedTitle:"html.templatebyentries",charIndex:7393},{level:4,title:"Example",slug:"example-10",normalizedTitle:"example",charIndex:399},{level:2,title:"html.templateParameters",slug:"html-templateparameters",normalizedTitle:"html.templateparameters",charIndex:7878},{level:4,title:"Example",slug:"example-11",normalizedTitle:"example",charIndex:399},{level:2,title:"html.templateParametersByEntries",slug:"html-templateparametersbyentries",normalizedTitle:"html.templateparametersbyentries",charIndex:9855},{level:4,title:"Example",slug:"example-12",normalizedTitle:"example",charIndex:399},{level:2,title:"html.title",slug:"html-title",normalizedTitle:"html.title",charIndex:8060},{level:2,title:"html.titleByEntries",slug:"html-titlebyentries",normalizedTitle:"html.titlebyentries",charIndex:10522},{level:4,title:"Example",slug:"example-13",normalizedTitle:"example",charIndex:399}],lastUpdated:"10/13/2022, 3:49:10 AM",lastUpdatedTimestamp:166563295e4,headersStr:"html.appIcon Example html.crossorigin Example html.disableHtmlFolder Example html.favicon Example html.faviconByEntries Example html.inject Default inject position Inject into body html.injectByEntries Example html.meta String Type Object Type Remove Default Value html.metaByEntries Example html.mountId Example html.template Example html.templateByEntries Example html.templateParameters Example html.templateParametersByEntries Example html.title html.titleByEntries Example",content:"# Html Config\n\nThis section describes some HTML configurations in Modern.js Builder.\n\n\n# html.appIcon\n\n * Type: string\n * Default: undefined\n\nSet the file path of the app icon, which can be a relative path or an absolute path.\n\nAfter config this option, the icon will be automatically copied to the dist directory during the compilation, and the corresponding link tag will be added to the HTML.\n\n# Example\n\nexport default {\n  html: {\n    appIcon: './src/assets/icon.png',\n  },\n};\n\n\nAfter recompiling, the following tags are automatically generated in the HTML:\n\n<link rel=\"app-touch-icon\" sizes=\"180*180\" href=\"/icon.png\" />\n\n\n\n# html.crossorigin\n\n * Type: boolean | 'anonymous' | 'use-credentials'\n * Default: false\n\nSet the crossorigin attribute of the <script> tag.\n\nWhen true is passed, it is automatically set to crossorigin=\"anonymous\".\n\n# Example\n\nexport default {\n  html: {\n    crossorigin: 'anonymous',\n  },\n};\n\n\nAfter compilation, the <script> tag in HTML becomes:\n\n<script defer src=\"/static/js/main.js\" crossorigin=\"anonymous\"><\/script>\n\n\n\n# html.disableHtmlFolder\n\n * Type: boolean\n * Default: false\n\nRemove the folder of the HTML files. When this option is enabled, the generated HTML file path will change from [name]/index.html to [name].html.\n\n# Example\n\nBy default, the structure of HTML files in the dist directory is:\n\n/dist\n└── html\n    └── main\n        └── index.html\n\n\nEnable the html.disableHtmlFolder config:\n\nexport default {\n  html: {\n    disableHtmlFolder: true,\n  },\n};\n\n\nAfter recompiling, the directory structure of the HTML files in dist is:\n\n/dist\n└── html\n    └── main.html\n\n\n> If you want to set the path of the HTML files, use the output.distPath.html config.\n\n\n# html.favicon\n\n * Type: string\n * Default: undefined\n\nSet the favicon icon for the page.\n\nAfter config this option, the favicon will be automatically copied to the dist directory during the compilation, and the corresponding link tag will be added to the HTML.\n\n# Example\n\nexport default {\n  html: {\n    favicon: './src/assets/icon.png',\n  },\n};\n\n\nAfter recompiling, the following tags are automatically generated in the HTML:\n\n<link rel=\"icon\" href=\"/favicon.ico\" />\n\n\n\n# html.faviconByEntries\n\n * Type: Record<string, string>\n * Default: undefined\n\nSet different favicon for different pages.\n\nThe usage is same as favicon, and you can use the \"entry name\" as the key to set each page individually.\n\nfaviconByEntries will overrides the value set in favicon.\n\n# Example\n\nexport default {\n  html: {\n    favicon: './src/assets/default.png',\n    faviconByEntries: {\n      foo: './src/assets/foo.png',\n    },\n  },\n};\n\n\nAfter recompiling, you will see:\n\n * The favicon for page foo is ./src/assets/foo.png.\n * The favicon for other pages is ./src/assets/default.png.\n\n\n# html.inject\n\n * Type: 'head' | 'body' | 'true' | false\n * Default: 'head'\n\nSet the inject position of the <script> tag.\n\nCan be set to the following values:\n\n * 'head': The script tag will be inject inside the head tag.\n * 'body': The script tag is inject at the end of the body tag.\n * true: The result depends on the scriptLoading config of html-webpack-plugin.\n * false: script tags will not be injected.\n\n# Default inject position\n\nThe script tag is inside the head tag by default:\n\n<html>\n  <head>\n    <title></title>\n    <script defer src=\"/static/js/runtime-main.js\"><\/script>\n    <script defer src=\"/static/js/main.js\"><\/script>\n    <link href=\"/static/css/main.css\" rel=\"stylesheet\" />\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html>\n\n\n# Inject into body\n\nAdd the following config to inject script into the body tag:\n\nexport default {\n  html: {\n    inject: 'body',\n  },\n};\n\n\nYou will see that the script tag is generated at the end of the body tag:\n\n<html>\n  <head>\n    <title></title>\n    <link href=\"/static/css/main.css\" rel=\"stylesheet\" />\n  </head>\n  <body>\n    <div id=\"root\"></div>\n    <script defer src=\"/static/js/runtime-main.js\"><\/script>\n    <script defer src=\"/static/js/main.js\"><\/script>\n  </body>\n</html>\n\n\n\n# html.injectByEntries\n\n * Type: Record<string, boolean | string>\n * Default: undefined\n\nSet different script tag inject positions for different pages.\n\nThe usage is same as inject, and you can use the \"entry name\" as the key to set each page individually.\n\ninjectByEntries will overrides the value set in inject.\n\n# Example\n\nexport default {\n  html: {\n    inject: 'head',\n    injectByEntries: {\n      foo: 'body',\n    },\n  },\n};\n\n\nAfter recompiling, you will see:\n\n * The script tag of the page foo will be injected inside the body tag.\n * The script tag of other pages will be injected inside the head tag.\n\n\n# html.meta\n\n * Type: Record<string, false | string | Record<string, string | boolean>>\n * Default: undefined\n\nConfigure the <meta> tag of the HTML.\n\n# String Type\n\nWhen the value of a meta object is a string, the key of the object is automatically mapped to name, and the value is mapped to content.\n\nFor example to set description:\n\nexport default {\n  html: {\n    meta: {\n      description: 'a description of the page',\n    },\n  },\n};\n\n\nThe meta tag in HTML is:\n\n<meta name=\"description\" content=\"a description of the page\" />\n\n\n# Object Type\n\nWhen the value of a meta object is an object, the key: value of the object is mapped to the attribute of the meta tag.\n\nIn this case, the name and content properties will not be set by default.\n\nFor example to set http-equiv:\n\nexport default {\n  html: {\n    meta: {\n      'http-equiv': {\n        'http-equiv': 'x-ua-compatible',\n        content: 'ie=edge',\n      },\n    },\n  },\n};\n\n\nThe meta tag in HTML is:\n\n<meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\" />\n\n\n\n# Remove Default Value\n\nSetting the value of the meta object to false and the meta tag will not be generated.\n\nFor example to remove the imagemode:\n\nexport default {\n  html: {\n    meta: {\n      imagemode: false,\n    },\n  },\n};\n\n\n\n# html.metaByEntries\n\n * Type: Record<string, Meta>\n * Default: undefined\n\nSet different meta tags for different pages.\n\nThe usage is same as meta, and you can use the \"entry name\" as the key to set each page individually.\n\nmetaByEntries will overrides the value set in meta.\n\n# Example\n\nexport default {\n  html: {\n    meta: {\n      description: 'ByteDance',\n    },\n    metaByEntries: {\n      foo: {\n        description: 'Tiktok',\n      },\n    },\n  },\n};\n\n\nAfter compiling, you can see that the meta of the page foo is:\n\n<meta name=\"description\" content=\"Tiktok\" />\n\n\nThe meta of other pages is:\n\n<meta name=\"description\" content=\"ByteDance\" />\n\n\n\n# html.mountId\n\n * Type: string\n * Default: 'root'\n\nBy default, the root element is included in the HTML template for component mounting, and the element id can be modified through mountId.\n\n<body>\n  <div id=\"root\"></div>\n</body>\n\n\n# Example\n\nSet the id to app:\n\nexport default {\n  html: {\n    mountId: 'app',\n  },\n};\n\n\nAfter compilation:\n\n<body>\n  <div id=\"app\"></div>\n</body>\n\n\nTIP\n\nIf you customized the HTML template, please make sure that the template contains <div id=\"<%= mountId %>\"></div>, otherwise this config will not take effect.\n\n\n# html.template\n\n * Type: string\n * Default:\n\nDefine the path to the HTML template, corresponding to the template config of html-webpack-plugin.\n\n# Example\n\nReplace the default template with a custom HTML template file，you can add the following config:\n\nexport default {\n  html: {\n    template: './static/index.html',\n  },\n};\n\n\n\n# html.templateByEntries\n\n * Type: Object\n * Default: undefined\n\nSet different template file for different pages.\n\nThe usage is same as template, and you can use the \"entry name\" as the key to set each page individually.\n\ntemplateByEntries will overrides the value set in template.\n\n# Example\n\nexport default {\n  output: {\n    template: './static/index.html',\n    templateByEntries: {\n      foo: './src/pages/foo/index.html',\n      bar: './src/pages/bar/index.html',\n    },\n  },\n};\n\n\n\n# html.templateParameters\n\n * Type: Object | Function\n * Default:\n\ntype DefaultParameters = {\n  meta: string; // corresponding to html.meta config\n  title: string; // corresponding to html.title config\n  mountId: string; // corresponding to html.mountId config\n  entryName: string; // entry name\n  assetPrefix: string; // corresponding to output.assetPrefix config\n  compilation: webpack.Compilation; // Compilation object corresponding to webpack\n  webpackConfig: config; // webpack config\n  // htmlWebpackPlugin built-in parameters\n  // See https://github.com/jantimon/html-webpack-plugin for details\n  htmlWebpackPlugin: {\n    tags: object;\n    files: object;\n    options: object;\n  };\n};\n\n\nDefine the parameters in the HTML template, corresponding to the templateParameters config of html-webpack-plugin.You can use the config as an object or a function.\n\nIf it is an object, it will be merged with the default parameters. For example:\n\nexport default {\n  html: {\n    templateParameters: {\n      title: 'My App',\n    },\n  },\n};\n\n\nIf it is a function, the default parameters will be passed in, and you can return an object to override the default parameters. For example:\n\nexport default {\n  html: {\n    templateParameters: defaultParameters => {\n      console.log(defaultParameters.compilation);\n      console.log(defaultParameters.title);\n      return {\n        title: 'My App',\n      };\n    },\n  },\n};\n\n\n# Example\n\nTo use the foo parameter in the HTML template, you can add the following config:\n\nexport default {\n  html: {\n    templateParameters: {\n      foo: 'bar',\n    },\n  },\n};\n\n\nOr you can use a function to dynamically generate the parameters:\n\nexport default {\n  html: {\n    templateParameters: defaultParameters => {\n      return {\n        foo: 'bar',\n      };\n    },\n  },\n};\n\n\nThen you can use the foo parameter in the HTML template by <%= foo %>:\n\n<script>\n  window.foo = '<%= foo %>';\n<\/script>\n\n\nThe compiled HTML is:\n\n<script>window.foo = 'bar'<\/script>\n\n\n\n# html.templateParametersByEntries\n\n * Type: Object\n * Default: undefined\n\nSet different template parameters for different pages.\n\nThe usage is same as templateParameters, and you can use the \"entry name\" as the key to set each page individually.\n\ntemplateParametersByEntries will overrides the value set in templateParameters.\n\n# Example\n\nexport default {\n  output: {\n    templateParametersByEntries: {\n      foo: {\n        type: 'a',\n      },\n      bar: {\n        type: 'b',\n      },\n    },\n  },\n};\n\n\n\n# html.title\n\n * Type: string\n * Default: undefined\n\nSet the title tag of the HTML page, for example:\n\nexport default {\n  html: {\n    title: 'example',\n  },\n};\n\n\n\n# html.titleByEntries\n\n * Type: Record<string, string>\n * Default: undefined\n\nSet different title for different pages.\n\nThe usage is same as title, and you can use the \"entry name\" as the key to set each page individually.\n\ntitleByEntries will overrides the value set in title.\n\n# Example\n\nexport default {\n  html: {\n    title: 'ByteDance',\n    titleByEntries: {\n      foo: 'Tiktok',\n    },\n  },\n};\n\n\nAfter recompiling, you can see:\n\n * The title of the page foo is Tiktok.\n * The title of other pages is ByteDance.",normalizedContent:"# html config\n\nthis section describes some html configurations in modern.js builder.\n\n\n# html.appicon\n\n * type: string\n * default: undefined\n\nset the file path of the app icon, which can be a relative path or an absolute path.\n\nafter config this option, the icon will be automatically copied to the dist directory during the compilation, and the corresponding link tag will be added to the html.\n\n# example\n\nexport default {\n  html: {\n    appicon: './src/assets/icon.png',\n  },\n};\n\n\nafter recompiling, the following tags are automatically generated in the html:\n\n<link rel=\"app-touch-icon\" sizes=\"180*180\" href=\"/icon.png\" />\n\n\n\n# html.crossorigin\n\n * type: boolean | 'anonymous' | 'use-credentials'\n * default: false\n\nset the crossorigin attribute of the <script> tag.\n\nwhen true is passed, it is automatically set to crossorigin=\"anonymous\".\n\n# example\n\nexport default {\n  html: {\n    crossorigin: 'anonymous',\n  },\n};\n\n\nafter compilation, the <script> tag in html becomes:\n\n<script defer src=\"/static/js/main.js\" crossorigin=\"anonymous\"><\/script>\n\n\n\n# html.disablehtmlfolder\n\n * type: boolean\n * default: false\n\nremove the folder of the html files. when this option is enabled, the generated html file path will change from [name]/index.html to [name].html.\n\n# example\n\nby default, the structure of html files in the dist directory is:\n\n/dist\n└── html\n    └── main\n        └── index.html\n\n\nenable the html.disablehtmlfolder config:\n\nexport default {\n  html: {\n    disablehtmlfolder: true,\n  },\n};\n\n\nafter recompiling, the directory structure of the html files in dist is:\n\n/dist\n└── html\n    └── main.html\n\n\n> if you want to set the path of the html files, use the output.distpath.html config.\n\n\n# html.favicon\n\n * type: string\n * default: undefined\n\nset the favicon icon for the page.\n\nafter config this option, the favicon will be automatically copied to the dist directory during the compilation, and the corresponding link tag will be added to the html.\n\n# example\n\nexport default {\n  html: {\n    favicon: './src/assets/icon.png',\n  },\n};\n\n\nafter recompiling, the following tags are automatically generated in the html:\n\n<link rel=\"icon\" href=\"/favicon.ico\" />\n\n\n\n# html.faviconbyentries\n\n * type: record<string, string>\n * default: undefined\n\nset different favicon for different pages.\n\nthe usage is same as favicon, and you can use the \"entry name\" as the key to set each page individually.\n\nfaviconbyentries will overrides the value set in favicon.\n\n# example\n\nexport default {\n  html: {\n    favicon: './src/assets/default.png',\n    faviconbyentries: {\n      foo: './src/assets/foo.png',\n    },\n  },\n};\n\n\nafter recompiling, you will see:\n\n * the favicon for page foo is ./src/assets/foo.png.\n * the favicon for other pages is ./src/assets/default.png.\n\n\n# html.inject\n\n * type: 'head' | 'body' | 'true' | false\n * default: 'head'\n\nset the inject position of the <script> tag.\n\ncan be set to the following values:\n\n * 'head': the script tag will be inject inside the head tag.\n * 'body': the script tag is inject at the end of the body tag.\n * true: the result depends on the scriptloading config of html-webpack-plugin.\n * false: script tags will not be injected.\n\n# default inject position\n\nthe script tag is inside the head tag by default:\n\n<html>\n  <head>\n    <title></title>\n    <script defer src=\"/static/js/runtime-main.js\"><\/script>\n    <script defer src=\"/static/js/main.js\"><\/script>\n    <link href=\"/static/css/main.css\" rel=\"stylesheet\" />\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html>\n\n\n# inject into body\n\nadd the following config to inject script into the body tag:\n\nexport default {\n  html: {\n    inject: 'body',\n  },\n};\n\n\nyou will see that the script tag is generated at the end of the body tag:\n\n<html>\n  <head>\n    <title></title>\n    <link href=\"/static/css/main.css\" rel=\"stylesheet\" />\n  </head>\n  <body>\n    <div id=\"root\"></div>\n    <script defer src=\"/static/js/runtime-main.js\"><\/script>\n    <script defer src=\"/static/js/main.js\"><\/script>\n  </body>\n</html>\n\n\n\n# html.injectbyentries\n\n * type: record<string, boolean | string>\n * default: undefined\n\nset different script tag inject positions for different pages.\n\nthe usage is same as inject, and you can use the \"entry name\" as the key to set each page individually.\n\ninjectbyentries will overrides the value set in inject.\n\n# example\n\nexport default {\n  html: {\n    inject: 'head',\n    injectbyentries: {\n      foo: 'body',\n    },\n  },\n};\n\n\nafter recompiling, you will see:\n\n * the script tag of the page foo will be injected inside the body tag.\n * the script tag of other pages will be injected inside the head tag.\n\n\n# html.meta\n\n * type: record<string, false | string | record<string, string | boolean>>\n * default: undefined\n\nconfigure the <meta> tag of the html.\n\n# string type\n\nwhen the value of a meta object is a string, the key of the object is automatically mapped to name, and the value is mapped to content.\n\nfor example to set description:\n\nexport default {\n  html: {\n    meta: {\n      description: 'a description of the page',\n    },\n  },\n};\n\n\nthe meta tag in html is:\n\n<meta name=\"description\" content=\"a description of the page\" />\n\n\n# object type\n\nwhen the value of a meta object is an object, the key: value of the object is mapped to the attribute of the meta tag.\n\nin this case, the name and content properties will not be set by default.\n\nfor example to set http-equiv:\n\nexport default {\n  html: {\n    meta: {\n      'http-equiv': {\n        'http-equiv': 'x-ua-compatible',\n        content: 'ie=edge',\n      },\n    },\n  },\n};\n\n\nthe meta tag in html is:\n\n<meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\" />\n\n\n\n# remove default value\n\nsetting the value of the meta object to false and the meta tag will not be generated.\n\nfor example to remove the imagemode:\n\nexport default {\n  html: {\n    meta: {\n      imagemode: false,\n    },\n  },\n};\n\n\n\n# html.metabyentries\n\n * type: record<string, meta>\n * default: undefined\n\nset different meta tags for different pages.\n\nthe usage is same as meta, and you can use the \"entry name\" as the key to set each page individually.\n\nmetabyentries will overrides the value set in meta.\n\n# example\n\nexport default {\n  html: {\n    meta: {\n      description: 'bytedance',\n    },\n    metabyentries: {\n      foo: {\n        description: 'tiktok',\n      },\n    },\n  },\n};\n\n\nafter compiling, you can see that the meta of the page foo is:\n\n<meta name=\"description\" content=\"tiktok\" />\n\n\nthe meta of other pages is:\n\n<meta name=\"description\" content=\"bytedance\" />\n\n\n\n# html.mountid\n\n * type: string\n * default: 'root'\n\nby default, the root element is included in the html template for component mounting, and the element id can be modified through mountid.\n\n<body>\n  <div id=\"root\"></div>\n</body>\n\n\n# example\n\nset the id to app:\n\nexport default {\n  html: {\n    mountid: 'app',\n  },\n};\n\n\nafter compilation:\n\n<body>\n  <div id=\"app\"></div>\n</body>\n\n\ntip\n\nif you customized the html template, please make sure that the template contains <div id=\"<%= mountid %>\"></div>, otherwise this config will not take effect.\n\n\n# html.template\n\n * type: string\n * default:\n\ndefine the path to the html template, corresponding to the template config of html-webpack-plugin.\n\n# example\n\nreplace the default template with a custom html template file，you can add the following config:\n\nexport default {\n  html: {\n    template: './static/index.html',\n  },\n};\n\n\n\n# html.templatebyentries\n\n * type: object\n * default: undefined\n\nset different template file for different pages.\n\nthe usage is same as template, and you can use the \"entry name\" as the key to set each page individually.\n\ntemplatebyentries will overrides the value set in template.\n\n# example\n\nexport default {\n  output: {\n    template: './static/index.html',\n    templatebyentries: {\n      foo: './src/pages/foo/index.html',\n      bar: './src/pages/bar/index.html',\n    },\n  },\n};\n\n\n\n# html.templateparameters\n\n * type: object | function\n * default:\n\ntype defaultparameters = {\n  meta: string; // corresponding to html.meta config\n  title: string; // corresponding to html.title config\n  mountid: string; // corresponding to html.mountid config\n  entryname: string; // entry name\n  assetprefix: string; // corresponding to output.assetprefix config\n  compilation: webpack.compilation; // compilation object corresponding to webpack\n  webpackconfig: config; // webpack config\n  // htmlwebpackplugin built-in parameters\n  // see https://github.com/jantimon/html-webpack-plugin for details\n  htmlwebpackplugin: {\n    tags: object;\n    files: object;\n    options: object;\n  };\n};\n\n\ndefine the parameters in the html template, corresponding to the templateparameters config of html-webpack-plugin.you can use the config as an object or a function.\n\nif it is an object, it will be merged with the default parameters. for example:\n\nexport default {\n  html: {\n    templateparameters: {\n      title: 'my app',\n    },\n  },\n};\n\n\nif it is a function, the default parameters will be passed in, and you can return an object to override the default parameters. for example:\n\nexport default {\n  html: {\n    templateparameters: defaultparameters => {\n      console.log(defaultparameters.compilation);\n      console.log(defaultparameters.title);\n      return {\n        title: 'my app',\n      };\n    },\n  },\n};\n\n\n# example\n\nto use the foo parameter in the html template, you can add the following config:\n\nexport default {\n  html: {\n    templateparameters: {\n      foo: 'bar',\n    },\n  },\n};\n\n\nor you can use a function to dynamically generate the parameters:\n\nexport default {\n  html: {\n    templateparameters: defaultparameters => {\n      return {\n        foo: 'bar',\n      };\n    },\n  },\n};\n\n\nthen you can use the foo parameter in the html template by <%= foo %>:\n\n<script>\n  window.foo = '<%= foo %>';\n<\/script>\n\n\nthe compiled html is:\n\n<script>window.foo = 'bar'<\/script>\n\n\n\n# html.templateparametersbyentries\n\n * type: object\n * default: undefined\n\nset different template parameters for different pages.\n\nthe usage is same as templateparameters, and you can use the \"entry name\" as the key to set each page individually.\n\ntemplateparametersbyentries will overrides the value set in templateparameters.\n\n# example\n\nexport default {\n  output: {\n    templateparametersbyentries: {\n      foo: {\n        type: 'a',\n      },\n      bar: {\n        type: 'b',\n      },\n    },\n  },\n};\n\n\n\n# html.title\n\n * type: string\n * default: undefined\n\nset the title tag of the html page, for example:\n\nexport default {\n  html: {\n    title: 'example',\n  },\n};\n\n\n\n# html.titlebyentries\n\n * type: record<string, string>\n * default: undefined\n\nset different title for different pages.\n\nthe usage is same as title, and you can use the \"entry name\" as the key to set each page individually.\n\ntitlebyentries will overrides the value set in title.\n\n# example\n\nexport default {\n  html: {\n    title: 'bytedance',\n    titlebyentries: {\n      foo: 'tiktok',\n    },\n  },\n};\n\n\nafter recompiling, you can see:\n\n * the title of the page foo is tiktok.\n * the title of other pages is bytedance.",charsets:{cjk:!0}},{title:"Output Config",frontmatter:{extractApiHeaders:[2]},regularPath:"/en/api/config-output.html",relativePath:"en/api/config-output.md",key:"v-18368a94",path:"/en/api/config-output.html",headers:[{level:2,title:"output.assetPrefix",slug:"output-assetprefix",normalizedTitle:"output.assetprefix",charIndex:101},{level:4,title:"Example",slug:"example",normalizedTitle:"example",charIndex:584},{level:2,title:"output.assetsRetry",slug:"output-assetsretry",normalizedTitle:"output.assetsretry",charIndex:846},{level:3,title:"assetsRetry.max",slug:"assetsretry-max",normalizedTitle:"assetsretry.max",charIndex:1697},{level:3,title:"assetsRetry.domain",slug:"assetsretry-domain",normalizedTitle:"assetsretry.domain",charIndex:1894},{level:3,title:"assetsRetry.type",slug:"assetsretry-type",normalizedTitle:"assetsretry.type",charIndex:2144},{level:3,title:"assetsRetry.test",slug:"assetsretry-test",normalizedTitle:"assetsretry.test",charIndex:2373},{level:3,title:"assetsRetry.crossOrigin",slug:"assetsretry-crossorigin",normalizedTitle:"assetsretry.crossorigin",charIndex:2635},{level:3,title:"assetsRetry.onRetry",slug:"assetsretry-onretry",normalizedTitle:"assetsretry.onretry",charIndex:2887},{level:3,title:"assetsRetry.onSuccess",slug:"assetsretry-onsuccess",normalizedTitle:"assetsretry.onsuccess",charIndex:3294},{level:3,title:"assetsRetry.onFail",slug:"assetsretry-onfail",normalizedTitle:"assetsretry.onfail",charIndex:3712},{level:2,title:"output.charset",slug:"output-charset",normalizedTitle:"output.charset",charIndex:4124},{level:2,title:"output.cleanDistPath",slug:"output-cleandistpath",normalizedTitle:"output.cleandistpath",charIndex:4561},{level:2,title:"output.convertToRem",slug:"output-converttorem",normalizedTitle:"output.converttorem",charIndex:4870},{level:4,title:"Boolean Type",slug:"boolean-type",normalizedTitle:"boolean type",charIndex:5127},{level:4,title:"Object Type",slug:"object-type",normalizedTitle:"object type",charIndex:5646},{level:4,title:"Example",slug:"example-2",normalizedTitle:"example",charIndex:584},{level:2,title:"output.copy",slug:"output-copy",normalizedTitle:"output.copy",charIndex:7773},{level:2,title:"output.dataUriLimit",slug:"output-dataurilimit",normalizedTitle:"output.dataurilimit",charIndex:8160},{level:4,title:"Example",slug:"example-3",normalizedTitle:"example",charIndex:584},{level:2,title:"output.distPath",slug:"output-distpath",normalizedTitle:"output.distpath",charIndex:9047},{level:4,title:"Example",slug:"example-4",normalizedTitle:"example",charIndex:584},{level:2,title:"output.disableMinimize",slug:"output-disableminimize",normalizedTitle:"output.disableminimize",charIndex:10419},{level:2,title:"output.disableSourceMap",slug:"output-disablesourcemap",normalizedTitle:"output.disablesourcemap",charIndex:10755},{level:2,title:"output.disableFilenameHash",slug:"output-disablefilenamehash",normalizedTitle:"output.disablefilenamehash",charIndex:11149},{level:4,title:"Example",slug:"example-5",normalizedTitle:"example",charIndex:584},{level:2,title:"output.disableInlineRuntimeChunk",slug:"output-disableinlineruntimechunk",normalizedTitle:"output.disableinlineruntimechunk",charIndex:11990},{level:2,title:"output.enableAssetManifest",slug:"output-enableassetmanifest",normalizedTitle:"output.enableassetmanifest",charIndex:12296},{level:4,title:"Example",slug:"example-6",normalizedTitle:"example",charIndex:584},{level:2,title:"output.enableAssetFallback",slug:"output-enableassetfallback",normalizedTitle:"output.enableassetfallback",charIndex:12855},{level:4,title:"Example",slug:"example-7",normalizedTitle:"example",charIndex:584},{level:2,title:"output.enableLatestDecorators",slug:"output-enablelatestdecorators",normalizedTitle:"output.enablelatestdecorators",charIndex:13270},{level:2,title:"output.enableCssModuleTSDeclaration",slug:"output-enablecssmoduletsdeclaration",normalizedTitle:"output.enablecssmoduletsdeclaration",charIndex:13624},{level:4,title:"Example",slug:"example-8",normalizedTitle:"example",charIndex:584},{level:2,title:"output.enableInlineScripts",slug:"output-enableinlinescripts",normalizedTitle:"output.enableinlinescripts",charIndex:14091},{level:4,title:"Example",slug:"example-9",normalizedTitle:"example",charIndex:584},{level:2,title:"output.enableInlineStyles",slug:"output-enableinlinestyles",normalizedTitle:"output.enableinlinestyles",charIndex:14894},{level:4,title:"Example",slug:"example-10",normalizedTitle:"example",charIndex:584},{level:2,title:"output.externals",slug:"output-externals",normalizedTitle:"output.externals",charIndex:15713},{level:4,title:"Example",slug:"example-11",normalizedTitle:"example",charIndex:584},{level:2,title:"output.filename",slug:"output-filename",normalizedTitle:"output.filename",charIndex:16259},{level:4,title:"Example",slug:"example-12",normalizedTitle:"example",charIndex:584},{level:2,title:"output.legalComments",slug:"output-legalcomments",normalizedTitle:"output.legalcomments",charIndex:17676},{level:4,title:"Example",slug:"example-13",normalizedTitle:"example",charIndex:584},{level:2,title:"output.overrideBrowserslist",slug:"output-overridebrowserslist",normalizedTitle:"output.overridebrowserslist",charIndex:18466},{level:4,title:"Priority",slug:"priority",normalizedTitle:"priority",charIndex:18791},{level:4,title:"Default Value",slug:"default-value",normalizedTitle:"default value",charIndex:19192},{level:4,title:"Example",slug:"example-14",normalizedTitle:"example",charIndex:584},{level:2,title:"output.polyfill",slug:"output-polyfill",normalizedTitle:"output.polyfill",charIndex:19704},{level:3,title:"Config",slug:"config",normalizedTitle:"config",charIndex:9},{level:4,title:"entry",slug:"entry",normalizedTitle:"entry",charIndex:12771},{level:4,title:"usage",slug:"usage",normalizedTitle:"usage",charIndex:19741},{level:4,title:"ua",slug:"ua",normalizedTitle:"ua",charIndex:6790},{level:4,title:"off",slug:"off",normalizedTitle:"off",charIndex:11042},{level:2,title:"output.svgDefaultExport",slug:"output-svgdefaultexport",normalizedTitle:"output.svgdefaultexport",charIndex:20397}],lastUpdated:"10/13/2022, 3:49:10 AM",lastUpdatedTimestamp:166563295e4,headersStr:"output.assetPrefix Example output.assetsRetry assetsRetry.max assetsRetry.domain assetsRetry.type assetsRetry.test assetsRetry.crossOrigin assetsRetry.onRetry assetsRetry.onSuccess assetsRetry.onFail output.charset output.cleanDistPath output.convertToRem Boolean Type Object Type Example output.copy output.dataUriLimit Example output.distPath Example output.disableMinimize output.disableSourceMap output.disableFilenameHash Example output.disableInlineRuntimeChunk output.enableAssetManifest Example output.enableAssetFallback Example output.enableLatestDecorators output.enableCssModuleTSDeclaration Example output.enableInlineScripts Example output.enableInlineStyles Example output.externals Example output.filename Example output.legalComments Example output.overrideBrowserslist Priority Default Value Example output.polyfill Config entry usage ua off output.svgDefaultExport",content:"# Output Config\n\nThis section describes some output related configurations in Modern.js Builder.\n\n\n# output.assetPrefix\n\n * Type: boolean | string\n * Default: '/'\n\nWhen using CDN in the production environment, you can use this option to set the URL prefix of static resources, similar to the output.publicPath config of webpack.\n\nThis config is only used in the production environment. In the development environment, please use the dev.assetPrefix to set the URL prefix.\n\nAfter setting, the URLs of JavaScript, CSS and other static files will be prefixed with output.assetPrefix:\n\n# Example\n\nexport default {\n  output: {\n    assetPrefix: 'https://cdn.example.com/assets/',\n  },\n};\n\n\nAfter building, you can see that the JS files are loaded from:\n\n<script\n  defer\n  src=\"https://cdn.example.com/assets/static/js/main.ebc4ff4f.js\"\n><\/script>\n\n\n\n# output.assetsRetry\n\n * Type: Object\n\noutput.assetsRetry is used to configure the retry of assets.The type of AssetsRetryOptions is as follows:\n\nexport type AssetsRetryHookContext = {\n  times: number;\n  domain: string;\n  url: string;\n  tagName: string;\n};\n\nexport type AssetsRetryOptions = {\n  type?: string[];\n  domain?: string[];\n  max?: number;\n  test?: string | ((url: string) => boolean);\n  crossOrigin?: boolean;\n  onRetry?: (options: AssetsRetryHookContext) => void;\n  onSuccess?: (options: AssetsRetryHookContext) => void;\n  onFail?: (options: AssetsRetryHookContext) => void;\n};\n\n\nThe default value is as follows:\n\nexport const defaultAssetsRetryOptions: AssetsRetryOptions = {\n  type: ['script', 'link', 'img'],\n  domain: [],\n  max: 3,\n  test: '',\n  crossOrigin: false,\n  onRetry: () => {},\n  onSuccess: () => {},\n  onFail: () => {},\n};\n\n\n\n# assetsRetry.max\n\n * Type: number\n * Default: 3\n\nThe maximum number of retries for a single resource. For example:\n\nexport default {\n  output: {\n    assetsRetry: {\n      max: 3,\n    },\n  },\n};\n\n\n\n# assetsRetry.domain\n\n * Type: string[]\n * Default: []\n\nThe domain of the resource to be retried. For example:\n\nexport default {\n  output: {\n    assetsRetry: {\n      domain: ['https://cdn1.example.com', 'https://cdn2.example.com'],\n    },\n  },\n};\n\n\n\n# assetsRetry.type\n\n * Type: string[]\n * Default: ['script', 'link', 'img']\n\nThe type of the resource to be retried. For example:\n\nexport default {\n  output: {\n    assetsRetry: {\n      type: ['script', 'link'],\n    },\n  },\n};\n\n\n\n# assetsRetry.test\n\n * Type: string | ((url: string) => boolean) | undefined\n * Default: undefined\n\nThe test function of the resource to be retried. For example:\n\nexport default {\n  output: {\n    assetsRetry: {\n      test: /cdn\\.example\\.com/,\n    },\n  },\n};\n\n\n\n# assetsRetry.crossOrigin\n\n * Type: undefined | boolean\n * Default: false\n\nWhether to add the crossOrigin attribute to the resource to be retried. For example:\n\nexport default {\n  output: {\n    assetsRetry: {\n      crossOrigin: true,\n    },\n  },\n};\n\n\n\n# assetsRetry.onRetry\n\n * Type: undefined | (options: AssetsRetryHookContext) => void\n\nThe callback function when the resource is being retried. For example:\n\nexport default {\n  output: {\n    assetsRetry: {\n      onRetry: ({ times, domain, url, tagName }) => {\n        console.log(\n          `Retry ${times} times, domain: ${domain}, url: ${url}, tagName: ${tagName}`,\n        );\n      },\n    },\n  },\n};\n\n\n\n# assetsRetry.onSuccess\n\n * Type: undefined | (options: AssetsRetryHookContext) => void\n\nThe callback function when the resource is successfully retried. For example:\n\nexport default {\n  output: {\n    assetsRetry: {\n      onSuccess: ({ times, domain, url, tagName }) => {\n        console.log(\n          `Retry ${times} times, domain: ${domain}, url: ${url}, tagName: ${tagName}`,\n        );\n      },\n    },\n  },\n};\n\n\n\n# assetsRetry.onFail\n\n * Type: undefined | (options: AssetsRetryHookContext) => void\n\nThe callback function when the resource is failed to be retried. For example:\n\nexport default {\n  output: {\n    assetsRetry: {\n      onFail: ({ times, domain, url, tagName }) => {\n        console.log(\n          `Retry ${times} times, domain: ${domain}, url: ${url}, tagName: ${tagName}`,\n        );\n      },\n    },\n  },\n};\n\n\n\n# output.charset\n\n * Type: 'ascii' | 'utf8'\n * Default: 'ascii'\n\nBy default, Builder's output is ASCII-only and will escape all non-ASCII characters.\n\nIf you want to output the original characters without using escape sequences, you can set output.charset to utf8.\n\nexport default {\n  output: {\n    charset: 'utf8',\n  },\n};\n\n\nBuilder will automatically add <meta charset=\"utf-8\"> to the generated HTML files if output.charset is utf8.\n\n\n# output.cleanDistPath\n\n * Type: boolean\n * Default: true\n\nWhether to clean all files in the dist path before starting compilation.\n\nBy default, Builder clean up the dist file, you can disable this behavior by setting cleanDistPath to false.\n\nexport default {\n  output: {\n    cleanDistPath: false,\n  },\n};\n\n\n\n# output.convertToRem\n\n * Type: boolean | object\n * Default: false\n\nBy setting output.convertToRem, the Builder can do the following things:\n\n * Convert px to rem in CSS\n * Insert runtime code into the HTML template to set the fontSize of the root element\n\n# Boolean Type\n\nIf output.convertToRem is set to true, Rem processing capability will be turned on.\n\nexport default {\n  output: {\n    convertToRem: true,\n  },\n};\n\n\nAt this point, the rem configuration defaults as follows:\n\n{\n  enableRuntime: true,\n  rootFontSize: 50,\n  screenWidth: 375,\n  rootFontSize: 50,\n  maxRootFontSize: 64,\n  widthQueryKey: '',\n  excludeEntries: [],\n  supportLandscape: false,\n  useRootFontSizeBeyondMax: false,\n  pxtorem: {\n    rootValue: 50,\n    unitPrecision: 5,\n    propList: ['*'],\n  }\n}\n\n\n# Object Type\n\nWhen the value of output.convertToRem is object type, The Builder will perform Rem processing based on the current configuration.\n\noptions:\n\nNAME                       TYPE       DEFAULT                                              DESCRIPTION\nenableRuntime              boolean    true                                                 Whether to inject runtime code into html templates\nrootFontSize               number     50                                                   The root element font size\nmaxRootFontSize            number     64                                                   The root element max font size\nwidthQueryKey              string     ''                                                   Get clientWidth from the url query based on\n                                                                                           widthQueryKey（The default is to get it from the Document of\n                                                                                           the current page）\nscreenWidth                number     375                                                  The screen width（Usually, fontSize = (clientWidth *\n                                                                                           rootFontSize) / screenWidth）\nexcludeEntries             string[]   []                                                   The entries to ignore\nsupportLandscape           boolean    false                                                Use height to calculate rem in landscape\nuseRootFontSizeBeyondMax   boolean    false                                                Whether to use rootFontSize when large than maxRootFontSize\npxtorem                    object      * rootValue (Default is the same as rootFontSize)   postcss-pxtorem options\n                                       * unitPrecision: 5\n                                       * propList: ['*']\n\n# Example\n\nexport default {\n  output: {\n    convertToRem: {\n      rootFontSize: 30,\n      excludeEntries: ['404', 'page2'],\n      pxtorem: {\n        propList: ['font-size'],\n      },\n    },\n  },\n};\n\n\n\n# output.copy\n\n * Type: CopyPluginOptions | CopyPluginOptions['patterns']\n * Default: undefined\n\nCopies the specified file or directory to the dist directory.\n\nFor example, copy the files under src/assets to the dist directory:\n\nexport default {\n  output: {\n    copy: [{ from: './src/assets', to: '' }],\n  },\n};\n\n\nFor more detailed configuration, please refer to: copy-webpack-plugin.\n\n\n# output.dataUriLimit\n\n * Type\n\ntype DataUriLimitConfig = {\n  svg?: number;\n  font?: number;\n  image?: number;\n  media?: number;\n};\n\n\n * Default\n\nconst defaultDatUriLimit = {\n  svg: 10000,\n  font: 10000,\n  image: 10000,\n  media: 10000,\n};\n\n\nSet the size threshold to inline static resources such as images and fonts.\n\nBy default, static resources will be Base64 encoded and inline into the page if the size is less than 10KB.\n\nYou can adjust the threshold by setting the dataUriLimit config.\n\nDetail:\n\n * svg: The threshold of the SVG image.\n * font: The threshold of the font file.\n * image: The threshold of non-SVG images.\n * media: The threshold of media resources such as videos.\n\n# Example\n\nSet the threshold of images to 5000, and set video resources not to be inlined:\n\nexport default {\n  output: {\n    dataUriLimit: {\n      image: 5000,\n      media: Infinite,\n    },\n  },\n};\n\n\n\n# output.distPath\n\n * Type\n\ntype DistPathConfig = {\n  root?: string;\n  js?: string;\n  css?: string;\n  svg?: string;\n  font?: string;\n  html?: string;\n  image?: string;\n  media?: string;\n  server?: string;\n};\n\n\n * Default\n\nconst defaultDistPath = {\n  root: 'dist',\n  html: 'html',\n  js: 'static/js',\n  css: 'static/css',\n  svg: 'static/svg',\n  font: 'static/font',\n  image: 'static/image',\n  media: 'static/media',\n  server: 'bundles',\n};\n\n\nSet the directory of the dist files. Builder will output files to the corresponding subdirectory according to the file type.\n\nDetail:\n\n * root: The root directory of all files.\n * html: The output directory of HTML files.\n * js: The output directory of JavaScript files.\n * css: The output directory of CSS style files.\n * svg: The output directory of SVG images.\n * font: The output directory of font files.\n * image: The output directory of non-SVG images.\n * media: The output directory of media resources, such as videos.\n * server: The output directory of server bundles when target is node.\n\n# Example\n\nThe JavaScript files will be output to the distPath.root + distPath.js directory, which is dist/static/js.\n\nIf you need to output JavaScript files to the build/resource/js directory, you can add following config:\n\nexport default {\n  output: {\n    distPath: {\n      root: 'build',\n      js: 'resource/js',\n    },\n  },\n};\n\n\n\n# output.disableMinimize\n\n * Type: boolean\n * Default: false\n\nWhether to disable code minification in production build.\n\nBy default, JS code and CSS code are minified during production build. If you do not want to minify the code, you can set disableMinimize to true.\n\nexport default {\n  output: {\n    disableMinimize: true,\n  },\n};\n\n\n\n# output.disableSourceMap\n\n * Type: boolean\n * Default: false\n\nBy default, Builder generates the SourceMap of JS and CSS files during production building for debugging and troubleshooting online issues.\n\nIf the project does not need SourceMap in the production environment, you can turned off it to speed up the build speed.\n\nexport default {\n  output: {\n    disableSourceMap: true,\n  },\n};\n\n\n\n# output.disableFilenameHash\n\n * Type: boolean\n * Default: false\n\nRemove the hash from the name of static files after production build.\n\nAfter the production build, there will be a hash in the middle of the filename by default. You can disable this behavior through the output.disableFilenameHash config.\n\n# Example\n\nBy default, the filename is:\n\nFile                                     Size         Gzipped\ndist/static/css/187.7879e19d.css         126.99 KB    9.17 KB\ndist/static/js/main.18a568e5.js          2.24 KB      922 B\n\n\nAdd output.disableFilenameHash config:\n\nexport default {\n  output: {\n    disableFilenameHash: true,\n  },\n};\n\n\nAfter rebuild, the filenames become:\n\nFile                            Size         Gzipped\ndist/static/css/187.css         126.99 KB    9.17 KB\ndist/static/js/main.js          2.24 KB      922 B\n\n\n\n# output.disableInlineRuntimeChunk\n\n * Type: boolean\n * Default: false\n\nBy default the runtimeChunk file will be inlined into html rather than written into dist directory.\n\nThis option is used to disable that default behaviour.\n\nexport default {\n  output: {\n    disableInlineRuntimeChunk: true,\n  },\n};\n\n\n\n# output.enableAssetManifest\n\n * Type: boolean\n * Default: false\n\nWhether to generate a manifest file that contains information of all assets.\n\n# Example\n\nEnable asset manifest:\n\nexport default {\n  output: {\n    enableAssetManifest: true,\n  },\n};\n\n\nAfter compiler, there will be a dist/manifest.json file:\n\n{\n  \"files\": {\n    \"main.css\": \"/static/css/main.45b01211.css\",\n    \"main.js\": \"/static/js/main.52fd298f.js\",\n    \"html/main/index.html\": \"/html/main/index.html\"\n  },\n  \"entrypoints\": [\"static/css/main.45b01211.css\", \"static/js/main.52fd298f.js\"]\n}\n\n\n\n# output.enableAssetFallback\n\n * Type: boolean\n * Default: false\n\nIf this option is enabled, all unrecognized files will be emitted to the dist directory; otherwise, an exception will be thrown.\n\n# Example\n\nexport default {\n  output: {\n    enableAssetFallback: true,\n  },\n};\n\n\nNote: Enabling this config will change the rules structure in the webpack config. In most cases, we do not recommend using this config.\n\n\n# output.enableLatestDecorators\n\n * Type: boolean\n * Default: false\n\nBy default, Builder uses the legacy decorator proposal when compiling decorators.\n\nWhen output.enableLatestDecorators is set to true, the Builder will compile with the new decorator proposal (version 2018-09).\n\nexport default {\n  output: {\n    enableLatestDecorators: true,\n  },\n};\n\n\n\n# output.enableCssModuleTSDeclaration\n\n * Type: boolean\n * Default: false\n\nWhether to generate a TypeScript declaration file for CSS modules.\n\n# Example\n\nEnable CSS module TypeScript declaration:\n\nexport default {\n  output: {\n    enableCssModuleTSDeclaration: true,\n  },\n};\n\n\nAfter building, there will be a .d.ts file for each CSS module file. For example\n\ninterface CssExports {\n  title: string;\n}\nexport const cssExports: CssExports;\nexport default cssExports;\n\n\n\n# output.enableInlineScripts\n\n * Type: boolean\n * Default: false\n\nWhether to inline output scripts files (.js files) into html with <script> tags.\n\nNote that, with this option on, the scripts files will no longer be written in dist directory, they will only exist inside the html file instead.\n\n# Example\n\nBy default, we have following output files:\n\ndist/html/main/index.html\ndist/static/css/style.css\ndist/static/js/main.js\n\n\nAfter turn on the output.enableInlineScripts option:\n\nexport default {\n  output: {\n    enableInlineScripts: true,\n  },\n};\n\n\nThe output files will become:\n\ndist/html/main/index.html\ndist/static/css/style.css\n\n\nAnd dist/static/js/main.js will be inlined in index.html:\n\n<html>\n  <body>\n    <script>\n      // content of dist/static/js/main.js\n    <\/script>\n  </body>\n</html>\n\n\n\n# output.enableInlineStyles\n\n * Type: boolean\n * Default: false\n\nWhether to inline output style files (.css files) into html with <style> tags.\n\nNote that, with this option on, the style files will no longer be written in dist directory, they will only exist inside the html file instead.\n\n# Example\n\nBy default, we have following output files:\n\ndist/html/main/index.html\ndist/static/css/style.css\ndist/static/js/main.js\n\n\nAfter turn on the output.enableInlineStyles option:\n\nexport default {\n  output: {\n    enableInlineStyles: true,\n  },\n};\n\n\nThe output files will become:\n\ndist/html/main/index.html\ndist/static/js/main.js\n\n\nAnd dist/static/css/style.css will be inlined in index.html:\n\n<html>\n  <head>\n    <style>\n      /* content of dist/static/css/style.css */\n    </style>\n  </head>\n  <body>\n  </body>\n</html>\n\n\n\n# output.externals\n\n * Type: string | object | function | RegExp\n\n * Default: undefined\n\nAt build time, prevent some import dependencies from being packed into bundles in your code, and instead fetch them externally at runtime.\n\nFor more information, please see: Webpack Externals\n\n# Example\n\nExclude the react-dom dependency from the build product. To get this module at runtime, the value of react-dom will globally retrieve the ReactDOM variable.\n\nexport default {\n  output: {\n    externals: {\n      'react-dom': 'ReactDOM',\n    },\n  },\n};\n\n\n\n# output.filename\n\n * Type\n\ntype FilenameConfig = {\n  js?: string;\n  css?: string;\n  svg?: string;\n  font?: string;\n  image?: string;\n  media?: string;\n};\n\n\n * Default\n\n// Development\nconst devDefaultFilename = {\n  js: '[name].js',\n  css: '[name].css',\n  svg: '[name].[contenthash:8].svg',\n  font: '[name].[contenthash:8][ext]',\n  image: '[name].[contenthash:8][ext]',\n  media: '[name].[contenthash:8][ext]',\n};\n\n// Production\nconst prodDefaultFilename = {\n  js: '[name].[contenthash:8].js',\n  css: '[name].[contenthash:8].css',\n  svg: '[name].[contenthash:8].svg',\n  font: '[name].[contenthash:8][ext]',\n  image: '[name].[contenthash:8][ext]',\n  media: '[name].[contenthash:8][ext]',\n};\n\n\nSets the filename of dist files.\n\nAfter the production build, there will be a hash in the middle of the filename by default. You can disable this behavior through the output.disableFilenameHash config.\n\nDetail:\n\n * js: The name of the JavaScript file.\n * css: The name of the CSS style file.\n * svg: The name of the SVG image.\n * font: The name of the font file.\n * image: The name of a non-SVG image.\n * media: The name of a media resource, such as a video.\n\n# Example\n\nSet the name of the JavaScript file to [name]_script.js:\n\nexport default {\n  output: {\n    filename: {\n      js:\n        process.env.NODE_ENV === 'production'\n          ? '[name]_script.[contenthash:8].js'\n          : '[name]_script.js',\n    },\n  },\n};\n\n\n\n# output.legalComments\n\n * Type : 'linked' | 'inline' | 'none'\n * Default: 'linked'\n\nConfigure how to handle the legal comment.\n\nA \"legal comment\" is considered to be any statement-level comment in JS or rule-level comment in CSS that contains @license or @preserve or that starts with //! or /*!. These comments are preserved in output files by default since that follows the intent of the original authors of the code.\n\nThis behavior can be configured by using one of the following options:\n\n * linked: Extract all legal comments to a .LEGAL.txt file and link to them with a comment.\n * inline: Preserve all legal comments in original position.\n * none: Remove all legal comments.\n\n# Example\n\nRemove all legal comments:\n\nexport default {\n  output: {\n    legalComments: 'none',\n  },\n};\n\n\n\n# output.overrideBrowserslist\n\n * Type: string[]\n * Default: undefined\n\nSpecifies the range of target browsers that the project is compatible with. This value will be used by @babel/preset-env and autoprefixer to identify the JavaScript syntax that need to be transformed and the CSS browser prefixes that need to be added.\n\n# Priority\n\nThe overrideBrowserslist config will override the .browserslistrc config file in the project and the browserslist field in package.json.\n\nIn most cases, it is recommended to use the .browserslistrc file rather than the overrideBrowserslist config. Because the .browserslistrc file is the official config file, it is more general and can be recognized by other libraries in the community.\n\n# Default Value\n\nIf there is no browserslist configs defined in the project, nor overrideBrowserslist defined, then Builder will set the default browserslist to:\n\n['> 0.01%', 'not dead', 'not op_mini all'];\n\n\n# Example\n\nAn example compatible with mobile scenarios:\n\nexport default {\n  output: {\n    overrideBrowserslist: [\n      'iOS 9',\n      'Android 4.4',\n      'last 2 versions',\n      '> 0.2%',\n      'not dead',\n    ],\n  },\n};\n\n\nCheck out the browserslist documentation to learn more about browserslist.\n\n\n# output.polyfill\n\n * Type: 'entry' | 'usage' | 'ua' | 'off'\n * Default: 'entry'\n\nVia output.polyfill you can configure how the polyfill is injected.\n\n\n# Config\n\n# entry\n\nPolyfill is injected in every entry file when output.polyfill is configured as 'entry'.\n\nEquivalent to useBuiltIns: 'entry' configuration in @babel/preset-env.\n\n# usage\n\nPolyfill is injected in each file based on the API used in the code.\n\nEquivalent to useBuiltIns: 'usage' configuration in @babel/preset-env.\n\n# ua\n\nThe Polyfill code is dynamically delivered according to the currently requested UA information.\n\n# off\n\nPolyfill is not injected. When using this option, you need to ensure code compatibility yourself.\n\n\n# output.svgDefaultExport\n\n * Type: url | component\n * Default: url\n\noutput.svgDefaultExport is used to configure the default export type of SVG files.\n\nWhen output.svgDefaultExport is set to url , the default export of SVG files is the URL of the file. For example:\n\nimport logo from './logo.svg';\n\nconsole.log(logo); // => resource url\n\n\nWhen output.svgDefaultExport is set to component , the default export of SVG files is the React component of the file. For example:\n\nimport Logo from './logo.svg';\n\nconsole.log(Logo); // => React Component\n\n\nAt this time, you can also specify the ?url query to import the URL, for example:\n\nimport logo from './logo.svg?url';\n\nconsole.log(logo); // => resource url\n",normalizedContent:"# output config\n\nthis section describes some output related configurations in modern.js builder.\n\n\n# output.assetprefix\n\n * type: boolean | string\n * default: '/'\n\nwhen using cdn in the production environment, you can use this option to set the url prefix of static resources, similar to the output.publicpath config of webpack.\n\nthis config is only used in the production environment. in the development environment, please use the dev.assetprefix to set the url prefix.\n\nafter setting, the urls of javascript, css and other static files will be prefixed with output.assetprefix:\n\n# example\n\nexport default {\n  output: {\n    assetprefix: 'https://cdn.example.com/assets/',\n  },\n};\n\n\nafter building, you can see that the js files are loaded from:\n\n<script\n  defer\n  src=\"https://cdn.example.com/assets/static/js/main.ebc4ff4f.js\"\n><\/script>\n\n\n\n# output.assetsretry\n\n * type: object\n\noutput.assetsretry is used to configure the retry of assets.the type of assetsretryoptions is as follows:\n\nexport type assetsretryhookcontext = {\n  times: number;\n  domain: string;\n  url: string;\n  tagname: string;\n};\n\nexport type assetsretryoptions = {\n  type?: string[];\n  domain?: string[];\n  max?: number;\n  test?: string | ((url: string) => boolean);\n  crossorigin?: boolean;\n  onretry?: (options: assetsretryhookcontext) => void;\n  onsuccess?: (options: assetsretryhookcontext) => void;\n  onfail?: (options: assetsretryhookcontext) => void;\n};\n\n\nthe default value is as follows:\n\nexport const defaultassetsretryoptions: assetsretryoptions = {\n  type: ['script', 'link', 'img'],\n  domain: [],\n  max: 3,\n  test: '',\n  crossorigin: false,\n  onretry: () => {},\n  onsuccess: () => {},\n  onfail: () => {},\n};\n\n\n\n# assetsretry.max\n\n * type: number\n * default: 3\n\nthe maximum number of retries for a single resource. for example:\n\nexport default {\n  output: {\n    assetsretry: {\n      max: 3,\n    },\n  },\n};\n\n\n\n# assetsretry.domain\n\n * type: string[]\n * default: []\n\nthe domain of the resource to be retried. for example:\n\nexport default {\n  output: {\n    assetsretry: {\n      domain: ['https://cdn1.example.com', 'https://cdn2.example.com'],\n    },\n  },\n};\n\n\n\n# assetsretry.type\n\n * type: string[]\n * default: ['script', 'link', 'img']\n\nthe type of the resource to be retried. for example:\n\nexport default {\n  output: {\n    assetsretry: {\n      type: ['script', 'link'],\n    },\n  },\n};\n\n\n\n# assetsretry.test\n\n * type: string | ((url: string) => boolean) | undefined\n * default: undefined\n\nthe test function of the resource to be retried. for example:\n\nexport default {\n  output: {\n    assetsretry: {\n      test: /cdn\\.example\\.com/,\n    },\n  },\n};\n\n\n\n# assetsretry.crossorigin\n\n * type: undefined | boolean\n * default: false\n\nwhether to add the crossorigin attribute to the resource to be retried. for example:\n\nexport default {\n  output: {\n    assetsretry: {\n      crossorigin: true,\n    },\n  },\n};\n\n\n\n# assetsretry.onretry\n\n * type: undefined | (options: assetsretryhookcontext) => void\n\nthe callback function when the resource is being retried. for example:\n\nexport default {\n  output: {\n    assetsretry: {\n      onretry: ({ times, domain, url, tagname }) => {\n        console.log(\n          `retry ${times} times, domain: ${domain}, url: ${url}, tagname: ${tagname}`,\n        );\n      },\n    },\n  },\n};\n\n\n\n# assetsretry.onsuccess\n\n * type: undefined | (options: assetsretryhookcontext) => void\n\nthe callback function when the resource is successfully retried. for example:\n\nexport default {\n  output: {\n    assetsretry: {\n      onsuccess: ({ times, domain, url, tagname }) => {\n        console.log(\n          `retry ${times} times, domain: ${domain}, url: ${url}, tagname: ${tagname}`,\n        );\n      },\n    },\n  },\n};\n\n\n\n# assetsretry.onfail\n\n * type: undefined | (options: assetsretryhookcontext) => void\n\nthe callback function when the resource is failed to be retried. for example:\n\nexport default {\n  output: {\n    assetsretry: {\n      onfail: ({ times, domain, url, tagname }) => {\n        console.log(\n          `retry ${times} times, domain: ${domain}, url: ${url}, tagname: ${tagname}`,\n        );\n      },\n    },\n  },\n};\n\n\n\n# output.charset\n\n * type: 'ascii' | 'utf8'\n * default: 'ascii'\n\nby default, builder's output is ascii-only and will escape all non-ascii characters.\n\nif you want to output the original characters without using escape sequences, you can set output.charset to utf8.\n\nexport default {\n  output: {\n    charset: 'utf8',\n  },\n};\n\n\nbuilder will automatically add <meta charset=\"utf-8\"> to the generated html files if output.charset is utf8.\n\n\n# output.cleandistpath\n\n * type: boolean\n * default: true\n\nwhether to clean all files in the dist path before starting compilation.\n\nby default, builder clean up the dist file, you can disable this behavior by setting cleandistpath to false.\n\nexport default {\n  output: {\n    cleandistpath: false,\n  },\n};\n\n\n\n# output.converttorem\n\n * type: boolean | object\n * default: false\n\nby setting output.converttorem, the builder can do the following things:\n\n * convert px to rem in css\n * insert runtime code into the html template to set the fontsize of the root element\n\n# boolean type\n\nif output.converttorem is set to true, rem processing capability will be turned on.\n\nexport default {\n  output: {\n    converttorem: true,\n  },\n};\n\n\nat this point, the rem configuration defaults as follows:\n\n{\n  enableruntime: true,\n  rootfontsize: 50,\n  screenwidth: 375,\n  rootfontsize: 50,\n  maxrootfontsize: 64,\n  widthquerykey: '',\n  excludeentries: [],\n  supportlandscape: false,\n  userootfontsizebeyondmax: false,\n  pxtorem: {\n    rootvalue: 50,\n    unitprecision: 5,\n    proplist: ['*'],\n  }\n}\n\n\n# object type\n\nwhen the value of output.converttorem is object type, the builder will perform rem processing based on the current configuration.\n\noptions:\n\nname                       type       default                                              description\nenableruntime              boolean    true                                                 whether to inject runtime code into html templates\nrootfontsize               number     50                                                   the root element font size\nmaxrootfontsize            number     64                                                   the root element max font size\nwidthquerykey              string     ''                                                   get clientwidth from the url query based on\n                                                                                           widthquerykey（the default is to get it from the document of\n                                                                                           the current page）\nscreenwidth                number     375                                                  the screen width（usually, fontsize = (clientwidth *\n                                                                                           rootfontsize) / screenwidth）\nexcludeentries             string[]   []                                                   the entries to ignore\nsupportlandscape           boolean    false                                                use height to calculate rem in landscape\nuserootfontsizebeyondmax   boolean    false                                                whether to use rootfontsize when large than maxrootfontsize\npxtorem                    object      * rootvalue (default is the same as rootfontsize)   postcss-pxtorem options\n                                       * unitprecision: 5\n                                       * proplist: ['*']\n\n# example\n\nexport default {\n  output: {\n    converttorem: {\n      rootfontsize: 30,\n      excludeentries: ['404', 'page2'],\n      pxtorem: {\n        proplist: ['font-size'],\n      },\n    },\n  },\n};\n\n\n\n# output.copy\n\n * type: copypluginoptions | copypluginoptions['patterns']\n * default: undefined\n\ncopies the specified file or directory to the dist directory.\n\nfor example, copy the files under src/assets to the dist directory:\n\nexport default {\n  output: {\n    copy: [{ from: './src/assets', to: '' }],\n  },\n};\n\n\nfor more detailed configuration, please refer to: copy-webpack-plugin.\n\n\n# output.dataurilimit\n\n * type\n\ntype dataurilimitconfig = {\n  svg?: number;\n  font?: number;\n  image?: number;\n  media?: number;\n};\n\n\n * default\n\nconst defaultdaturilimit = {\n  svg: 10000,\n  font: 10000,\n  image: 10000,\n  media: 10000,\n};\n\n\nset the size threshold to inline static resources such as images and fonts.\n\nby default, static resources will be base64 encoded and inline into the page if the size is less than 10kb.\n\nyou can adjust the threshold by setting the dataurilimit config.\n\ndetail:\n\n * svg: the threshold of the svg image.\n * font: the threshold of the font file.\n * image: the threshold of non-svg images.\n * media: the threshold of media resources such as videos.\n\n# example\n\nset the threshold of images to 5000, and set video resources not to be inlined:\n\nexport default {\n  output: {\n    dataurilimit: {\n      image: 5000,\n      media: infinite,\n    },\n  },\n};\n\n\n\n# output.distpath\n\n * type\n\ntype distpathconfig = {\n  root?: string;\n  js?: string;\n  css?: string;\n  svg?: string;\n  font?: string;\n  html?: string;\n  image?: string;\n  media?: string;\n  server?: string;\n};\n\n\n * default\n\nconst defaultdistpath = {\n  root: 'dist',\n  html: 'html',\n  js: 'static/js',\n  css: 'static/css',\n  svg: 'static/svg',\n  font: 'static/font',\n  image: 'static/image',\n  media: 'static/media',\n  server: 'bundles',\n};\n\n\nset the directory of the dist files. builder will output files to the corresponding subdirectory according to the file type.\n\ndetail:\n\n * root: the root directory of all files.\n * html: the output directory of html files.\n * js: the output directory of javascript files.\n * css: the output directory of css style files.\n * svg: the output directory of svg images.\n * font: the output directory of font files.\n * image: the output directory of non-svg images.\n * media: the output directory of media resources, such as videos.\n * server: the output directory of server bundles when target is node.\n\n# example\n\nthe javascript files will be output to the distpath.root + distpath.js directory, which is dist/static/js.\n\nif you need to output javascript files to the build/resource/js directory, you can add following config:\n\nexport default {\n  output: {\n    distpath: {\n      root: 'build',\n      js: 'resource/js',\n    },\n  },\n};\n\n\n\n# output.disableminimize\n\n * type: boolean\n * default: false\n\nwhether to disable code minification in production build.\n\nby default, js code and css code are minified during production build. if you do not want to minify the code, you can set disableminimize to true.\n\nexport default {\n  output: {\n    disableminimize: true,\n  },\n};\n\n\n\n# output.disablesourcemap\n\n * type: boolean\n * default: false\n\nby default, builder generates the sourcemap of js and css files during production building for debugging and troubleshooting online issues.\n\nif the project does not need sourcemap in the production environment, you can turned off it to speed up the build speed.\n\nexport default {\n  output: {\n    disablesourcemap: true,\n  },\n};\n\n\n\n# output.disablefilenamehash\n\n * type: boolean\n * default: false\n\nremove the hash from the name of static files after production build.\n\nafter the production build, there will be a hash in the middle of the filename by default. you can disable this behavior through the output.disablefilenamehash config.\n\n# example\n\nby default, the filename is:\n\nfile                                     size         gzipped\ndist/static/css/187.7879e19d.css         126.99 kb    9.17 kb\ndist/static/js/main.18a568e5.js          2.24 kb      922 b\n\n\nadd output.disablefilenamehash config:\n\nexport default {\n  output: {\n    disablefilenamehash: true,\n  },\n};\n\n\nafter rebuild, the filenames become:\n\nfile                            size         gzipped\ndist/static/css/187.css         126.99 kb    9.17 kb\ndist/static/js/main.js          2.24 kb      922 b\n\n\n\n# output.disableinlineruntimechunk\n\n * type: boolean\n * default: false\n\nby default the runtimechunk file will be inlined into html rather than written into dist directory.\n\nthis option is used to disable that default behaviour.\n\nexport default {\n  output: {\n    disableinlineruntimechunk: true,\n  },\n};\n\n\n\n# output.enableassetmanifest\n\n * type: boolean\n * default: false\n\nwhether to generate a manifest file that contains information of all assets.\n\n# example\n\nenable asset manifest:\n\nexport default {\n  output: {\n    enableassetmanifest: true,\n  },\n};\n\n\nafter compiler, there will be a dist/manifest.json file:\n\n{\n  \"files\": {\n    \"main.css\": \"/static/css/main.45b01211.css\",\n    \"main.js\": \"/static/js/main.52fd298f.js\",\n    \"html/main/index.html\": \"/html/main/index.html\"\n  },\n  \"entrypoints\": [\"static/css/main.45b01211.css\", \"static/js/main.52fd298f.js\"]\n}\n\n\n\n# output.enableassetfallback\n\n * type: boolean\n * default: false\n\nif this option is enabled, all unrecognized files will be emitted to the dist directory; otherwise, an exception will be thrown.\n\n# example\n\nexport default {\n  output: {\n    enableassetfallback: true,\n  },\n};\n\n\nnote: enabling this config will change the rules structure in the webpack config. in most cases, we do not recommend using this config.\n\n\n# output.enablelatestdecorators\n\n * type: boolean\n * default: false\n\nby default, builder uses the legacy decorator proposal when compiling decorators.\n\nwhen output.enablelatestdecorators is set to true, the builder will compile with the new decorator proposal (version 2018-09).\n\nexport default {\n  output: {\n    enablelatestdecorators: true,\n  },\n};\n\n\n\n# output.enablecssmoduletsdeclaration\n\n * type: boolean\n * default: false\n\nwhether to generate a typescript declaration file for css modules.\n\n# example\n\nenable css module typescript declaration:\n\nexport default {\n  output: {\n    enablecssmoduletsdeclaration: true,\n  },\n};\n\n\nafter building, there will be a .d.ts file for each css module file. for example\n\ninterface cssexports {\n  title: string;\n}\nexport const cssexports: cssexports;\nexport default cssexports;\n\n\n\n# output.enableinlinescripts\n\n * type: boolean\n * default: false\n\nwhether to inline output scripts files (.js files) into html with <script> tags.\n\nnote that, with this option on, the scripts files will no longer be written in dist directory, they will only exist inside the html file instead.\n\n# example\n\nby default, we have following output files:\n\ndist/html/main/index.html\ndist/static/css/style.css\ndist/static/js/main.js\n\n\nafter turn on the output.enableinlinescripts option:\n\nexport default {\n  output: {\n    enableinlinescripts: true,\n  },\n};\n\n\nthe output files will become:\n\ndist/html/main/index.html\ndist/static/css/style.css\n\n\nand dist/static/js/main.js will be inlined in index.html:\n\n<html>\n  <body>\n    <script>\n      // content of dist/static/js/main.js\n    <\/script>\n  </body>\n</html>\n\n\n\n# output.enableinlinestyles\n\n * type: boolean\n * default: false\n\nwhether to inline output style files (.css files) into html with <style> tags.\n\nnote that, with this option on, the style files will no longer be written in dist directory, they will only exist inside the html file instead.\n\n# example\n\nby default, we have following output files:\n\ndist/html/main/index.html\ndist/static/css/style.css\ndist/static/js/main.js\n\n\nafter turn on the output.enableinlinestyles option:\n\nexport default {\n  output: {\n    enableinlinestyles: true,\n  },\n};\n\n\nthe output files will become:\n\ndist/html/main/index.html\ndist/static/js/main.js\n\n\nand dist/static/css/style.css will be inlined in index.html:\n\n<html>\n  <head>\n    <style>\n      /* content of dist/static/css/style.css */\n    </style>\n  </head>\n  <body>\n  </body>\n</html>\n\n\n\n# output.externals\n\n * type: string | object | function | regexp\n\n * default: undefined\n\nat build time, prevent some import dependencies from being packed into bundles in your code, and instead fetch them externally at runtime.\n\nfor more information, please see: webpack externals\n\n# example\n\nexclude the react-dom dependency from the build product. to get this module at runtime, the value of react-dom will globally retrieve the reactdom variable.\n\nexport default {\n  output: {\n    externals: {\n      'react-dom': 'reactdom',\n    },\n  },\n};\n\n\n\n# output.filename\n\n * type\n\ntype filenameconfig = {\n  js?: string;\n  css?: string;\n  svg?: string;\n  font?: string;\n  image?: string;\n  media?: string;\n};\n\n\n * default\n\n// development\nconst devdefaultfilename = {\n  js: '[name].js',\n  css: '[name].css',\n  svg: '[name].[contenthash:8].svg',\n  font: '[name].[contenthash:8][ext]',\n  image: '[name].[contenthash:8][ext]',\n  media: '[name].[contenthash:8][ext]',\n};\n\n// production\nconst proddefaultfilename = {\n  js: '[name].[contenthash:8].js',\n  css: '[name].[contenthash:8].css',\n  svg: '[name].[contenthash:8].svg',\n  font: '[name].[contenthash:8][ext]',\n  image: '[name].[contenthash:8][ext]',\n  media: '[name].[contenthash:8][ext]',\n};\n\n\nsets the filename of dist files.\n\nafter the production build, there will be a hash in the middle of the filename by default. you can disable this behavior through the output.disablefilenamehash config.\n\ndetail:\n\n * js: the name of the javascript file.\n * css: the name of the css style file.\n * svg: the name of the svg image.\n * font: the name of the font file.\n * image: the name of a non-svg image.\n * media: the name of a media resource, such as a video.\n\n# example\n\nset the name of the javascript file to [name]_script.js:\n\nexport default {\n  output: {\n    filename: {\n      js:\n        process.env.node_env === 'production'\n          ? '[name]_script.[contenthash:8].js'\n          : '[name]_script.js',\n    },\n  },\n};\n\n\n\n# output.legalcomments\n\n * type : 'linked' | 'inline' | 'none'\n * default: 'linked'\n\nconfigure how to handle the legal comment.\n\na \"legal comment\" is considered to be any statement-level comment in js or rule-level comment in css that contains @license or @preserve or that starts with //! or /*!. these comments are preserved in output files by default since that follows the intent of the original authors of the code.\n\nthis behavior can be configured by using one of the following options:\n\n * linked: extract all legal comments to a .legal.txt file and link to them with a comment.\n * inline: preserve all legal comments in original position.\n * none: remove all legal comments.\n\n# example\n\nremove all legal comments:\n\nexport default {\n  output: {\n    legalcomments: 'none',\n  },\n};\n\n\n\n# output.overridebrowserslist\n\n * type: string[]\n * default: undefined\n\nspecifies the range of target browsers that the project is compatible with. this value will be used by @babel/preset-env and autoprefixer to identify the javascript syntax that need to be transformed and the css browser prefixes that need to be added.\n\n# priority\n\nthe overridebrowserslist config will override the .browserslistrc config file in the project and the browserslist field in package.json.\n\nin most cases, it is recommended to use the .browserslistrc file rather than the overridebrowserslist config. because the .browserslistrc file is the official config file, it is more general and can be recognized by other libraries in the community.\n\n# default value\n\nif there is no browserslist configs defined in the project, nor overridebrowserslist defined, then builder will set the default browserslist to:\n\n['> 0.01%', 'not dead', 'not op_mini all'];\n\n\n# example\n\nan example compatible with mobile scenarios:\n\nexport default {\n  output: {\n    overridebrowserslist: [\n      'ios 9',\n      'android 4.4',\n      'last 2 versions',\n      '> 0.2%',\n      'not dead',\n    ],\n  },\n};\n\n\ncheck out the browserslist documentation to learn more about browserslist.\n\n\n# output.polyfill\n\n * type: 'entry' | 'usage' | 'ua' | 'off'\n * default: 'entry'\n\nvia output.polyfill you can configure how the polyfill is injected.\n\n\n# config\n\n# entry\n\npolyfill is injected in every entry file when output.polyfill is configured as 'entry'.\n\nequivalent to usebuiltins: 'entry' configuration in @babel/preset-env.\n\n# usage\n\npolyfill is injected in each file based on the api used in the code.\n\nequivalent to usebuiltins: 'usage' configuration in @babel/preset-env.\n\n# ua\n\nthe polyfill code is dynamically delivered according to the currently requested ua information.\n\n# off\n\npolyfill is not injected. when using this option, you need to ensure code compatibility yourself.\n\n\n# output.svgdefaultexport\n\n * type: url | component\n * default: url\n\noutput.svgdefaultexport is used to configure the default export type of svg files.\n\nwhen output.svgdefaultexport is set to url , the default export of svg files is the url of the file. for example:\n\nimport logo from './logo.svg';\n\nconsole.log(logo); // => resource url\n\n\nwhen output.svgdefaultexport is set to component , the default export of svg files is the react component of the file. for example:\n\nimport logo from './logo.svg';\n\nconsole.log(logo); // => react component\n\n\nat this time, you can also specify the ?url query to import the url, for example:\n\nimport logo from './logo.svg?url';\n\nconsole.log(logo); // => resource url\n",charsets:{cjk:!0}},{title:"Performance Config",frontmatter:{extractApiHeaders:[2]},regularPath:"/en/api/config-performance.html",relativePath:"en/api/config-performance.md",key:"v-a85495a8",path:"/en/api/config-performance.html",headers:[{level:2,title:"performance.buildCache",slug:"performance-buildcache",normalizedTitle:"performance.buildcache",charIndex:111},{level:2,title:"performance.bundleAnalyze",slug:"performance-bundleanalyze",normalizedTitle:"performance.bundleanalyze",charIndex:972},{level:2,title:"performance.chunkSplit",slug:"performance-chunksplit",normalizedTitle:"performance.chunksplit",charIndex:1682},{level:3,title:"chunkSplit.strategy",slug:"chunksplit-strategy",normalizedTitle:"chunksplit.strategy",charIndex:2425},{level:3,title:"chunkSplit.minSize",slug:"chunksplit-minsize",normalizedTitle:"chunksplit.minsize",charIndex:3325},{level:3,title:"chunkSplit.maxSize",slug:"chunksplit-maxsize",normalizedTitle:"chunksplit.maxsize",charIndex:3703},{level:3,title:"chunkSplit.forceSplitting",slug:"chunksplit-forcesplitting",normalizedTitle:"chunksplit.forcesplitting",charIndex:4087},{level:3,title:"chunkSplit.splitChunks",slug:"chunksplit-splitchunks",normalizedTitle:"chunksplit.splitchunks",charIndex:4472},{level:3,title:"chunkSplit.override",slug:"chunksplit-override",normalizedTitle:"chunksplit.override",charIndex:5079},{level:2,title:"performance.profile",slug:"performance-profile",normalizedTitle:"performance.profile",charIndex:5750},{level:4,title:"Example",slug:"example",normalizedTitle:"example",charIndex:5902},{level:2,title:"performance.removeConsole",slug:"performance-removeconsole",normalizedTitle:"performance.removeconsole",charIndex:6130},{level:4,title:"Remove all consoles",slug:"remove-all-consoles",normalizedTitle:"remove all consoles",charIndex:6262},{level:4,title:"Remove specific console",slug:"remove-specific-console",normalizedTitle:"remove specific console",charIndex:6427},{level:2,title:"performance.removeMomentLocale",slug:"performance-removemomentlocale",normalizedTitle:"performance.removemomentlocale",charIndex:6772}],lastUpdated:"10/13/2022, 3:49:10 AM",lastUpdatedTimestamp:166563295e4,headersStr:"performance.buildCache performance.bundleAnalyze performance.chunkSplit chunkSplit.strategy chunkSplit.minSize chunkSplit.maxSize chunkSplit.forceSplitting chunkSplit.splitChunks chunkSplit.override performance.profile Example performance.removeConsole Remove all consoles Remove specific console performance.removeMomentLocale",content:"# Performance Config\n\nThis section describes some performance related configurations in Modern.js Builder.\n\n\n# performance.buildCache\n\n * Type\n\ntype BuildCacheConfig =\n  | {\n      /**\n       * webpack base directory for the filesystem cache.\n       */\n      cacheDirectory?: string;\n    }\n  | boolean;\n\n\n * Default:\n\nconst defaultBuildCacheConfig = {\n  cacheDirectory: './node_modules/.cache/webapck',\n};\n\n\nCache the modules and chunks generated during webpack packaging to improve build speed.\n\nBy default, Builder turns on caching, using the directory . /node_modules/.cache/webpack as the cache directory for packaging.\n\nYou can configure the cache path with buildCache, e.g.\n\nexport default {\n  performance: {\n    buildCache: {\n      cacheDirectory: './node_modules/.custom_cache/webpack',\n    },\n  },\n};\n\n\nYou can also disable buildCache by setting it to false if you don't want it to be cached:\n\nexport default {\n  performance: {\n    buildCache: false,\n  },\n};\n\n\n\n# performance.bundleAnalyze\n\n * Type: Object | undefined\n\nYou have two ways to enable webpack-bundle-analyzer to analyze webpack output:\n\n * Add environment variable BUNDLE_ANALYZE=true.\n * Add performance.bundleAnalyze config.\n\nBy default, webpack-bundle-analyzer is not enabled. When enabled, its configuration is as follows:\n\n{\n  analyzerMode: 'static',\n  openAnalyzer: false,\n  // `target` is the compilation target, such as `web`, `node`, etc.\n  reportFilename: `report-${target}.html`,\n}\n\n\nYou can override the default config through performance.bundleAnalyze, for example:\n\nexport default {\n  performance: {\n    bundleAnalyze: {\n      analyzerMode: 'server',\n      openAnalyzer: true,\n    },\n  },\n};\n\n\n\n# performance.chunkSplit\n\n * Type: Object\n * Default: { strategy: 'split-by-experience' }\n\nperformance.chunkSplit is used to configure the chunk splitting strategy. The type of ChunkSplit is as follows:\n\ninterface BaseChunkSplit {\n  strategy?:\n    | 'split-by-module'\n    | 'split-by-experience'\n    | 'all-in-one'\n    | 'single-vendor';\n  override?: SplitChunks;\n  forceSplitting?: Array<RegExp>;\n}\n\ninterface SplitBySize {\n  strategy?: 'split-by-size';\n  minSize?: number;\n  maxSize?: number;\n  override?: SplitChunks;\n  forceSplitting?: Array<RegExp>;\n}\n\ninterface SplitCustom {\n  strategy?: 'custom';\n  splitChunks?: SplitChunks;\n  forceSplitting?: Array<RegExp>;\n}\n\nexport type ChunkSplit = BaseChunkSplit | SplitBySize | SplitCustom;\n\n\n\n# chunkSplit.strategy\n\nBuilder provides the following chunk splitting strategies:\n\n * split-by-experience: split by experience, the default strategy\n * split-by-module: split a chunk per npm package\n * split-by-size: split by chunk size\n * all-in-one: all code is bundled into a single chunk\n * single-vendor: The code in node_modules is bundled into a single chunk\n * custom: custom chunk splitting strategy\n\nBuilder use split-by-experience strategy by default, in which the following npm package group will be split into a single chunk:\n\n * react and react-dom\n * react-router、history and react-router-dom\n * antd component library\n * semi component library\n * arco component library\n * @babel/runtime (including @babel/runtime-corejs2、 @babel/runtime-corejs3)\n * lodash、lodash-es\n * core-js\n\nIf you want to use other splitting strategies, you can specify it via performance.chunkSplit.strategy.\n\n\n# chunkSplit.minSize\n\n * Type: number\n * Default: 10000\n\nWhen performance.chunkSplit.strategy is split-by-size, you can specify the minimum size of a chunk via performance.chunkSplit.minSize, the unit is bytes. The default value is 10000. For example:\n\nexport default {\n  performance: {\n    chunkSplit: {\n      strategy: 'split-by-size',\n      minSize: 20000,\n    },\n  },\n};\n\n\n\n# chunkSplit.maxSize\n\n * Type: number\n * Default: Infinity\n\nWhen performance.chunkSplit.strategy is split-by-size, you can specify the maximum size of a chunk via performance.chunkSplit.maxSize, the unit is bytes. The default value is Infinity. For example:\n\nexport default {\n  performance: {\n    chunkSplit: {\n      strategy: 'split-by-size',\n      maxSize: 50000,\n    },\n  },\n};\n\n\n\n# chunkSplit.forceSplitting\n\n * Type: Array<RegExp>\n * Default: []\n\nVia performance.chunkSplit.forceSplitting, you can specify the NPM packages that need to be forced to split. For example:\n\nexport default {\n  performance: {\n    chunkSplit: {\n      forceSplitting: [/^@arco-design\\/web-react/],\n    },\n  },\n};\n\n\nThis is an easier way than configuring Webpack's splitChunks directly.\n\n\n# chunkSplit.splitChunks\n\nWhen performance.chunkSplit.strategy is custom, you can specify the custom webpack chunk splitting config via performance.chunkSplit.splitChunks. This config will be merged with the webpack splitChunks config (the cacheGroups config will also be merged). For example:\n\nexport default {\n  performance: {\n    chunkSplit: {\n      strategy: 'custom',\n      splitChunks: {\n        cacheGroups: {\n          react: {\n            test: /[\\\\/]node_modules[\\\\/](react|react-dom)[\\\\/]/,\n            name: 'react',\n            chunks: 'all',\n          },\n        },\n      },\n    },\n  },\n};\n\n\n\n# chunkSplit.override\n\nWhen performance.chunkSplit.strategy is split-by-experience, split-by-module, split-by-size or single-vendor, you can specify the custom webpack chunk splitting config via performance.chunkSplit.override. This config will be merged with the webpack splitChunks config (the cacheGroups config will also be merged). For example:\n\nexport default {\n  performance: {\n    strategy: 'split-by-experience',\n    chunkSplit: {\n      override: {\n        cacheGroups: {\n          react: {\n            test: /[\\\\/]node_modules[\\\\/](react|react-dom)[\\\\/]/,\n            name: 'react',\n            chunks: 'all',\n          },\n        },\n      },\n    },\n  },\n};\n\n\n\n# performance.profile\n\n * Type: boolean\n\n * Default: false\n\nWhether capture timing information for each module, same as the profile config of Webpack.\n\n# Example\n\nexport default {\n  performance: {\n    profile: true,\n  },\n};\n\n\nWhen turned on, webpack generates a JSON file with some statistics about the module that includes information about timing information for each module.\n\n\n# performance.removeConsole\n\n * Type: boolean | ConsoleType[]\n * Default: false\n\nWhether to remove console.xx in production build.\n\n# Remove all consoles\n\nWhen removeConsole is set to true, all types of console.xx are removed:\n\nexport default {\n  performance: {\n    removeConsole: true,\n  },\n};\n\n\n# Remove specific console\n\nYou can also specify to remove only certain types of console.xx, such as console.log and console.warn:\n\nexport default {\n  performance: {\n    removeConsole: ['log', 'warn'],\n  },\n};\n\n\nThe following types of console are currently supported:\n\ntype ConsoleType = 'log' | 'info' | 'warn' | 'error' | 'table' | 'group';\n\n\n\n# performance.removeMomentLocale\n\n * Type: boolean\n * Default: false\n\nmoment.js contains a lot of locales by default, which will increase the bundle size.\n\nWhen moment.js is used in the project, it is recommended to enable this option to automatically exclude all locales:\n\nexport default {\n  performance: {\n    removeMomentLocale: true,\n  },\n};\n\n\nOnce enabled, you can load a specific locale via:\n\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\n\nmoment.locale('zh-cn');\n",normalizedContent:"# performance config\n\nthis section describes some performance related configurations in modern.js builder.\n\n\n# performance.buildcache\n\n * type\n\ntype buildcacheconfig =\n  | {\n      /**\n       * webpack base directory for the filesystem cache.\n       */\n      cachedirectory?: string;\n    }\n  | boolean;\n\n\n * default:\n\nconst defaultbuildcacheconfig = {\n  cachedirectory: './node_modules/.cache/webapck',\n};\n\n\ncache the modules and chunks generated during webpack packaging to improve build speed.\n\nby default, builder turns on caching, using the directory . /node_modules/.cache/webpack as the cache directory for packaging.\n\nyou can configure the cache path with buildcache, e.g.\n\nexport default {\n  performance: {\n    buildcache: {\n      cachedirectory: './node_modules/.custom_cache/webpack',\n    },\n  },\n};\n\n\nyou can also disable buildcache by setting it to false if you don't want it to be cached:\n\nexport default {\n  performance: {\n    buildcache: false,\n  },\n};\n\n\n\n# performance.bundleanalyze\n\n * type: object | undefined\n\nyou have two ways to enable webpack-bundle-analyzer to analyze webpack output:\n\n * add environment variable bundle_analyze=true.\n * add performance.bundleanalyze config.\n\nby default, webpack-bundle-analyzer is not enabled. when enabled, its configuration is as follows:\n\n{\n  analyzermode: 'static',\n  openanalyzer: false,\n  // `target` is the compilation target, such as `web`, `node`, etc.\n  reportfilename: `report-${target}.html`,\n}\n\n\nyou can override the default config through performance.bundleanalyze, for example:\n\nexport default {\n  performance: {\n    bundleanalyze: {\n      analyzermode: 'server',\n      openanalyzer: true,\n    },\n  },\n};\n\n\n\n# performance.chunksplit\n\n * type: object\n * default: { strategy: 'split-by-experience' }\n\nperformance.chunksplit is used to configure the chunk splitting strategy. the type of chunksplit is as follows:\n\ninterface basechunksplit {\n  strategy?:\n    | 'split-by-module'\n    | 'split-by-experience'\n    | 'all-in-one'\n    | 'single-vendor';\n  override?: splitchunks;\n  forcesplitting?: array<regexp>;\n}\n\ninterface splitbysize {\n  strategy?: 'split-by-size';\n  minsize?: number;\n  maxsize?: number;\n  override?: splitchunks;\n  forcesplitting?: array<regexp>;\n}\n\ninterface splitcustom {\n  strategy?: 'custom';\n  splitchunks?: splitchunks;\n  forcesplitting?: array<regexp>;\n}\n\nexport type chunksplit = basechunksplit | splitbysize | splitcustom;\n\n\n\n# chunksplit.strategy\n\nbuilder provides the following chunk splitting strategies:\n\n * split-by-experience: split by experience, the default strategy\n * split-by-module: split a chunk per npm package\n * split-by-size: split by chunk size\n * all-in-one: all code is bundled into a single chunk\n * single-vendor: the code in node_modules is bundled into a single chunk\n * custom: custom chunk splitting strategy\n\nbuilder use split-by-experience strategy by default, in which the following npm package group will be split into a single chunk:\n\n * react and react-dom\n * react-router、history and react-router-dom\n * antd component library\n * semi component library\n * arco component library\n * @babel/runtime (including @babel/runtime-corejs2、 @babel/runtime-corejs3)\n * lodash、lodash-es\n * core-js\n\nif you want to use other splitting strategies, you can specify it via performance.chunksplit.strategy.\n\n\n# chunksplit.minsize\n\n * type: number\n * default: 10000\n\nwhen performance.chunksplit.strategy is split-by-size, you can specify the minimum size of a chunk via performance.chunksplit.minsize, the unit is bytes. the default value is 10000. for example:\n\nexport default {\n  performance: {\n    chunksplit: {\n      strategy: 'split-by-size',\n      minsize: 20000,\n    },\n  },\n};\n\n\n\n# chunksplit.maxsize\n\n * type: number\n * default: infinity\n\nwhen performance.chunksplit.strategy is split-by-size, you can specify the maximum size of a chunk via performance.chunksplit.maxsize, the unit is bytes. the default value is infinity. for example:\n\nexport default {\n  performance: {\n    chunksplit: {\n      strategy: 'split-by-size',\n      maxsize: 50000,\n    },\n  },\n};\n\n\n\n# chunksplit.forcesplitting\n\n * type: array<regexp>\n * default: []\n\nvia performance.chunksplit.forcesplitting, you can specify the npm packages that need to be forced to split. for example:\n\nexport default {\n  performance: {\n    chunksplit: {\n      forcesplitting: [/^@arco-design\\/web-react/],\n    },\n  },\n};\n\n\nthis is an easier way than configuring webpack's splitchunks directly.\n\n\n# chunksplit.splitchunks\n\nwhen performance.chunksplit.strategy is custom, you can specify the custom webpack chunk splitting config via performance.chunksplit.splitchunks. this config will be merged with the webpack splitchunks config (the cachegroups config will also be merged). for example:\n\nexport default {\n  performance: {\n    chunksplit: {\n      strategy: 'custom',\n      splitchunks: {\n        cachegroups: {\n          react: {\n            test: /[\\\\/]node_modules[\\\\/](react|react-dom)[\\\\/]/,\n            name: 'react',\n            chunks: 'all',\n          },\n        },\n      },\n    },\n  },\n};\n\n\n\n# chunksplit.override\n\nwhen performance.chunksplit.strategy is split-by-experience, split-by-module, split-by-size or single-vendor, you can specify the custom webpack chunk splitting config via performance.chunksplit.override. this config will be merged with the webpack splitchunks config (the cachegroups config will also be merged). for example:\n\nexport default {\n  performance: {\n    strategy: 'split-by-experience',\n    chunksplit: {\n      override: {\n        cachegroups: {\n          react: {\n            test: /[\\\\/]node_modules[\\\\/](react|react-dom)[\\\\/]/,\n            name: 'react',\n            chunks: 'all',\n          },\n        },\n      },\n    },\n  },\n};\n\n\n\n# performance.profile\n\n * type: boolean\n\n * default: false\n\nwhether capture timing information for each module, same as the profile config of webpack.\n\n# example\n\nexport default {\n  performance: {\n    profile: true,\n  },\n};\n\n\nwhen turned on, webpack generates a json file with some statistics about the module that includes information about timing information for each module.\n\n\n# performance.removeconsole\n\n * type: boolean | consoletype[]\n * default: false\n\nwhether to remove console.xx in production build.\n\n# remove all consoles\n\nwhen removeconsole is set to true, all types of console.xx are removed:\n\nexport default {\n  performance: {\n    removeconsole: true,\n  },\n};\n\n\n# remove specific console\n\nyou can also specify to remove only certain types of console.xx, such as console.log and console.warn:\n\nexport default {\n  performance: {\n    removeconsole: ['log', 'warn'],\n  },\n};\n\n\nthe following types of console are currently supported:\n\ntype consoletype = 'log' | 'info' | 'warn' | 'error' | 'table' | 'group';\n\n\n\n# performance.removemomentlocale\n\n * type: boolean\n * default: false\n\nmoment.js contains a lot of locales by default, which will increase the bundle size.\n\nwhen moment.js is used in the project, it is recommended to enable this option to automatically exclude all locales:\n\nexport default {\n  performance: {\n    removemomentlocale: true,\n  },\n};\n\n\nonce enabled, you can load a specific locale via:\n\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\n\nmoment.locale('zh-cn');\n",charsets:{cjk:!0}},{title:"Security Config",frontmatter:{extractApiHeaders:[2]},regularPath:"/en/api/config-security.html",relativePath:"en/api/config-security.md",key:"v-0bcd9810",path:"/en/api/config-security.html",headers:[{level:2,title:"security.sri",slug:"security-sri",normalizedTitle:"security.sri",charIndex:105},{level:4,title:"Introduce SRI",slug:"introduce-sri",normalizedTitle:"introduce sri",charIndex:594},{level:4,title:"Example",slug:"example",normalizedTitle:"example",charIndex:1071}],lastUpdated:"10/13/2022, 3:49:10 AM",lastUpdatedTimestamp:166563295e4,headersStr:"security.sri Introduce SRI Example",content:'# Security Config\n\nThis section describes some security related configurations in Modern.js Builder.\n\n\n# security.sri\n\n * Type:\n\ntype SRIOptions = {\n  hashFuncNames?: []string;\n  enabled?: "auto" | true | false;\n  hashLoading?: "eager" | "lazy";\n} | boolean;\n\n\n * Default: undefined\n\nAdding an integrity attribute (integrity) to sub-resources introduced by HTML allows the browser to verify the integrity of the introduced resource, thus preventing tampering with the downloaded resource.\n\nEnabling this option will set the webpack output.crossOriginLoading configuration item to anonymous.\n\n# Introduce SRI\n\nSubresource Integrity (SRI) is a security feature that enables browsers to verify that resources they fetch (for example, from a CDN) are delivered without unexpected manipulation. It works by allowing you to provide a cryptographic hash that a fetched resource must match.\n\nFor script tags, the result is to refuse to execute the code; for CSS links, the result is not to load the styles.\n\nFor more on subresource integrity, see Subresource Integrity - MDN.\n\n# Example\n\nBy default, SRI is not turned on, and when it is, its default configuration is as follows:\n\n{\n  hashFuncNames: [\'sha384\'];\n  enabled: "auto",\n  hashLoading: "eager",\n}\n\n\nYou can customize the configuration items according to your own needs:\n\nexport default {\n  security: {\n    sri: {\n      hashFuncNames: [\'sha-256\'],\n      enabled: true,\n      hashLoading: \'lazy\',\n    },\n  },\n};\n',normalizedContent:'# security config\n\nthis section describes some security related configurations in modern.js builder.\n\n\n# security.sri\n\n * type:\n\ntype srioptions = {\n  hashfuncnames?: []string;\n  enabled?: "auto" | true | false;\n  hashloading?: "eager" | "lazy";\n} | boolean;\n\n\n * default: undefined\n\nadding an integrity attribute (integrity) to sub-resources introduced by html allows the browser to verify the integrity of the introduced resource, thus preventing tampering with the downloaded resource.\n\nenabling this option will set the webpack output.crossoriginloading configuration item to anonymous.\n\n# introduce sri\n\nsubresource integrity (sri) is a security feature that enables browsers to verify that resources they fetch (for example, from a cdn) are delivered without unexpected manipulation. it works by allowing you to provide a cryptographic hash that a fetched resource must match.\n\nfor script tags, the result is to refuse to execute the code; for css links, the result is not to load the styles.\n\nfor more on subresource integrity, see subresource integrity - mdn.\n\n# example\n\nby default, sri is not turned on, and when it is, its default configuration is as follows:\n\n{\n  hashfuncnames: [\'sha384\'];\n  enabled: "auto",\n  hashloading: "eager",\n}\n\n\nyou can customize the configuration items according to your own needs:\n\nexport default {\n  security: {\n    sri: {\n      hashfuncnames: [\'sha-256\'],\n      enabled: true,\n      hashloading: \'lazy\',\n    },\n  },\n};\n',charsets:{cjk:!0}},{title:"Source Config",frontmatter:{extractApiHeaders:[2]},regularPath:"/en/api/config-source.html",relativePath:"en/api/config-source.md",key:"v-585d4b02",path:"/en/api/config-source.html",headers:[{level:2,title:"source.alias",slug:"source-alias",normalizedTitle:"source.alias",charIndex:106},{level:4,title:"Object Type",slug:"object-type",normalizedTitle:"object type",charIndex:488},{level:4,title:"Function Type",slug:"function-type",normalizedTitle:"function type",charIndex:821},{level:2,title:"source.include",slug:"source-include",normalizedTitle:"source.include",charIndex:1287},{level:4,title:"Typical Example",slug:"typical-example",normalizedTitle:"typical example",charIndex:1735},{level:4,title:"Monorepo Project",slug:"monorepo-project",normalizedTitle:"monorepo project",charIndex:2755},{level:2,title:"source.compileJsDataURI",slug:"source-compilejsdatauri",normalizedTitle:"source.compilejsdatauri",charIndex:3401},{level:4,title:"Example",slug:"example",normalizedTitle:"example",charIndex:1743},{level:2,title:"source.define",slug:"source-define",normalizedTitle:"source.define",charIndex:3793},{level:4,title:"Example",slug:"example-2",normalizedTitle:"example",charIndex:1743},{level:2,title:"source.globalVars",slug:"source-globalvars",normalizedTitle:"source.globalvars",charIndex:4991},{level:4,title:"Example",slug:"example-3",normalizedTitle:"example",charIndex:1743},{level:2,title:"source.moduleScopes",slug:"source-modulescopes",normalizedTitle:"source.modulescopes",charIndex:6194},{level:4,title:"Example",slug:"example-4",normalizedTitle:"example",charIndex:1743},{level:4,title:"Array Type",slug:"array-type",normalizedTitle:"array type",charIndex:6925},{level:4,title:"Function Type",slug:"function-type-2",normalizedTitle:"function type",charIndex:821},{level:2,title:"source.preEntry",slug:"source-preentry",normalizedTitle:"source.preentry",charIndex:7316},{level:4,title:"Add a single script",slug:"add-a-single-script",normalizedTitle:"add a single script",charIndex:7555},{level:4,title:"Add multiple scripts",slug:"add-multiple-scripts",normalizedTitle:"add multiple scripts",charIndex:7934},{level:2,title:"source.resolveExtensionPrefix",slug:"source-resolveextensionprefix",normalizedTitle:"source.resolveextensionprefix",charIndex:8124},{level:4,title:"Example",slug:"example-5",normalizedTitle:"example",charIndex:1743},{level:2,title:"source.resolveMainFields",slug:"source-resolvemainfields",normalizedTitle:"source.resolvemainfields",charIndex:8773},{level:4,title:"Example",slug:"example-6",normalizedTitle:"example",charIndex:1743}],lastUpdated:"10/13/2022, 3:49:10 AM",lastUpdatedTimestamp:166563295e4,headersStr:"source.alias Object Type Function Type source.include Typical Example Monorepo Project source.compileJsDataURI Example source.define Example source.globalVars Example source.moduleScopes Example Array Type Function Type source.preEntry Add a single script Add multiple scripts source.resolveExtensionPrefix Example source.resolveMainFields Example",content:"# Source Config\n\nThis section describes some source code related configurations in Modern.js Builder.\n\n\n# source.alias\n\n * Type: Record<string, string> | Function\n * Default: undefined\n\nCreate aliases to import or require certain modules, same as the resolve.alias config of webpack.\n\nTIP\n\nFor TypeScript projects, you only need to configure compilerOptions.paths in tsconfig.json, Builder will automatically recognize the aliases in tsconfig.json, so the alias config is unnecessary.\n\n# Object Type\n\nThe alias can be a Object, and the relative path will be automatically converted to absolute path.\n\nexport default {\n  source: {\n    alias: {\n      '@common': './src/common',\n    },\n  },\n};\n\n\nWith above configuration, if @common/Foo.tsx is import in the code, it will be mapped to the <root>/src/common/Foo.tsx path.\n\n# Function Type\n\nThe alias can be a function, it will accept the previous alias object, and you can modify it.\n\nexport default {\n  source: {\n    alias: alias => {\n      alias['@common'] = './src/common';\n    },\n  },\n};\n\n\nYou can also return a new object as the final result in the function, which will replace the previous alias object.\n\nexport default {\n  source: {\n    alias: alias => {\n      return {\n        '@common': './src/common',\n      };\n    },\n  },\n};\n\n\n\n# source.include\n\n * Type: Array<string | RegExp>\n * Default: []\n\nFor the sake of build performance, Builder will not compile files under node_modules through babel-loader or ts-loader by default, as will as the files outside the current project directory.\n\nThrough the source.include config, you can specify directories or modules that need additional compilation. For example:\n\nexport default {\n  source: {\n    include: ['foo', /bar/],\n  },\n};\n\n\n# Typical Example\n\nA typical usage scenario is to compile files under node_modules, because some third-party dependencies have ES6+ syntax, which may cause them to fail to run on low-version browsers. You can solve the problem by using this config to specify the dependencies that need to be compiled. Take query-string as an example, you can do the following config:\n\nexport default {\n  source: {\n    include: [\n      // Method 1:\n      // First get the path of the module by require.resolve\n      // Then pass path.dirname to point to the corresponding directory\n      path.dirname(require.resolve('query-string')),\n      // Method 2:\n      // Match by regular expression\n      // All paths containing `/query-string/` will be matched\n      /\\/query-string\\//,\n    ],\n  },\n};\n\n\n> Note that this config will only compile the code of query-string itself, not the sub-dependencies of query-string. If you need to compile a sub-dependency of query-string, you need to add the corresponding npm package to source.include.\n\n# Monorepo Project\n\nWhen using Monorepo, if you need to refer to the source code of other libraries in Monorepo, you can add the corresponding library to source.include:\n\nexport default {\n  source: {\n    source: {\n    include: [\n      // Method 1:\n      // Compile all files in Monorepo's package directory\n      path.resolve(__dirname, '../../packages'),\n\n      // Method 2:\n      // Compile the source code of a package in Monorepo's package directory\n      // This way of writing matches the range more accurately and has less impact on the overall build performance.\n      path.resolve(__dirname, '../../packages/xxx/src'),\n    ],\n  },\n};\n\n\n\n# source.compileJsDataURI\n\n * Type: boolean\n * Default: false\n\nWhether to compile JavaScript code imported via Data URI.\n\nSuch as:\n\nimport x from 'data:text/javascript,export default 1;';\n\nimport 'data:text/javascript;charset=utf-8;base64,Y29uc29sZS5sb2coJ2lubGluZSAxJyk7';\n\n\n# Example\n\nAdd the following config to enable:\n\nexport default {\n  source: {\n    compileJsDataURI: true,\n  },\n};\n\n\n\n# source.define\n\n * Type: Record<string, unknown>\n * Default: {}\n\nReplaces variables in your code with other values or expressions at compile time. This can be useful for allowing different behavior between development builds and production builds.\n\nEach key passed into options is an identifier or multiple identifiers joined with ..\n\n * If the value is a string it will be used as a code fragment.\n * If the value isn't a string, it will be stringified (including functions).\n * If the value is an object all keys are defined the same way.\n * If you prefix typeof to the key, it's only defined for typeof calls.\n\nFor more information please visit https://webpack.js.org/plugins/define-plugin/.\n\n# Example\n\nexport default {\n  source: {\n    define: {\n      PRODUCTION: JSON.stringify(true),\n      VERSION: JSON.stringify('5fa3b9'),\n      BROWSER_SUPPORTS_HTML5: true,\n      TWO: '1 + 1',\n      'typeof window': JSON.stringify('object'),\n      'process.env.NODE_ENV': JSON.stringify(process.env.NODE_ENV),\n      'import.meta': { test: undefined },\n    },\n  },\n};\n\n\nExpressions will be replaced with the corresponding code fragments:\n\nconst foo = TWO;\n\n// ⬇️ Turn into being...\nconst foo = 1 + 1;\n\n\n\n# source.globalVars\n\n * Type: Record<string, JSONValue>\n * Default: {}\n\nDefine global variables. It will replace all expr like process.env.FOO in your code at compile time.\n\nSuch as:\n\nconsole.log(process.env.NODE_ENV);\n\n// ⬇️ Turn into being...\nconsole.log('development');\n\n\nValues of options record should be JSON-safe, so it can be serialized. And each key will be connected with the prefix process.env.\n\nThe environment variable NODE_ENV will be added to globalVars by default, so you don't need to set it in manually.\n\nDoesn't works with destructuring assignment, because builder does not know if NODE_ENV and process.env.NODE_ENV are associated:\n\nconst { NODE_ENV } = process.env;\nconsole.log(NODE_ENV);\n// ❌ Won't get a string.\n\n\nYou can take globalVars as the syntax sugar of define, which makes it easier to set the value of global variables.\n\nexport default {\n  source: {\n    globalVars: {\n      NODE_ENV: 'development',\n    },\n    define: {\n      'process.env.NODE_ENV': JSON.stringify('development'),\n    },\n  },\n};\n\n\n# Example\n\nAdd the following config to use:\n\nexport default {\n  source: {\n    globalVars: {\n      ENABLE_VCONSOLE: true,\n      APP_CONTEXT: { answer: 42 },\n    },\n  },\n};\n\n\n\n# source.moduleScopes\n\n * Type: Array<string | Regexp> | Function\n * Default: undefined\n\nRestrict importing paths. After configuring this option, all source files can only import code from the specific paths, and import code from other paths is not allowed.\n\n# Example\n\nFirst, we configure moduleScopes to only include the src directory:\n\nexport default {\n  source: {\n    moduleScopes: ['./src'],\n  },\n};\n\n\nThen we import the utils/a module outside the src directory in src/App.tsx:\n\nimport a from '../utils/a';\n\n\nAfter compiling, there will be a reference path error:\n\n\n\nIf we configure the utils directory in moduleScopes, the error will disappear.\n\nexport default {\n  source: {\n    moduleScopes: ['./src', './utils'],\n  },\n};\n\n\n# Array Type\n\nYou can directly set several paths like this:\n\nexport default {\n  source: {\n    moduleScopes: ['./src', './shared', './utils'],\n  },\n};\n\n\n# Function Type\n\nmoduleScopes also supports setting as a function, which can be modified instead of overriding the default value:\n\nexport default {\n  source: {\n    moduleScopes: scopes => {\n      scopes.push('./shared');\n    },\n  },\n};\n\n\n\n# source.preEntry\n\n * Type: string | string[]\n * Default: undefined\n\nAdd a script before the entry file of each page. This script will be executed before the page code. It can be used to execute global logics, such as polyfill injection.\n\n# Add a single script\n\nFirst create a src/polyfill.ts file:\n\nconsole.log('I am a polyfill');\n\n\nThen configure src/polyfill.ts to source.preEntry:\n\nexport default {\n  source: {\n    preEntry: './src/polyfill.ts',\n  },\n};\n\n\nRe-run the compilation and visit any page, you can see that the code in src/polyfill.ts has been executed, and the I am a polyfill is logged in the console.\n\n# Add multiple scripts\n\nMultiple scripts can be added by setting preEntry to an array:\n\nexport default {\n  source: {\n    preEntry: ['./src/polyfill-a.ts', './src/polyfill-b.ts'],\n  },\n};\n\n\n\n# source.resolveExtensionPrefix\n\n * Type: string\n * Default: undefined\n\nAdd a prefix to resolve.extensions.\n\nIf multiple files share the same name but have different extensions, Builder will resolve the one with the extension listed first in the array and skip the rest.\n\n# Example\n\nexport default {\n  source: {\n    resolveExtensionPrefix: '.web',\n  },\n};\n\n\nWith the configuration above, the extensions array will become:\n\n// before\nconst extensions = ['.js', '.ts', ...];\n\n// after\nconst extensions = ['.web.js', '.js', '.web.ts' , '.ts', ...];\n\n\nWhen import './foo' in the code, the foo.web.js file will be resolved first, then the foo.js file.\n\n\n# source.resolveMainFields\n\n * Type: (string | string[])[]\n\n * Default: undefined\n\nThis configuration will determine which field of package.json you use to import the npm module. Same as the resolve.mainFields config of Webpack.\n\n# Example\n\nexport default {\n  source: {\n    resolveMainFields: ['main', 'browser', 'exports'],\n  },\n};\n",normalizedContent:"# source config\n\nthis section describes some source code related configurations in modern.js builder.\n\n\n# source.alias\n\n * type: record<string, string> | function\n * default: undefined\n\ncreate aliases to import or require certain modules, same as the resolve.alias config of webpack.\n\ntip\n\nfor typescript projects, you only need to configure compileroptions.paths in tsconfig.json, builder will automatically recognize the aliases in tsconfig.json, so the alias config is unnecessary.\n\n# object type\n\nthe alias can be a object, and the relative path will be automatically converted to absolute path.\n\nexport default {\n  source: {\n    alias: {\n      '@common': './src/common',\n    },\n  },\n};\n\n\nwith above configuration, if @common/foo.tsx is import in the code, it will be mapped to the <root>/src/common/foo.tsx path.\n\n# function type\n\nthe alias can be a function, it will accept the previous alias object, and you can modify it.\n\nexport default {\n  source: {\n    alias: alias => {\n      alias['@common'] = './src/common';\n    },\n  },\n};\n\n\nyou can also return a new object as the final result in the function, which will replace the previous alias object.\n\nexport default {\n  source: {\n    alias: alias => {\n      return {\n        '@common': './src/common',\n      };\n    },\n  },\n};\n\n\n\n# source.include\n\n * type: array<string | regexp>\n * default: []\n\nfor the sake of build performance, builder will not compile files under node_modules through babel-loader or ts-loader by default, as will as the files outside the current project directory.\n\nthrough the source.include config, you can specify directories or modules that need additional compilation. for example:\n\nexport default {\n  source: {\n    include: ['foo', /bar/],\n  },\n};\n\n\n# typical example\n\na typical usage scenario is to compile files under node_modules, because some third-party dependencies have es6+ syntax, which may cause them to fail to run on low-version browsers. you can solve the problem by using this config to specify the dependencies that need to be compiled. take query-string as an example, you can do the following config:\n\nexport default {\n  source: {\n    include: [\n      // method 1:\n      // first get the path of the module by require.resolve\n      // then pass path.dirname to point to the corresponding directory\n      path.dirname(require.resolve('query-string')),\n      // method 2:\n      // match by regular expression\n      // all paths containing `/query-string/` will be matched\n      /\\/query-string\\//,\n    ],\n  },\n};\n\n\n> note that this config will only compile the code of query-string itself, not the sub-dependencies of query-string. if you need to compile a sub-dependency of query-string, you need to add the corresponding npm package to source.include.\n\n# monorepo project\n\nwhen using monorepo, if you need to refer to the source code of other libraries in monorepo, you can add the corresponding library to source.include:\n\nexport default {\n  source: {\n    source: {\n    include: [\n      // method 1:\n      // compile all files in monorepo's package directory\n      path.resolve(__dirname, '../../packages'),\n\n      // method 2:\n      // compile the source code of a package in monorepo's package directory\n      // this way of writing matches the range more accurately and has less impact on the overall build performance.\n      path.resolve(__dirname, '../../packages/xxx/src'),\n    ],\n  },\n};\n\n\n\n# source.compilejsdatauri\n\n * type: boolean\n * default: false\n\nwhether to compile javascript code imported via data uri.\n\nsuch as:\n\nimport x from 'data:text/javascript,export default 1;';\n\nimport 'data:text/javascript;charset=utf-8;base64,y29uc29szs5sb2coj2lubgluzsaxjyk7';\n\n\n# example\n\nadd the following config to enable:\n\nexport default {\n  source: {\n    compilejsdatauri: true,\n  },\n};\n\n\n\n# source.define\n\n * type: record<string, unknown>\n * default: {}\n\nreplaces variables in your code with other values or expressions at compile time. this can be useful for allowing different behavior between development builds and production builds.\n\neach key passed into options is an identifier or multiple identifiers joined with ..\n\n * if the value is a string it will be used as a code fragment.\n * if the value isn't a string, it will be stringified (including functions).\n * if the value is an object all keys are defined the same way.\n * if you prefix typeof to the key, it's only defined for typeof calls.\n\nfor more information please visit https://webpack.js.org/plugins/define-plugin/.\n\n# example\n\nexport default {\n  source: {\n    define: {\n      production: json.stringify(true),\n      version: json.stringify('5fa3b9'),\n      browser_supports_html5: true,\n      two: '1 + 1',\n      'typeof window': json.stringify('object'),\n      'process.env.node_env': json.stringify(process.env.node_env),\n      'import.meta': { test: undefined },\n    },\n  },\n};\n\n\nexpressions will be replaced with the corresponding code fragments:\n\nconst foo = two;\n\n// ⬇️ turn into being...\nconst foo = 1 + 1;\n\n\n\n# source.globalvars\n\n * type: record<string, jsonvalue>\n * default: {}\n\ndefine global variables. it will replace all expr like process.env.foo in your code at compile time.\n\nsuch as:\n\nconsole.log(process.env.node_env);\n\n// ⬇️ turn into being...\nconsole.log('development');\n\n\nvalues of options record should be json-safe, so it can be serialized. and each key will be connected with the prefix process.env.\n\nthe environment variable node_env will be added to globalvars by default, so you don't need to set it in manually.\n\ndoesn't works with destructuring assignment, because builder does not know if node_env and process.env.node_env are associated:\n\nconst { node_env } = process.env;\nconsole.log(node_env);\n// ❌ won't get a string.\n\n\nyou can take globalvars as the syntax sugar of define, which makes it easier to set the value of global variables.\n\nexport default {\n  source: {\n    globalvars: {\n      node_env: 'development',\n    },\n    define: {\n      'process.env.node_env': json.stringify('development'),\n    },\n  },\n};\n\n\n# example\n\nadd the following config to use:\n\nexport default {\n  source: {\n    globalvars: {\n      enable_vconsole: true,\n      app_context: { answer: 42 },\n    },\n  },\n};\n\n\n\n# source.modulescopes\n\n * type: array<string | regexp> | function\n * default: undefined\n\nrestrict importing paths. after configuring this option, all source files can only import code from the specific paths, and import code from other paths is not allowed.\n\n# example\n\nfirst, we configure modulescopes to only include the src directory:\n\nexport default {\n  source: {\n    modulescopes: ['./src'],\n  },\n};\n\n\nthen we import the utils/a module outside the src directory in src/app.tsx:\n\nimport a from '../utils/a';\n\n\nafter compiling, there will be a reference path error:\n\n\n\nif we configure the utils directory in modulescopes, the error will disappear.\n\nexport default {\n  source: {\n    modulescopes: ['./src', './utils'],\n  },\n};\n\n\n# array type\n\nyou can directly set several paths like this:\n\nexport default {\n  source: {\n    modulescopes: ['./src', './shared', './utils'],\n  },\n};\n\n\n# function type\n\nmodulescopes also supports setting as a function, which can be modified instead of overriding the default value:\n\nexport default {\n  source: {\n    modulescopes: scopes => {\n      scopes.push('./shared');\n    },\n  },\n};\n\n\n\n# source.preentry\n\n * type: string | string[]\n * default: undefined\n\nadd a script before the entry file of each page. this script will be executed before the page code. it can be used to execute global logics, such as polyfill injection.\n\n# add a single script\n\nfirst create a src/polyfill.ts file:\n\nconsole.log('i am a polyfill');\n\n\nthen configure src/polyfill.ts to source.preentry:\n\nexport default {\n  source: {\n    preentry: './src/polyfill.ts',\n  },\n};\n\n\nre-run the compilation and visit any page, you can see that the code in src/polyfill.ts has been executed, and the i am a polyfill is logged in the console.\n\n# add multiple scripts\n\nmultiple scripts can be added by setting preentry to an array:\n\nexport default {\n  source: {\n    preentry: ['./src/polyfill-a.ts', './src/polyfill-b.ts'],\n  },\n};\n\n\n\n# source.resolveextensionprefix\n\n * type: string\n * default: undefined\n\nadd a prefix to resolve.extensions.\n\nif multiple files share the same name but have different extensions, builder will resolve the one with the extension listed first in the array and skip the rest.\n\n# example\n\nexport default {\n  source: {\n    resolveextensionprefix: '.web',\n  },\n};\n\n\nwith the configuration above, the extensions array will become:\n\n// before\nconst extensions = ['.js', '.ts', ...];\n\n// after\nconst extensions = ['.web.js', '.js', '.web.ts' , '.ts', ...];\n\n\nwhen import './foo' in the code, the foo.web.js file will be resolved first, then the foo.js file.\n\n\n# source.resolvemainfields\n\n * type: (string | string[])[]\n\n * default: undefined\n\nthis configuration will determine which field of package.json you use to import the npm module. same as the resolve.mainfields config of webpack.\n\n# example\n\nexport default {\n  source: {\n    resolvemainfields: ['main', 'browser', 'exports'],\n  },\n};\n",charsets:{cjk:!0}},{title:"Tools Config",frontmatter:{extractApiHeaders:[2]},regularPath:"/en/api/config-tools.html",relativePath:"en/api/config-tools.md",key:"v-f69b32e8",path:"/en/api/config-tools.html",headers:[{level:2,title:"tools.autoprefixer",slug:"tools-autoprefixer",normalizedTitle:"tools.autoprefixer",charIndex:101},{level:3,title:"Object Type",slug:"object-type",normalizedTitle:"object type",charIndex:418},{level:3,title:"Function Type",slug:"function-type",normalizedTitle:"function type",charIndex:653},{level:2,title:"tools.babel",slug:"tools-babel",normalizedTitle:"tools.babel",charIndex:981},{level:3,title:"Object Type",slug:"object-type-2",normalizedTitle:"object type",charIndex:418},{level:3,title:"Function Type",slug:"function-type-2",normalizedTitle:"function type",charIndex:653},{level:3,title:"Util Functions",slug:"util-functions",normalizedTitle:"util functions",charIndex:2155},{level:4,title:"addPlugins",slug:"addplugins",normalizedTitle:"addplugins",charIndex:2282},{level:4,title:"addPresets",slug:"addpresets",normalizedTitle:"addpresets",charIndex:2621},{level:4,title:"removePlugins",slug:"removeplugins",normalizedTitle:"removeplugins",charIndex:2829},{level:4,title:"removePresets",slug:"removepresets",normalizedTitle:"removepresets",charIndex:3054},{level:4,title:"addIncludes",slug:"addincludes",normalizedTitle:"addincludes",charIndex:3286},{level:4,title:"addExcludes",slug:"addexcludes",normalizedTitle:"addexcludes",charIndex:3606},{level:4,title:"modifyPresetEnvOptions",slug:"modifypresetenvoptions",normalizedTitle:"modifypresetenvoptions",charIndex:3899},{level:4,title:"modifyPresetReactOptions",slug:"modifypresetreactoptions",normalizedTitle:"modifypresetreactoptions",charIndex:4267},{level:2,title:"tools.cssExtract",slug:"tools-cssextract",normalizedTitle:"tools.cssextract",charIndex:4612},{level:3,title:"Object Type",slug:"object-type-3",normalizedTitle:"object type",charIndex:418},{level:3,title:"Function Type",slug:"function-type-3",normalizedTitle:"function type",charIndex:653},{level:3,title:"Boolean Type",slug:"boolean-type",normalizedTitle:"boolean type",charIndex:5832},{level:2,title:"tools.cssLoader",slug:"tools-cssloader",normalizedTitle:"tools.cssloader",charIndex:6006},{level:3,title:"Object Type",slug:"object-type-4",normalizedTitle:"object type",charIndex:418},{level:3,title:"Function Type",slug:"function-type-4",normalizedTitle:"function type",charIndex:653},{level:2,title:"tools.devServer",slug:"tools-devserver",normalizedTitle:"tools.devserver",charIndex:7253},{level:3,title:"Options",slug:"options",normalizedTitle:"options",charIndex:3914},{level:4,title:"after",slug:"after",normalizedTitle:"after",charIndex:7382},{level:4,title:"before",slug:"before",normalizedTitle:"before",charIndex:7728},{level:4,title:"client",slug:"client",normalizedTitle:"client",charIndex:8080},{level:4,title:"devMiddleware",slug:"devmiddleware",normalizedTitle:"devmiddleware",charIndex:8458},{level:4,title:"headers",slug:"headers",normalizedTitle:"headers",charIndex:8746},{level:4,title:"historyApiFallback",slug:"historyapifallback",normalizedTitle:"historyapifallback",charIndex:8963},{level:4,title:"hot",slug:"hot",normalizedTitle:"hot",charIndex:8612},{level:4,title:"https",slug:"https",normalizedTitle:"https",charIndex:9460},{level:4,title:"liveReload",slug:"livereload",normalizedTitle:"livereload",charIndex:10004},{level:4,title:"setupMiddlewares",slug:"setupmiddlewares",normalizedTitle:"setupmiddlewares",charIndex:10272},{level:4,title:"proxy",slug:"proxy",normalizedTitle:"proxy",charIndex:11747},{level:4,title:"watch",slug:"watch",normalizedTitle:"watch",charIndex:11561},{level:2,title:"tools.htmlPlugin",slug:"tools-htmlplugin",normalizedTitle:"tools.htmlplugin",charIndex:14202},{level:3,title:"Object Type",slug:"object-type-5",normalizedTitle:"object type",charIndex:418},{level:3,title:"Function Type",slug:"function-type-5",normalizedTitle:"function type",charIndex:653},{level:3,title:"Boolean Type",slug:"boolean-type-2",normalizedTitle:"boolean type",charIndex:5832},{level:2,title:"tools.inspector",slug:"tools-inspector",normalizedTitle:"tools.inspector",charIndex:15820},{level:3,title:"Object Type",slug:"object-type-6",normalizedTitle:"object type",charIndex:418},{level:3,title:"Function Type",slug:"function-type-6",normalizedTitle:"function type",charIndex:653},{level:2,title:"tools.less",slug:"tools-less",normalizedTitle:"tools.less",charIndex:16673},{level:3,title:"Object Type",slug:"object-type-7",normalizedTitle:"object type",charIndex:418},{level:3,title:"Function Type",slug:"function-type-7",normalizedTitle:"function type",charIndex:653},{level:3,title:"Util Function",slug:"util-function",normalizedTitle:"util function",charIndex:2155},{level:4,title:"addExcludes",slug:"addexcludes-2",normalizedTitle:"addexcludes",charIndex:3606},{level:2,title:"tools.minifyCss",slug:"tools-minifycss",normalizedTitle:"tools.minifycss",charIndex:17782},{level:3,title:"Object Type",slug:"object-type-8",normalizedTitle:"object type",charIndex:418},{level:3,title:"Function Type",slug:"function-type-8",normalizedTitle:"function type",charIndex:653},{level:2,title:"tools.postcss",slug:"tools-postcss",normalizedTitle:"tools.postcss",charIndex:18742},{level:3,title:"Object Type",slug:"object-type-9",normalizedTitle:"object type",charIndex:418},{level:3,title:"Function Type",slug:"function-type-9",normalizedTitle:"function type",charIndex:653},{level:3,title:"Util Functions",slug:"util-functions-2",normalizedTitle:"util functions",charIndex:2155},{level:4,title:"addPlugins",slug:"addplugins-2",normalizedTitle:"addplugins",charIndex:2282},{level:2,title:"tools.pug",slug:"tools-pug",normalizedTitle:"tools.pug",charIndex:21349},{level:3,title:"Boolean Type",slug:"boolean-type-3",normalizedTitle:"boolean type",charIndex:5832},{level:3,title:"Object Type",slug:"object-type-10",normalizedTitle:"object type",charIndex:418},{level:3,title:"Function Type",slug:"function-type-10",normalizedTitle:"function type",charIndex:653},{level:2,title:"tools.sass",slug:"tools-sass",normalizedTitle:"tools.sass",charIndex:22240},{level:3,title:"Object Type",slug:"object-type-11",normalizedTitle:"object type",charIndex:418},{level:3,title:"Function Type",slug:"function-type-11",normalizedTitle:"function type",charIndex:653},{level:3,title:"Utility Function",slug:"utility-function",normalizedTitle:"utility function",charIndex:23028},{level:4,title:"addExcludes",slug:"addexcludes-3",normalizedTitle:"addexcludes",charIndex:3606},{level:2,title:"tools.styleLoader",slug:"tools-styleloader",normalizedTitle:"tools.styleloader",charIndex:23252},{level:3,title:"Object Type",slug:"object-type-12",normalizedTitle:"object type",charIndex:418},{level:3,title:"Function Type",slug:"function-type-12",normalizedTitle:"function type",charIndex:653},{level:2,title:"tools.styledComponents",slug:"tools-styledcomponents",normalizedTitle:"tools.styledcomponents",charIndex:24272},{level:2,title:"tools.terser",slug:"tools-terser",normalizedTitle:"tools.terser",charIndex:21731},{level:3,title:"Object Type",slug:"object-type-13",normalizedTitle:"object type",charIndex:418},{level:3,title:"Function Type",slug:"function-type-13",normalizedTitle:"function type",charIndex:653},{level:2,title:"tools.tsLoader",slug:"tools-tsloader",normalizedTitle:"tools.tsloader",charIndex:25929},{level:3,title:"Object Type",slug:"object-type-14",normalizedTitle:"object type",charIndex:418},{level:3,title:"Function Type",slug:"function-type-14",normalizedTitle:"function type",charIndex:653},{level:3,title:"Util Functions",slug:"util-functions-3",normalizedTitle:"util functions",charIndex:2155},{level:4,title:"addIncludes",slug:"addincludes-2",normalizedTitle:"addincludes",charIndex:3286},{level:4,title:"addExcludes",slug:"addexcludes-4",normalizedTitle:"addexcludes",charIndex:3606},{level:2,title:"tools.tsChecker",slug:"tools-tschecker",normalizedTitle:"tools.tschecker",charIndex:27981},{level:3,title:"Object Type",slug:"object-type-15",normalizedTitle:"object type",charIndex:418},{level:3,title:"Function Type",slug:"function-type-15",normalizedTitle:"function type",charIndex:653},{level:2,title:"tools.webpack",slug:"tools-webpack",normalizedTitle:"tools.webpack",charIndex:29336},{level:3,title:"Object Type",slug:"object-type-16",normalizedTitle:"object type",charIndex:418},{level:3,title:"Function Type",slug:"function-type-16",normalizedTitle:"function type",charIndex:653},{level:3,title:"Utils",slug:"utils",normalizedTitle:"utils",charIndex:30398},{level:4,title:"env",slug:"env",normalizedTitle:"env",charIndex:2802},{level:4,title:"isProd",slug:"isprod",normalizedTitle:"isprod",charIndex:6273},{level:4,title:"target",slug:"target",normalizedTitle:"target",charIndex:4175},{level:4,title:"webpack",slug:"webpack",normalizedTitle:"webpack",charIndex:8352},{level:2,title:"tools.webpackChain",slug:"tools-webpackchain",normalizedTitle:"tools.webpackchain",charIndex:29460},{level:3,title:"Utils",slug:"utils-2",normalizedTitle:"utils",charIndex:30398},{level:4,title:"env",slug:"env-2",normalizedTitle:"env",charIndex:2802},{level:4,title:"isProd",slug:"isprod-2",normalizedTitle:"isprod",charIndex:6273},{level:4,title:"target",slug:"target-2",normalizedTitle:"target",charIndex:4175},{level:4,title:"webpack",slug:"webpack-2",normalizedTitle:"webpack",charIndex:8352},{level:4,title:"CHAIN_ID",slug:"chain-id",normalizedTitle:"chain_id",charIndex:33600},{level:3,title:"CHAINID.ONEOF",slug:"chain-id-one-of",normalizedTitle:"chainid.oneof",charIndex:null},{level:3,title:"CHAIN_ID.USE",slug:"chain-id-use",normalizedTitle:"chain_id.use",charIndex:34555},{level:3,title:"CHAIN_ID.PLUGIN",slug:"chain-id-plugin",normalizedTitle:"chain_id.plugin",charIndex:35472},{level:3,title:"CHAIN_ID.MINIMIZER",slug:"chain-id-minimizer",normalizedTitle:"chain_id.minimizer",charIndex:37168},{level:3,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:37432},{level:4,title:"Add/Modify/Delete loader",slug:"add-modify-delete-loader",normalizedTitle:"add/modify/delete loader",charIndex:37559},{level:4,title:"Add/Modify/Delete plugin",slug:"add-modify-delete-plugin",normalizedTitle:"add/modify/delete plugin",charIndex:38120}],lastUpdated:"10/13/2022, 3:49:10 AM",lastUpdatedTimestamp:166563295e4,headersStr:"tools.autoprefixer Object Type Function Type tools.babel Object Type Function Type Util Functions addPlugins addPresets removePlugins removePresets addIncludes addExcludes modifyPresetEnvOptions modifyPresetReactOptions tools.cssExtract Object Type Function Type Boolean Type tools.cssLoader Object Type Function Type tools.devServer Options after before client devMiddleware headers historyApiFallback hot https liveReload setupMiddlewares proxy watch tools.htmlPlugin Object Type Function Type Boolean Type tools.inspector Object Type Function Type tools.less Object Type Function Type Util Function addExcludes tools.minifyCss Object Type Function Type tools.postcss Object Type Function Type Util Functions addPlugins tools.pug Boolean Type Object Type Function Type tools.sass Object Type Function Type Utility Function addExcludes tools.styleLoader Object Type Function Type tools.styledComponents tools.terser Object Type Function Type tools.tsLoader Object Type Function Type Util Functions addIncludes addExcludes tools.tsChecker Object Type Function Type tools.webpack Object Type Function Type Utils env isProd target webpack tools.webpackChain Utils env isProd target webpack CHAIN_ID CHAINID.ONEOF CHAIN_ID.USE CHAIN_ID.PLUGIN CHAIN_ID.MINIMIZER Examples Add/Modify/Delete loader Add/Modify/Delete plugin",content:"# Tools Config\n\nThis section describes some low-level tools configurations in Modern.js Builder.\n\n\n# tools.autoprefixer\n\n * Type: Object | Function\n * Default\n\n{\n  flexbox: 'no-2009',\n  // Depends on the browserslist config in the project\n  // and the `output.overrideBrowserslist` (higher priority) config\n  overrideBrowserslist: browserslist,\n}\n\n\nYou can modify the config of autoprefixer by tools.autoprefixer.\n\n\n# Object Type\n\nWhen tools.autoprefixer is configured as Object type, it is merged with the default config through Object.assign. For example:\n\nexport default {\n  tools: {\n    autoprefixer: {\n      flexbox: 'no-2009',\n    },\n  },\n};\n\n\n\n# Function Type\n\nWhen tools.autoprefixer is of Function type, the default config is passed as the first parameter and can be directly modified or returned as the final result. For example:\n\nexport default {\n  tools: {\n    autoprefixer(config) {\n      // modify flexbox config\n      config.flexbox = 'no-2009';\n    },\n  },\n};\n\n\n\n# tools.babel\n\n * Type: Object | Function\n * Default: undefined\n\nBy tools.babel you can modify babel-loader's' options.\n\n\n# Object Type\n\nWhen tools.babel's type is Object, the config will be merged with default config by Object.assign.\n\nexport default {\n  tools: {\n    babel: {\n      plugins: [\n        [\n          'babel-plugin-import',\n          {\n            libraryName: 'xxx-components',\n            libraryDirectory: 'es',\n            style: true,\n          },\n        ],\n      ],\n    },\n  },\n};\n\n\n\n# Function Type\n\nWhen tools.babel's type is Function，the default babel config will be passed in as the first parameter, the config object can be modified directly, or a value can be returned as the final result. The second parameter provides some util functions that can be called directly:\n\nexport default {\n  tools: {\n    babel(config) {\n      // Add a babel plugin\n      // note: the plugin have been added to the default config to support antd load on demand\n      config.plugins.push([\n        'babel-plugin-import',\n        {\n          libraryName: 'xxx-components',\n          libraryDirectory: 'es',\n          style: true,\n        },\n      ]);\n    },\n  },\n};\n\n\n\n# Util Functions\n\nWhen tools.babel is of type Function, the tool functions available for the second parameter are as follows:\n\n# addPlugins\n\nAdd Babel plugin. For example:\n\nexport default {\n  tools: {\n    babel(config, { addPlugins }) {\n      addPlugins([\n        [\n          'babel-plugin-import',\n          {\n            libraryName: 'xxx-components',\n            libraryDirectory: 'es',\n            style: true,\n          },\n        ],\n      ]);\n    },\n  },\n};\n\n\n# addPresets\n\nAdd Babel preset configuration. (No need to add presets in most cases)\n\nexport default {\n  tools: {\n    babel(config, { addPresets }) {\n      addPresets(['@babel/preset-env']);\n    },\n  },\n};\n\n\n# removePlugins\n\nTo remove the Babel plugin, just pass in the name of the plugin to be removed.\n\nexport default {\n  tools: {\n    babel(config, { removePlugins }) {\n      removePlugins('babel-plugin-import');\n    },\n  },\n};\n\n\n# removePresets\n\nTo remove the Babel preset configuration, pass in the name of the preset to be removed.\n\nexport default {\n  tools: {\n    babel(config, { removePresets }) {\n      removePresets('@babel/preset-env');\n    },\n  },\n};\n\n\n# addIncludes\n\nBy default, Babel will only compile the application code in the src directory. With addIncludes you can specify that Babel compile some files in node_modules. For example:\n\nexport default {\n  tools: {\n    babel(config, { addIncludes }) {\n      addIncludes('node_modules/xxx-components');\n    },\n  },\n};\n\n\n# addExcludes\n\nContrary to addIncludes, specifies that certain files are excluded from Babel's compilation.\n\nFor example, without compiling files in the src/example directory:\n\nexport default {\n  tools: {\n    babel(config, { addExcludes }) {\n      addExcludes('src/example');\n    },\n  },\n};\n\n\n# modifyPresetEnvOptions\n\nModify the configuration of @babel/preset-env, the configuration you pass in will be shallowly merged with default config. For example:\n\nexport default {\n  tools: {\n    babel(config, { modifyPresetEnvOptions }) {\n      modifyPresetEnvOptions({\n        targets: {\n          browsers: ['last 2 versions'],\n        },\n      });\n    },\n  },\n};\n\n\n# modifyPresetReactOptions\n\nModify the configuration of @babel/preset-react, the configuration you pass in will be shallowly merged with default config. For example:\n\nexport default {\n  tools: {\n    babel(config, { modifyPresetReactOptions }) {\n      modifyPresetReactOptions({\n        pragma: 'React.createElement',\n      });\n    },\n  },\n};\n\n\n\n# tools.cssExtract\n\n * Type: false | Object | Function\n * Default\n\n{\n  // The loader options\n  loaderOptions: {},\n  // The plugin options\n  pluginOptions: {\n    // The default value of cssPath is `static/css`\n    // while the default value of cssFilename is `[name].[contenthash:8].css`\n    filename: `${cssPath}/${cssFilename}`,\n    chunkFilename: `${cssPath}/async/${cssFilename}`,\n    ignoreOrder: true,\n  }\n}\n\n\nThe config of mini-css-extract-plugin can be modified through tools.cssExtract.\n\n\n# Object Type\n\nWhen this value is of type Object, it is merged with the default config via Object.assign. For example:\n\nexport default {\n  tools: {\n    cssExtract: {\n      pluginOptions: {\n        filename: 'static/css/[name].[contenthash:8].css',\n      },\n    },\n  },\n};\n\n\n\n# Function Type\n\nWhen the value is of type Function, the default config is passed in as the first parameter. You can modify the config object directly, or return an object as the final config. For example:\n\nexport default {\n  tools: {\n    cssExtract: config => {\n      config.pluginOptions.filename = 'static/css/[name].[contenthash:8].css';\n      return config;\n    },\n  },\n};\n\n\nFor more config details, please refer to mini-css-extract-plugin.\n\n\n# Boolean Type\n\nThe built-in mini-css-extract-plugin plugins can be disabled by set tools.cssExtract to false.\n\nexport default {\n  tools: {\n    cssExtract: false,\n  },\n};\n\n\n\n# tools.cssLoader\n\n * Type: Object | Function\n * Default: undefined\n\nThe config of css-loader can be modified through tools.cssLoader. The default config is as follows:\n\n{\n  importLoaders: 1,\n  modules: {\n    auto: true,\n    exportLocalsConvention: 'camelCase',\n    // isProd indicates that the production build\n    localIdentName: isProd\n      ? '[hash:base64]'\n      : '[path][name]__[local]--[hash:base64:5]',\n    // isServer indicates SSR build\n    exportOnlyLocals: isServer,\n  },\n  // The default value of enableSourceMap in production build is true\n  sourceMap: enableSourceMap,\n}\n\n\n\n# Object Type\n\nWhen this value is of type Object, it is merged with the default config via Object.assign. For example:\n\nexport default {\n  tools: {\n    cssLoader: {\n      modules: {\n        localIdentName: '[path][name]__[local]--[hash:base64:5]',\n      },\n    },\n  },\n};\n\n\n\n# Function Type\n\nWhen the value is of type Function, the default config is passed in as the first parameter. You can modify the config object directly, or return an object as the final config. For example:\n\nexport default {\n  tools: {\n    cssLoader: config => {\n      config.modules.localIdentName = '[path][name]__[local]--[hash:base64:5]';\n      return config;\n    },\n  },\n};\n\n\n\n# tools.devServer\n\n * Type: Object\n * Default: {}\n\nThe config of DevServer can be modified through tools.devServer.\n\n\n# Options\n\n# after\n\n * Type: Array\n * Default: []\n\nProvides the ability to execute custom middleware after all other middleware internally within the server.\n\nexport default {\n  tools: {\n    devServer: {\n      after: [\n        async (req, res, next) => {\n          console.log('after dev middleware');\n          next();\n        },\n      ],\n    },\n  },\n};\n\n\n# before\n\n * Type: Array\n * Default: []\n\nProvides the ability to execute custom middleware prior to all other middleware internally within the server.\n\nexport default {\n  tools: {\n    devServer: {\n      before: [\n        async (req, res, next) => {\n          console.log('before dev middleware');\n          next();\n        },\n      ],\n    },\n  },\n};\n\n\n# client\n\n * Type:\n\n{\n    /** The path which the middleware is serving the event stream on */\n    path?: string;\n    /** Specify a port number to listen for requests on */\n    port?: string;\n    /** Specify a host to use */\n    host?: string;\n}\n\n\n * Default:\n\n{\n    path: '/webpack-hmr',\n    port: '8080',\n    host: networkAddress || 'localhost',\n}\n\n\nThe config of hmr client.\n\n# devMiddleware\n\n * Type:\n\n{\n  writeToDisk: boolean | ((filename: string) => boolean);\n}\n\n\n * Default:\n\n{\n  writeToDisk: (file: string) => !file.includes('.hot-update.') && !file.endsWith('.map'),\n}\n\n\nThe config of devMiddleware. Current options is the subset of webpack-dev-middleware.\n\n# headers\n\n * Type: Record<string, string>\n * Default: undefined\n\nAdds headers to all responses.\n\nexport default {\n  tools: {\n    devServer: {\n      headers: {\n        'X-Custom-Foo': 'bar',\n      },\n    },\n  },\n};\n\n\n# historyApiFallback\n\n * Type: boolean | ConnectHistoryApiFallbackOptions\n * Default: false\n\nThe index.html page will likely have to be served in place of any 404 responses. Enable devServer.historyApiFallback by setting it to true:\n\nexport default {\n  tools: {\n    devServer: {\n      historyApiFallback: true,\n    },\n  },\n};\n\n\nFor more options and information, see the connect-history-api-fallback documentation.\n\n# hot\n\n * Type: boolean\n * Default: true\n\nEnable Hot Module Replacement feature.\n\n# https\n\n * Type: boolean | { key: string; cert: string }\n * Default: false\n\nBy default, DevServer will be served over HTTP. It can optionally be served over HTTPS by setting devServer.https to true, and will disable the HTTP server.\n\nYou can also manually pass in the certificate and corresponding private key required by the HTTPS server:\n\nexport default {\n  tools: {\n    devServer: {\n      https: {\n        key: fs.readFileSync('certificates/private.pem'),\n        cert: fs.readFileSync('certificates/public.pem'),\n      },\n    },\n  },\n};\n\n\n# liveReload\n\n * Type: boolean\n * Default: true\n\nBy default, the DevServer will reload/refresh the page when file changes are detected（devServer.hot option must be disabled in order for liveReload to take effect）. Disable devServer.liveReload by setting it to false.\n\n# setupMiddlewares\n\n * Type:\n\nArray<\n  (\n    middlewares: {\n      unshift: (...handlers: RequestHandler[]) => void;\n      push: (...handlers: RequestHandler[]) => void;\n    },\n    server: {\n      sockWrite: (\n        type: string,\n        data?: string | boolean | Record<string, any>,\n      ) => void;\n    },\n  ) => void\n>;\n\n\n * Default: undefined\n\nProvides the ability to execute a custom function and apply custom middlewares.\n\nThe order among several different types of middleware is: devServer.before => unshift => internal middlewares => push => devServer.after.\n\nexport default {\n  tools: {\n    devServer: {\n      setupMiddlewares: [\n        (middlewares, server) => {\n          middlewares.unshift((req, res, next) => {\n            next();\n          });\n\n          middlewares.push((req, res, next) => {\n            next();\n          });\n        },\n      ],\n    },\n  },\n};\n\n\nIt is possible to use some server api to meet special scenario requirements:\n\n * sockWrite. Allow send some message to hmr client, and then the hmr client will take different actions depending on the message type. If you send a \"content changed\" message, the page will reload.\n\nexport default {\n  tools: {\n    devServer: {\n      setupMiddlewares: [\n        (middlewares, server) => {\n          // add custom watch & trigger page reload when change\n          watcher.on('change', changed => {\n            server.sockWrite('content-changed');\n          });\n        },\n      ],\n    },\n  },\n};\n\n\n# proxy\n\n * Type: Record<string, string> | Record<string, ProxyDetail>\n * Default: undefined\n\nProxying some URLs.\n\nexport default {\n  tools: {\n    devServer: {\n      proxy: {\n        '/api': 'http://localhost:3000',\n      },\n    },\n  },\n};\n\n\nA request to /api/users will now proxy the request to http://localhost:3000/api/users.\n\nIf you don't want /api to be passed along, we need to rewrite the path:\n\nexport default {\n  tools: {\n    devServer: {\n      proxy: {\n        '/api': {\n          target: 'http://localhost:3000',\n          pathRewrite: { '^/api': '' },\n        },\n      },\n    },\n  },\n};\n\n\nThe DevServer Proxy makes use of the http-proxy-middleware package. Check out its documentation for more advanced usages.\n\nThe full type definition of DevServer Proxy is:\n\nimport type { Options as HttpProxyOptions } from 'http-proxy-middleware';\n\ntype ProxyDetail = HttpProxyOptions & {\n  bypass?: (\n    req: IncomingMessage,\n    res: ServerResponse,\n    proxyOptions: ProxyOptions,\n  ) => string | undefined | null | false;\n  context?: string | string[];\n};\n\ntype ProxyOptions =\n  | Record<string, string>\n  | Record<string, ProxyDetail>\n  | ProxyDetail[]\n  | ProxyDetail;\n\n\nIn addition to the http-proxy-middleware option, we also support the bypass and context configuration:\n\n * bypass：bypass the proxy based on the return value of a function.\n   * Return null or undefined to continue processing the request with proxy.\n   * Return false to produce a 404 error for the request.\n   * Return a path to serve from, instead of continuing to proxy the request.\n * context：If you want to proxy multiple, specific paths to the same target, you can use an array of one or more objects with a context property.\n\n// custom bypass\nexport default {\n  tools: {\n    devServer: {\n      proxy: {\n        '/api': {\n          target: 'http://localhost:3000',\n          bypass: function (req, res, proxyOptions) {\n            if (req.headers.accept.indexOf('html') !== -1) {\n              console.log('Skipping proxy for browser request.');\n              return '/index.html';\n            }\n          },\n        },\n      },\n    },\n  },\n};\n\n\n// proxy multiple\nexport default {\n  tools: {\n    devServer: {\n      proxy: [\n        {\n          context: ['/auth', '/api'],\n          target: 'http://localhost:3000',\n        },\n      ],\n    },\n  },\n};\n\n\n# watch\n\n * Type: boolean\n * Default: true\n\nWhether to watch files change in directories such as mock/, server/, api/.\n\n\n# tools.htmlPlugin\n\n * Type: false | Object | Function\n * Default:\n\nconst defaultHtmlPluginOptions = {\n  inject, // corresponding to the html.inject config\n  favicon, // corresponding to html.favicon config\n  filename, // generated based on output.distPath and entryName\n  template, // defaults to the built-in HTML template path\n  templateParameters, // corresponding to the html.templateParameters config\n  chunks: [entryName],\n  minify: {\n    removeComments: true,\n    useShortDoctype: true,\n    keepClosingSlash: true,\n    collapseWhitespace: true,\n    removeRedundantAttributes: true,\n    removeScriptTypeAttributes: true,\n    removeStyleLinkTypeAttributes: true,\n  },\n};\n\n\nThe configs of html-webpack-plugin can be modified through tools.htmlPlugin.\n\n\n# Object Type\n\nWhen tools.htmlPlugin is Object type, the value will be merged with the default config via Object.assign.\n\nexport default {\n  tools: {\n    htmlPlugin: {\n      scriptLoading: 'blocking',\n    },\n  },\n};\n\n\n\n# Function Type\n\nWhen tools.htmlPlugin is Function type:\n\n * The first parameter is the default config, which can be modified directly.\n * The second parameter is also an object, containing the entry name and the entry value.\n * The Function can return a new object as the final config.\n\nexport default {\n  tools: {\n    htmlPlugin(config, { entryName, entryValue }) {\n      if (entryName === 'main') {\n        config.scriptLoading = 'blocking';\n      }\n    },\n  },\n};\n\n\n\n# Boolean Type\n\nThe built-in html-webpack-plugin plugins can be disabled by set tools.htmlPlugin to false.\n\nexport default {\n  tools: {\n    htmlPlugin: false,\n  },\n};\n\n\n\n# tools.inspector\n\n * Type: Object | Function | undefined\n * Default: undefined\n\nYou can enable or configure the Webpack Inspector through tools.inspector.\n\nWhen the configuration is not undefined, it means that webpack-inspector is enabled, and the type of tools.inspector can be Object or Function.\n\n\n# Object Type\n\nWhen tools.inspector is configured with type Object, it is merged with the default configuration via Object.assign. For example:\n\nexport default {\n  tools: {\n    inspector: {\n      // The default port is 3333\n      port: 3334,\n    },\n  },\n};\n\n\n\n# Function Type\n\nWhen tools.inspector is of Function type, the default configuration is passed as the first parameter and can be directly modified or returned as the final result. For example:\n\nexport default {\n  tools: {\n    inspector(config) {\n      config.port = 3334;\n    },\n  },\n};\n\n\n\n# tools.less\n\n * Type: Object | Function\n * Default\n\n{\n  lessOptions: {\n    javascriptEnabled: true\n  },\n  sourceMap: false,\n}\n\n\nYou can modify the config of less-loader via tools.less.\n\n\n# Object Type\n\nWhen tools.less is configured as Object type, it is merged with the default config through Object.assign. For example:\n\nexport default {\n  tools: {\n    less: {\n      lessOptions: {\n        javascriptEnabled: false,\n      },\n    },\n  },\n};\n\n\n\n# Function Type\n\nWhen tools.less is Function type, the default config is passed as the first parameter, which can be directly modified or returned as the final result. The second parameter provides some utility functions that can be called directly. For example:\n\nexport default {\n  tools: {\n    less(config) {\n      // Modify the config of lessOptions\n      config.lessOptions = {\n        javascriptEnabled: false,\n      };\n    },\n  },\n};\n\n\n\n# Util Function\n\n# addExcludes\n\nUsed to specify which files less-loader does not compile, for example:\n\nexport default {\n  tools: {\n    less(config, { addExcludes }) {\n      addExcludes(/node_modules/);\n    },\n  },\n};\n\n\n\n# tools.minifyCss\n\n * Type: Object | Function | undefined\n * Default: {}\n\nWhen building for production, Builder will minimize the CSS code through css-minimizer-webpack-plugin. The config of css-minimizer-webpack-plugin can be modified via tools.minifyCss.\n\n\n# Object Type\n\nWhen tools.minifyCss is Object type, it will be merged with the default config via Object.assign.\n\nFor example, modify the preset config of cssnano:\n\nexport default {\n  tools: {\n    minifyCss: {\n      minimizerOptions: {\n        preset: require.resolve('cssnano-preset-simple'),\n      },\n    },\n  },\n};\n\n\n\n# Function Type\n\nWhen tools.minifyCss is Function type, the default config is passed in as the first parameter, the config object can be modified directly, or a value can be returned as the final result.\n\nexport default {\n   tools: {\n    minifyCss: options => {\n      options.minimizerOptions = {\n        preset: require.resolve('cssnano-preset-simple'),\n      },\n    }\n  }\n};\n\n\n\n# tools.postcss\n\n * Type: Object | Function\n * Default:\n\nconst defaultOptions = {\n  postcssOptions: {\n    plugins: [\n      require('postcss-flexbugs-fixes'),\n      require('postcss-custom-properties'),\n      require('postcss-initial'),\n      require('postcss-page-break'),\n      require('postcss-font-variant'),\n      require('postcss-media-minmax'),\n      require('postcss-nesting'),\n      require('autoprefixer')({\n        flexbox: 'no-2009',\n      }),\n    ],\n    // Depends on production environment, and whether `output.disableSourceMap` is set\n    sourceMap: enableSourceMap,\n  },\n};\n\n\nBuilder integrates PostCSS by default, you can configure postcss-loader through tools.postcss.\n\n\n# Object Type\n\nWhen this value is of type Object, it is merged with the default config via Object.assign. For example:\n\nexport default {\n  tools: {\n    postcss: {\n      // Because `Object.assign` is used, the default postcssOptions will be overwritten.\n      postcssOptions: {\n        plugins: [require('postcss-px-to-viewport')],\n      },\n    },\n  },\n};\n\n\n\n# Function Type\n\nWhen the value is of type Function, the internal default config is passed as the first parameter, and the config object can be modified directly without returning, or an object can be returned as the final result; the second parameter is a set of tool functions for modifying the postcss-loader config.\n\nFor example, you need to add a PostCSS plugin on the basis of the original plugin, and push a new plugin to the postcssOptions.plugins array:\n\nexport default {\n  tools: {\n    postcss: opts => {\n      opts.postcssOptions.plugins.push(require('postcss-px-to-viewport'));\n    },\n  },\n};\n\n\nWhen you need to pass parameters to the PostCSS plugin, you can pass them in by function parameters:\n\nexport default {\n  tools: {\n    postcss: opts => {\n      const viewportPlugin = require('postcss-px-to-viewport')({\n        viewportWidth: 375,\n      });\n      opts.postcssOptions.plugins.push(viewportPlugin);\n    },\n  },\n};\n\n\ntools.postcss can return a config object and completely replace the default config:\n\nexport default {\n  tools: {\n    postcss: () => {\n      return {\n        postcssOptions: {\n          plugins: [require('postcss-px-to-viewport')],\n        },\n      };\n    },\n  },\n};\n\n\n\n# Util Functions\n\n# addPlugins\n\nFor adding additional PostCSS plugins.\n\nexport default {\n  tools: {\n    postcss: (config, { addPlugins }) => {\n      // Add a PostCSS Plugin\n      addPlugins(require('postcss-preset-env'));\n      // Add multiple PostCSS Plugins\n      addPlugins([require('postcss-preset-env'), require('postcss-import')]);\n    },\n  },\n};\n\n\n\n# tools.pug\n\n * Type: true | Object | Function | undefined\n * Default: false\n\nConfigure the Pug template engine.\n\n\n# Boolean Type\n\nPug template engine is not enabled by default, you can enable it by setting tools.pug to true.\n\nexport default {\n  tools: {\n    pug: true,\n  },\n};\n\n\nWhen enabled, you can use index.pug as the template file in html.template config.\n\n\n# Object Type\n\nWhen tools.terser is Object type, you can passing the Pug options:\n\nexport default {\n  tools: {\n    pug: {\n      doctype: 'xml',\n    },\n  },\n};\n\n\nFor detailed options, please refer to Pug API Reference.\n\n\n# Function Type\n\nWhen tools.pug is Function type, the default configuration is passed in as the first parameter, the configuration object can be modified directly, or a value can be returned as the final result.\n\nexport default {\n  tools: {\n    pug(config) {\n      config.doctype = 'xml';\n    },\n  },\n};\n\n\n\n# tools.sass\n\n * Type: Object | Function\n * Default\n\n{\n  sourceMap: false;\n}\n\n\nYou can modify the config of sass-loader via tools.sass.\n\n\n# Object Type\n\nWhen tools.sass is Object type, it is merged with the default config via Object.assign. For example:\n\nexport default {\n  tools: {\n    sass: {\n      sourceMap: true,\n    },\n  },\n};\n\n\n\n# Function Type\n\nWhen tools.sass is Function type, the default config is passed as the first parameter, which can be directly modified or returned as the final result. The second parameter provides some utility functions that can be called directly. For Example:\n\nexport default {\n  tools: {\n    sass(config) {\n      // Modify sourceMap config\n      config.additionalData = async (content, loaderContext) => {\n        // ...\n      };\n    },\n  },\n};\n\n\n\n# Utility Function\n\n# addExcludes\n\nUsed to specify which files sass-loader does not compile, for example:\n\nexport default {\n  tools: {\n    sass(config, { addExcludes }) {\n      addExcludes(/node_modules/);\n    },\n  },\n};\n\n\n\n# tools.styleLoader\n\n * Type: Object | Function\n * Default: undefined\n\nThe config of style-loader can be set through tools.styleLoader. The default config is an empty object.\n\nIt is worth noting that builder does not enable style-loader by default. If this value is set to Object/Function type, style-loader will be enabled in development environment.In production build, we will still use mini-css-extract-plugin to extract CSS.\n\n\n# Object Type\n\nWhen this value is of type Object, it is merged with the default config via Object.assign. For example:\n\nexport default {\n  tools: {\n    styleLoader: {\n      loaderOptions: {\n        insert: 'head',\n      },\n    },\n  },\n};\n\n\n\n# Function Type\n\nWhen the value is of type Function, the default config is passed in as the first parameter. You can modify the config object directly, or return an object as the final config. For example:\n\nexport default {\n  tools: {\n    styleLoader: config => {\n      config.loaderOptions.insert = 'head';\n      return config;\n    },\n  },\n};\n\n\n\n# tools.styledComponents\n\n * Type: Object | Function\n * Default\n\n{\n  pure: true,\n  displayName: true,\n  // `isSSR` is true in SSR build\n  ssr: isSSR,\n  transpileTemplateLiterals: true,\n}\n\n\ntools.styledComponents config is corresponding to babel-plugin-styled-components.\n\nWhen the value is of type Object, use the Object.assign function to merge with the default config. For example:\n\nexport default {\n  tools: {\n    styledComponents: {\n      pure: false,\n    },\n  },\n};\n\n\nWhen the config is of type Function, the first parameter is the default configuration, and the second parameter provides some utility functions that can be called directly:\n\nexport default {\n  tools: {\n    styledComponents(config) {\n      config.pure = false;\n    },\n  },\n};\n\n\n\n# tools.terser\n\n * Type: Object | Function | undefined\n * Default:\n\nconst defaultTerserOptions = {\n  terserOptions: {\n    mangle: {\n      safari10: true,\n    },\n  },\n};\n\n\nWhen building for production, Builder will minimize the JavaScript code through terser-webpack-plugin. The config of terser-webpack-plugin can be modified via tools.terser.\n\n\n# Object Type\n\nWhen tools.terser is Object type, it will be merged with the default config via Object.assign.\n\nFor example, to exclude some files from minification:\n\nexport default {\n  tools: {\n    terser: {\n      exclude: /\\/excludes/,\n    },\n  },\n};\n\n\n\n# Function Type\n\nWhen tools.terser is Function type, the default config is passed in as the first parameter, the config object can be modified directly, or a value can be returned as the final result.\n\nexport default {\n  tools: {\n    terser: opts => {\n      opts.exclude = /\\/excludes/;\n    },\n  },\n};\n\n\n\n# tools.tsLoader\n\n * Type： Object | Function | undefined\n * Default:undefined\n\nts-loader is not enabled by default in the project. When tools.tsLoader is not undefined, builder will use ts-loader instead of babel-loader to compile TypeScript code.\n\n\n# Object Type\n\nWhen this value is of type Object, it is merged with the default configuration via Object.assign.\n\nThe default configuration is as follows:\n\n{\n  \"compilerOptions\": {\n    \"target\": \"es5\",\n    \"module\": \"ESNext\"\n  },\n  \"transpileOnly\": true,\n  \"allowTsInNodeModules\": true\n}\n\n\nYou can override the default configuration via the tools.tsLoader configuration item:\n\nexport default {\n  tools: {\n    tsLoader: {\n      allowTsInNodeModules: false,\n    },\n  },\n};\n\n\n\n# Function Type\n\nWhen this value is of type Function, the default configuration is passed in as the first parameter, the configuration object can be modified directly, or an object can be returned as the final configuration.The second parameter is the util functions to modify the ts-loader configuration. For example:\n\nexport default {\n  tools: {\n    tsLoader: opts => {\n      opts.allowTsInNodeModules = false;\n    },\n  },\n};\n\n\n\n# Util Functions\n\nWhen the value of tools.tsLoader is of type Function, the utils functions available for the second parameter are as follows:\n\n# addIncludes\n\nType: (includes: string | RegExp | Array<string | RegExp>) => void\n\nBy default, only the application code in the src directory will be compiled. Use addIncludes to specify ts-loader to compile some files under node_modules. For example:\n\nexport default {\n  tools: {\n    tsLoader: (config, { addIncludes }) => {\n      addIncludes([/node_modules\\/react/]);\n    },\n  },\n};\n\n\n# addExcludes\n\nType: (excludes: string | RegExp | Array<string | RegExp>) => void\n\nContrary to addIncludes, specify ts-loader to exclude certain files when compiling.\n\nFor example, without compiling files in the src/example directory:\n\nexport default {\n  tools: {\n    tsLoader: (config, { addExcludes }) => {\n      addExcludes([/src\\/example\\//]);\n    },\n  },\n};\n\n\n\n# tools.tsChecker\n\n * Type: boolean | Object | Function\n * Default: true\n\nBy default, the fork-ts-checker-webpack-plugin is enabled for type checking.\n\nYou can:\n\n * Configure to true to enable type checking by fork-ts-checker-webpack-plugin.\n * Configure to false to disable type checking by fork-ts-checker-webpack-plugin.\n * Configure as Object or Function to modify the default config.\n\nThe default config is as follows:\n\n> In most cases you don't need to modify the default tools.tsChecker config.\n\n{\n  typescript: {\n    // avoid OOM issue\n    memoryLimit: 8192,\n    // use tsconfig of user project\n    configFile: tsconfigPath,\n    // use typescript of user project\n    typescriptPath: require.resolve('typescript'),\n  },\n  issue: {\n    exclude: [\n      { file: '**/*.(spec|test).ts' },\n      { file: '**/node_modules/**/*' },\n    ],\n  },\n  logger: {\n    log() {\n      // do nothing\n      // we only want to display error messages\n    },\n    error(message: string) {\n      console.error(message.replace(/ERROR/g, 'Type Error'));\n    },\n  },\n},\n\n\n\n# Object Type\n\nWhen this value is of type Object, it is merged with the default config via Object.assign.\n\n\n# Function Type\n\nWhen the value is of type Function, the default config is passed in as the first parameter. You can modify the config object directly, or return an object as the final config.\n\n\n# tools.webpack\n\n * Type: Object | Function | undefined\n * Default: undefined\n\ntools.webpack is used to configure webpack。\n\n> tools.webpackChain is also used to modify the webpack configuration, and the function is more powerful. It is recommended to use tools.webpackChain first.\n\n\n# Object Type\n\nYou can configure it as an object, which will be merged with the original webpack configuration through webpack-merge. For example:\n\nexport default {\n  tools: {\n    webpack: {\n      resolve: {\n        alias: {\n          '@util': 'src/util',\n        },\n      },\n    },\n  },\n};\n\n\n\n# Function Type\n\nYou can also configure it as a function, which accepts one parameter, the original webpack configuration, you can modify this configuration, and then return a new configuration. For example:\n\nexport default {\n  tools: {\n    webpack: config => {\n      config.resolve.alias['@util'] = 'src/util';\n      return config;\n    },\n  },\n};\n\n\nThe second parameter of this function is an object that contains some information about the tool collection. Details are as follows:\n\n\n# Utils\n\n# env\n\n * Type: 'development' | 'production' | 'test'\n\nThe env parameter can be used to determine whether the current environment is development, production or test. For example:\n\nexport default {\n  tools: {\n    webpack: (config, { env }) => {\n      if (env === 'development') {\n        config.devtool = 'cheap-module-eval-source-map';\n      }\n      return config;\n    },\n  },\n};\n\n\n# isProd\n\n * Type: boolean\n\nThe isProd parameter can be used to determine whether the current environment is production. For example:\n\nexport default {\n  tools: {\n    webpack: (config, { isProd }) => {\n      if (isProd) {\n        config.devtool = 'source-map';\n      }\n      return config;\n    },\n  },\n};\n\n\n# target\n\n * Type: 'web' | 'node' | 'modern-web'\n\nThe target parameter can be used to determine the current target. For example:\n\nexport default {\n  tools: {\n    webpack: (config, { target }) => {\n      if (target === 'node') {\n        // ...\n      }\n      return config;\n    },\n  },\n};\n\n\n# webpack\n\n * Type: Object\n\nThe webpack parameter is the original webpack configuration. For example:\n\nexport default {\n  tools: {\n    webpack: (config, { webpack }) => {\n      config.plugins.push(new webpack.ProgressPlugin());\n      return config;\n    },\n  },\n};\n\n\n\n# tools.webpackChain\n\n * Type: Function | undefined\n * Default: undefined\n\nYou can modify the webpack configuration by configuring tools.webpackChain which is type of Function. The function receives two parameters, the first is the original webpack chain object, and the second is an object containing some utils.\n\nCompared with tools.webpack, webpack-chain not only supports chained calls, but also can locate built-in Rule or Plugin based on aliases, so as to achieve precise config modification. We recommend using tools.webpackChain instead of tools.webpack.\n\n> tools.webpackChain is executed earlier than tools.webpack and thus will be overridden by changes in tools.webpack.\n\n\n# Utils\n\n# env\n\n * Type: 'development' | 'production' | 'test'\n\nThe env parameter can be used to determine whether the current environment is development, production or test. For example:\n\nexport default {\n  tools: {\n    webpack: (config, { env }) => {\n      if (env === 'development') {\n        config.devtool = 'cheap-module-eval-source-map';\n      }\n      return config;\n    },\n  },\n};\n\n\n# isProd\n\n * Type: boolean\n\nThe isProd parameter can be used to determine whether the current environment is production. For example:\n\nexport default {\n  tools: {\n    webpack: (config, { isProd }) => {\n      if (isProd) {\n        config.devtool = 'source-map';\n      }\n      return config;\n    },\n  },\n};\n\n\n# target\n\n * Type: 'web' | 'node' | 'modern-web'\n\nThe target parameter can be used to determine the current environment. For example:\n\nexport default {\n  tools: {\n    webpack: (config, { target }) => {\n      if (target === 'node') {\n        // ...\n      }\n      return config;\n    },\n  },\n};\n\n\n# webpack\n\n * Type: Object\n\nThe webpack parameter is the original webpack configuration object. For example:\n\nexport default {\n  tools: {\n    webpack: (config, { webpack }) => {\n      config.plugins.push(new webpack.ProgressPlugin());\n      return config;\n    },\n  },\n};\n\n\n# CHAIN_ID\n\nSome common Chain IDs are predefined in the Builder, and you can use these IDs to locate the built-in Rule or Plugin.\n\n# CHAIN_ID.RULE\n\nID           DESCRIPTION\nRULE.MJS     Rule for mjs\nRULE.JS      Rule for js\nRULE.TS      Rule for ts\nRULE.CSS     Rule for css\nRULE.LESS    Rule for less\nRULE.SASS    Rule for sass\nRULE.PUG     Rule for pug\nRULE.TOML    Rule for toml\nRULE.YAML    Rule for yaml\nRULE.FONT    Rule for font\nRULE.IMAGE   Rule for image\nRULE.MEDIA   Rule for media\n\n\n# CHAIN_ID.ONE_OF\n\nONE_OF.XXX can match a certain type of rule in the rule array.\n\nID                  DESCRIPTION\nONE_OF.SVG          Rules for SVG, automatic choice between data URI and\n                    separate file\nONE_OF.SVG_URL      Rules for SVG, output as a separate file\nONE_OF.SVG_INLINE   Rules for SVG, inlined into bundles as data URIs\nONE_OF.SVG_ASSETS   Rules for SVG, automatic choice between data URI and\n                    separate file\n\n\n# CHAIN_ID.USE\n\nUSE.XXX can match a certain loader.\n\nID                     DESCRIPTION\nUSE.TS                 correspond to ts-loader\nUSE.CSS                correspond to css-loader\nUSE.LESS               correspond to less-loader\nUSE.SASS               correspond to sass-loader\nUSE.PUG                correspond to pug-loader\nUSE.TOML               correspond to toml-loader\nUSE.YAML               correspond to yaml-loader\nUSE.FILE               correspond to file-loader\nUSE.URL                correspond to url-loader\nUSE.SVGR               correspond to @svgr/webpack\nUSE.BABEL              correspond to babel-loader\nUSE.STYLE              correspond to style-loader\nUSE.POSTCSS            correspond to postcss-loader\nUSE.MARKDOWN           correspond to markdown-loader\nUSE.CSS_MODULES_TS     correspond to css-modules-typescript-loader\nUSE.MINI_CSS_EXTRACT   correspond to mini-css-extract-plugin.loader\n\n\n# CHAIN_ID.PLUGIN\n\nPLUGIN.XXX can match a certain webpack plugin.\n\nID                             DESCRIPTION\nPLUGIN.HMR                     correspond to HotModuleReplacementPlugin\nPLUGIN.COPY                    correspond to CopyWebpackPlugin\nPLUGIN.HTML                    correspond to HtmlWebpackPlugin, you need to splice the\n                               entry name when using: ${PLUGIN.HTML}-${entryName}\nPLUGIN.DEFINE                  correspond to DefinePlugin\nPLUGIN.IGNORE                  correspond to IgnorePlugin\nPLUGIN.BANNER                  correspond to BannerPlugin\nPLUGIN.PROGRESS                correspond to Webpackbar\nPLUGIN.APP_ICON                correspond to AppIconPlugin\nPLUGIN.LOADABLE                correspond to LoadableWebpackPlugin\nPLUGIN.MANIFEST                correspond to WebpackManifestPlugin\nPLUGIN.TS_CHECKER              correspond to ForkTsCheckerWebpackPlugin\nPLUGIN.INLINE_HTML             correspond to InlineChunkHtmlPlugin\nPLUGIN.BUNDLE_ANALYZER         correspond to WebpackBundleAnalyzer\nPLUGIN.BOTTOM_TEMPLATE         correspond to BottomTemplatePlugin\nPLUGIN.MINI_CSS_EXTRACT        correspond to MiniCssExtractPlugin\nPLUGIN.REACT_FAST_REFRESH      correspond to ReactFastRefreshPlugin\nPLUGIN.NODE_POLYFILL_PROVIDE   correspond to ProvidePlugin for node polyfills\nPLUGIN.INSPECTOR               correspond to @modern-js/inspector-webpack-plugin\nPLUGIN.SUBRESOURCE_INTEGRITY   correspond to webpack-subresource-integrity\nPLUGIN.ASSETS_RETRY            correspond to webpack static asset retry plugin in Builder\nAUTO_SET_ROOT_SIZE             correspond to automatically set root font size plugin in\n                               Builder\n\n\n# CHAIN_ID.MINIMIZER\n\nMINIMIZER.XXX can match a certain minimizer.\n\nID                  DESCRIPTION\nMINIMIZER.JS        correspond to TerserWebpackPlugin\nMINIMIZER.CSS       correspond to CssMinimizerWebpackPlugin\nMINIMIZER.ESBUILD   correspond to ESBuildPlugin\n\n\n# Examples\n\nThe following are some common configuration examples, see the full webpack-chain API webpack-chain documentation.\n\n# Add/Modify/Delete loader\n\nexport default {\n  tools: {\n    webpackChain: chain => {\n      // Add loader\n      chain.module\n        .rule('md')\n        .test(/\\.md$/)\n        .use('md-loader')\n        .loader('md-loader');\n      // Modify loader\n      chain.module\n        .rule(CHAIN_ID.RULE.JS)\n        .use(CHAIN_ID.USE.BABEL)\n        .tap(options => {\n          options.plugins.push('babel-plugin-xxx');\n          return options;\n        });\n      // Delete loader\n      chain.module.rule(CHAIN_ID.RULE.JS).uses.delete(CHAIN_ID.USE.BABEL);\n    },\n  },\n};\n\n\n# Add/Modify/Delete plugin\n\nexport default {\n  tools: {\n    webpackChain: chain => {\n      // Add plugin\n      chain.plugin('define').use(webpack.DefinePlugin, [\n        {\n          'process.env': {\n            NODE_ENV: JSON.stringify(process.env.NODE_ENV),\n          },\n        },\n      ]);\n      // Modify plugin\n      chain.plugin(CHAIN_ID.PLUGIN.HMR).tap(options => {\n        options[0].fullBuildTimeout = 200;\n        return options;\n      });\n      // Delete plugin\n      chain.plugins.delete(CHAIN_ID.PLUGIN.HMR);\n    },\n  },\n};\n",normalizedContent:"# tools config\n\nthis section describes some low-level tools configurations in modern.js builder.\n\n\n# tools.autoprefixer\n\n * type: object | function\n * default\n\n{\n  flexbox: 'no-2009',\n  // depends on the browserslist config in the project\n  // and the `output.overridebrowserslist` (higher priority) config\n  overridebrowserslist: browserslist,\n}\n\n\nyou can modify the config of autoprefixer by tools.autoprefixer.\n\n\n# object type\n\nwhen tools.autoprefixer is configured as object type, it is merged with the default config through object.assign. for example:\n\nexport default {\n  tools: {\n    autoprefixer: {\n      flexbox: 'no-2009',\n    },\n  },\n};\n\n\n\n# function type\n\nwhen tools.autoprefixer is of function type, the default config is passed as the first parameter and can be directly modified or returned as the final result. for example:\n\nexport default {\n  tools: {\n    autoprefixer(config) {\n      // modify flexbox config\n      config.flexbox = 'no-2009';\n    },\n  },\n};\n\n\n\n# tools.babel\n\n * type: object | function\n * default: undefined\n\nby tools.babel you can modify babel-loader's' options.\n\n\n# object type\n\nwhen tools.babel's type is object, the config will be merged with default config by object.assign.\n\nexport default {\n  tools: {\n    babel: {\n      plugins: [\n        [\n          'babel-plugin-import',\n          {\n            libraryname: 'xxx-components',\n            librarydirectory: 'es',\n            style: true,\n          },\n        ],\n      ],\n    },\n  },\n};\n\n\n\n# function type\n\nwhen tools.babel's type is function，the default babel config will be passed in as the first parameter, the config object can be modified directly, or a value can be returned as the final result. the second parameter provides some util functions that can be called directly:\n\nexport default {\n  tools: {\n    babel(config) {\n      // add a babel plugin\n      // note: the plugin have been added to the default config to support antd load on demand\n      config.plugins.push([\n        'babel-plugin-import',\n        {\n          libraryname: 'xxx-components',\n          librarydirectory: 'es',\n          style: true,\n        },\n      ]);\n    },\n  },\n};\n\n\n\n# util functions\n\nwhen tools.babel is of type function, the tool functions available for the second parameter are as follows:\n\n# addplugins\n\nadd babel plugin. for example:\n\nexport default {\n  tools: {\n    babel(config, { addplugins }) {\n      addplugins([\n        [\n          'babel-plugin-import',\n          {\n            libraryname: 'xxx-components',\n            librarydirectory: 'es',\n            style: true,\n          },\n        ],\n      ]);\n    },\n  },\n};\n\n\n# addpresets\n\nadd babel preset configuration. (no need to add presets in most cases)\n\nexport default {\n  tools: {\n    babel(config, { addpresets }) {\n      addpresets(['@babel/preset-env']);\n    },\n  },\n};\n\n\n# removeplugins\n\nto remove the babel plugin, just pass in the name of the plugin to be removed.\n\nexport default {\n  tools: {\n    babel(config, { removeplugins }) {\n      removeplugins('babel-plugin-import');\n    },\n  },\n};\n\n\n# removepresets\n\nto remove the babel preset configuration, pass in the name of the preset to be removed.\n\nexport default {\n  tools: {\n    babel(config, { removepresets }) {\n      removepresets('@babel/preset-env');\n    },\n  },\n};\n\n\n# addincludes\n\nby default, babel will only compile the application code in the src directory. with addincludes you can specify that babel compile some files in node_modules. for example:\n\nexport default {\n  tools: {\n    babel(config, { addincludes }) {\n      addincludes('node_modules/xxx-components');\n    },\n  },\n};\n\n\n# addexcludes\n\ncontrary to addincludes, specifies that certain files are excluded from babel's compilation.\n\nfor example, without compiling files in the src/example directory:\n\nexport default {\n  tools: {\n    babel(config, { addexcludes }) {\n      addexcludes('src/example');\n    },\n  },\n};\n\n\n# modifypresetenvoptions\n\nmodify the configuration of @babel/preset-env, the configuration you pass in will be shallowly merged with default config. for example:\n\nexport default {\n  tools: {\n    babel(config, { modifypresetenvoptions }) {\n      modifypresetenvoptions({\n        targets: {\n          browsers: ['last 2 versions'],\n        },\n      });\n    },\n  },\n};\n\n\n# modifypresetreactoptions\n\nmodify the configuration of @babel/preset-react, the configuration you pass in will be shallowly merged with default config. for example:\n\nexport default {\n  tools: {\n    babel(config, { modifypresetreactoptions }) {\n      modifypresetreactoptions({\n        pragma: 'react.createelement',\n      });\n    },\n  },\n};\n\n\n\n# tools.cssextract\n\n * type: false | object | function\n * default\n\n{\n  // the loader options\n  loaderoptions: {},\n  // the plugin options\n  pluginoptions: {\n    // the default value of csspath is `static/css`\n    // while the default value of cssfilename is `[name].[contenthash:8].css`\n    filename: `${csspath}/${cssfilename}`,\n    chunkfilename: `${csspath}/async/${cssfilename}`,\n    ignoreorder: true,\n  }\n}\n\n\nthe config of mini-css-extract-plugin can be modified through tools.cssextract.\n\n\n# object type\n\nwhen this value is of type object, it is merged with the default config via object.assign. for example:\n\nexport default {\n  tools: {\n    cssextract: {\n      pluginoptions: {\n        filename: 'static/css/[name].[contenthash:8].css',\n      },\n    },\n  },\n};\n\n\n\n# function type\n\nwhen the value is of type function, the default config is passed in as the first parameter. you can modify the config object directly, or return an object as the final config. for example:\n\nexport default {\n  tools: {\n    cssextract: config => {\n      config.pluginoptions.filename = 'static/css/[name].[contenthash:8].css';\n      return config;\n    },\n  },\n};\n\n\nfor more config details, please refer to mini-css-extract-plugin.\n\n\n# boolean type\n\nthe built-in mini-css-extract-plugin plugins can be disabled by set tools.cssextract to false.\n\nexport default {\n  tools: {\n    cssextract: false,\n  },\n};\n\n\n\n# tools.cssloader\n\n * type: object | function\n * default: undefined\n\nthe config of css-loader can be modified through tools.cssloader. the default config is as follows:\n\n{\n  importloaders: 1,\n  modules: {\n    auto: true,\n    exportlocalsconvention: 'camelcase',\n    // isprod indicates that the production build\n    localidentname: isprod\n      ? '[hash:base64]'\n      : '[path][name]__[local]--[hash:base64:5]',\n    // isserver indicates ssr build\n    exportonlylocals: isserver,\n  },\n  // the default value of enablesourcemap in production build is true\n  sourcemap: enablesourcemap,\n}\n\n\n\n# object type\n\nwhen this value is of type object, it is merged with the default config via object.assign. for example:\n\nexport default {\n  tools: {\n    cssloader: {\n      modules: {\n        localidentname: '[path][name]__[local]--[hash:base64:5]',\n      },\n    },\n  },\n};\n\n\n\n# function type\n\nwhen the value is of type function, the default config is passed in as the first parameter. you can modify the config object directly, or return an object as the final config. for example:\n\nexport default {\n  tools: {\n    cssloader: config => {\n      config.modules.localidentname = '[path][name]__[local]--[hash:base64:5]';\n      return config;\n    },\n  },\n};\n\n\n\n# tools.devserver\n\n * type: object\n * default: {}\n\nthe config of devserver can be modified through tools.devserver.\n\n\n# options\n\n# after\n\n * type: array\n * default: []\n\nprovides the ability to execute custom middleware after all other middleware internally within the server.\n\nexport default {\n  tools: {\n    devserver: {\n      after: [\n        async (req, res, next) => {\n          console.log('after dev middleware');\n          next();\n        },\n      ],\n    },\n  },\n};\n\n\n# before\n\n * type: array\n * default: []\n\nprovides the ability to execute custom middleware prior to all other middleware internally within the server.\n\nexport default {\n  tools: {\n    devserver: {\n      before: [\n        async (req, res, next) => {\n          console.log('before dev middleware');\n          next();\n        },\n      ],\n    },\n  },\n};\n\n\n# client\n\n * type:\n\n{\n    /** the path which the middleware is serving the event stream on */\n    path?: string;\n    /** specify a port number to listen for requests on */\n    port?: string;\n    /** specify a host to use */\n    host?: string;\n}\n\n\n * default:\n\n{\n    path: '/webpack-hmr',\n    port: '8080',\n    host: networkaddress || 'localhost',\n}\n\n\nthe config of hmr client.\n\n# devmiddleware\n\n * type:\n\n{\n  writetodisk: boolean | ((filename: string) => boolean);\n}\n\n\n * default:\n\n{\n  writetodisk: (file: string) => !file.includes('.hot-update.') && !file.endswith('.map'),\n}\n\n\nthe config of devmiddleware. current options is the subset of webpack-dev-middleware.\n\n# headers\n\n * type: record<string, string>\n * default: undefined\n\nadds headers to all responses.\n\nexport default {\n  tools: {\n    devserver: {\n      headers: {\n        'x-custom-foo': 'bar',\n      },\n    },\n  },\n};\n\n\n# historyapifallback\n\n * type: boolean | connecthistoryapifallbackoptions\n * default: false\n\nthe index.html page will likely have to be served in place of any 404 responses. enable devserver.historyapifallback by setting it to true:\n\nexport default {\n  tools: {\n    devserver: {\n      historyapifallback: true,\n    },\n  },\n};\n\n\nfor more options and information, see the connect-history-api-fallback documentation.\n\n# hot\n\n * type: boolean\n * default: true\n\nenable hot module replacement feature.\n\n# https\n\n * type: boolean | { key: string; cert: string }\n * default: false\n\nby default, devserver will be served over http. it can optionally be served over https by setting devserver.https to true, and will disable the http server.\n\nyou can also manually pass in the certificate and corresponding private key required by the https server:\n\nexport default {\n  tools: {\n    devserver: {\n      https: {\n        key: fs.readfilesync('certificates/private.pem'),\n        cert: fs.readfilesync('certificates/public.pem'),\n      },\n    },\n  },\n};\n\n\n# livereload\n\n * type: boolean\n * default: true\n\nby default, the devserver will reload/refresh the page when file changes are detected（devserver.hot option must be disabled in order for livereload to take effect）. disable devserver.livereload by setting it to false.\n\n# setupmiddlewares\n\n * type:\n\narray<\n  (\n    middlewares: {\n      unshift: (...handlers: requesthandler[]) => void;\n      push: (...handlers: requesthandler[]) => void;\n    },\n    server: {\n      sockwrite: (\n        type: string,\n        data?: string | boolean | record<string, any>,\n      ) => void;\n    },\n  ) => void\n>;\n\n\n * default: undefined\n\nprovides the ability to execute a custom function and apply custom middlewares.\n\nthe order among several different types of middleware is: devserver.before => unshift => internal middlewares => push => devserver.after.\n\nexport default {\n  tools: {\n    devserver: {\n      setupmiddlewares: [\n        (middlewares, server) => {\n          middlewares.unshift((req, res, next) => {\n            next();\n          });\n\n          middlewares.push((req, res, next) => {\n            next();\n          });\n        },\n      ],\n    },\n  },\n};\n\n\nit is possible to use some server api to meet special scenario requirements:\n\n * sockwrite. allow send some message to hmr client, and then the hmr client will take different actions depending on the message type. if you send a \"content changed\" message, the page will reload.\n\nexport default {\n  tools: {\n    devserver: {\n      setupmiddlewares: [\n        (middlewares, server) => {\n          // add custom watch & trigger page reload when change\n          watcher.on('change', changed => {\n            server.sockwrite('content-changed');\n          });\n        },\n      ],\n    },\n  },\n};\n\n\n# proxy\n\n * type: record<string, string> | record<string, proxydetail>\n * default: undefined\n\nproxying some urls.\n\nexport default {\n  tools: {\n    devserver: {\n      proxy: {\n        '/api': 'http://localhost:3000',\n      },\n    },\n  },\n};\n\n\na request to /api/users will now proxy the request to http://localhost:3000/api/users.\n\nif you don't want /api to be passed along, we need to rewrite the path:\n\nexport default {\n  tools: {\n    devserver: {\n      proxy: {\n        '/api': {\n          target: 'http://localhost:3000',\n          pathrewrite: { '^/api': '' },\n        },\n      },\n    },\n  },\n};\n\n\nthe devserver proxy makes use of the http-proxy-middleware package. check out its documentation for more advanced usages.\n\nthe full type definition of devserver proxy is:\n\nimport type { options as httpproxyoptions } from 'http-proxy-middleware';\n\ntype proxydetail = httpproxyoptions & {\n  bypass?: (\n    req: incomingmessage,\n    res: serverresponse,\n    proxyoptions: proxyoptions,\n  ) => string | undefined | null | false;\n  context?: string | string[];\n};\n\ntype proxyoptions =\n  | record<string, string>\n  | record<string, proxydetail>\n  | proxydetail[]\n  | proxydetail;\n\n\nin addition to the http-proxy-middleware option, we also support the bypass and context configuration:\n\n * bypass：bypass the proxy based on the return value of a function.\n   * return null or undefined to continue processing the request with proxy.\n   * return false to produce a 404 error for the request.\n   * return a path to serve from, instead of continuing to proxy the request.\n * context：if you want to proxy multiple, specific paths to the same target, you can use an array of one or more objects with a context property.\n\n// custom bypass\nexport default {\n  tools: {\n    devserver: {\n      proxy: {\n        '/api': {\n          target: 'http://localhost:3000',\n          bypass: function (req, res, proxyoptions) {\n            if (req.headers.accept.indexof('html') !== -1) {\n              console.log('skipping proxy for browser request.');\n              return '/index.html';\n            }\n          },\n        },\n      },\n    },\n  },\n};\n\n\n// proxy multiple\nexport default {\n  tools: {\n    devserver: {\n      proxy: [\n        {\n          context: ['/auth', '/api'],\n          target: 'http://localhost:3000',\n        },\n      ],\n    },\n  },\n};\n\n\n# watch\n\n * type: boolean\n * default: true\n\nwhether to watch files change in directories such as mock/, server/, api/.\n\n\n# tools.htmlplugin\n\n * type: false | object | function\n * default:\n\nconst defaulthtmlpluginoptions = {\n  inject, // corresponding to the html.inject config\n  favicon, // corresponding to html.favicon config\n  filename, // generated based on output.distpath and entryname\n  template, // defaults to the built-in html template path\n  templateparameters, // corresponding to the html.templateparameters config\n  chunks: [entryname],\n  minify: {\n    removecomments: true,\n    useshortdoctype: true,\n    keepclosingslash: true,\n    collapsewhitespace: true,\n    removeredundantattributes: true,\n    removescripttypeattributes: true,\n    removestylelinktypeattributes: true,\n  },\n};\n\n\nthe configs of html-webpack-plugin can be modified through tools.htmlplugin.\n\n\n# object type\n\nwhen tools.htmlplugin is object type, the value will be merged with the default config via object.assign.\n\nexport default {\n  tools: {\n    htmlplugin: {\n      scriptloading: 'blocking',\n    },\n  },\n};\n\n\n\n# function type\n\nwhen tools.htmlplugin is function type:\n\n * the first parameter is the default config, which can be modified directly.\n * the second parameter is also an object, containing the entry name and the entry value.\n * the function can return a new object as the final config.\n\nexport default {\n  tools: {\n    htmlplugin(config, { entryname, entryvalue }) {\n      if (entryname === 'main') {\n        config.scriptloading = 'blocking';\n      }\n    },\n  },\n};\n\n\n\n# boolean type\n\nthe built-in html-webpack-plugin plugins can be disabled by set tools.htmlplugin to false.\n\nexport default {\n  tools: {\n    htmlplugin: false,\n  },\n};\n\n\n\n# tools.inspector\n\n * type: object | function | undefined\n * default: undefined\n\nyou can enable or configure the webpack inspector through tools.inspector.\n\nwhen the configuration is not undefined, it means that webpack-inspector is enabled, and the type of tools.inspector can be object or function.\n\n\n# object type\n\nwhen tools.inspector is configured with type object, it is merged with the default configuration via object.assign. for example:\n\nexport default {\n  tools: {\n    inspector: {\n      // the default port is 3333\n      port: 3334,\n    },\n  },\n};\n\n\n\n# function type\n\nwhen tools.inspector is of function type, the default configuration is passed as the first parameter and can be directly modified or returned as the final result. for example:\n\nexport default {\n  tools: {\n    inspector(config) {\n      config.port = 3334;\n    },\n  },\n};\n\n\n\n# tools.less\n\n * type: object | function\n * default\n\n{\n  lessoptions: {\n    javascriptenabled: true\n  },\n  sourcemap: false,\n}\n\n\nyou can modify the config of less-loader via tools.less.\n\n\n# object type\n\nwhen tools.less is configured as object type, it is merged with the default config through object.assign. for example:\n\nexport default {\n  tools: {\n    less: {\n      lessoptions: {\n        javascriptenabled: false,\n      },\n    },\n  },\n};\n\n\n\n# function type\n\nwhen tools.less is function type, the default config is passed as the first parameter, which can be directly modified or returned as the final result. the second parameter provides some utility functions that can be called directly. for example:\n\nexport default {\n  tools: {\n    less(config) {\n      // modify the config of lessoptions\n      config.lessoptions = {\n        javascriptenabled: false,\n      };\n    },\n  },\n};\n\n\n\n# util function\n\n# addexcludes\n\nused to specify which files less-loader does not compile, for example:\n\nexport default {\n  tools: {\n    less(config, { addexcludes }) {\n      addexcludes(/node_modules/);\n    },\n  },\n};\n\n\n\n# tools.minifycss\n\n * type: object | function | undefined\n * default: {}\n\nwhen building for production, builder will minimize the css code through css-minimizer-webpack-plugin. the config of css-minimizer-webpack-plugin can be modified via tools.minifycss.\n\n\n# object type\n\nwhen tools.minifycss is object type, it will be merged with the default config via object.assign.\n\nfor example, modify the preset config of cssnano:\n\nexport default {\n  tools: {\n    minifycss: {\n      minimizeroptions: {\n        preset: require.resolve('cssnano-preset-simple'),\n      },\n    },\n  },\n};\n\n\n\n# function type\n\nwhen tools.minifycss is function type, the default config is passed in as the first parameter, the config object can be modified directly, or a value can be returned as the final result.\n\nexport default {\n   tools: {\n    minifycss: options => {\n      options.minimizeroptions = {\n        preset: require.resolve('cssnano-preset-simple'),\n      },\n    }\n  }\n};\n\n\n\n# tools.postcss\n\n * type: object | function\n * default:\n\nconst defaultoptions = {\n  postcssoptions: {\n    plugins: [\n      require('postcss-flexbugs-fixes'),\n      require('postcss-custom-properties'),\n      require('postcss-initial'),\n      require('postcss-page-break'),\n      require('postcss-font-variant'),\n      require('postcss-media-minmax'),\n      require('postcss-nesting'),\n      require('autoprefixer')({\n        flexbox: 'no-2009',\n      }),\n    ],\n    // depends on production environment, and whether `output.disablesourcemap` is set\n    sourcemap: enablesourcemap,\n  },\n};\n\n\nbuilder integrates postcss by default, you can configure postcss-loader through tools.postcss.\n\n\n# object type\n\nwhen this value is of type object, it is merged with the default config via object.assign. for example:\n\nexport default {\n  tools: {\n    postcss: {\n      // because `object.assign` is used, the default postcssoptions will be overwritten.\n      postcssoptions: {\n        plugins: [require('postcss-px-to-viewport')],\n      },\n    },\n  },\n};\n\n\n\n# function type\n\nwhen the value is of type function, the internal default config is passed as the first parameter, and the config object can be modified directly without returning, or an object can be returned as the final result; the second parameter is a set of tool functions for modifying the postcss-loader config.\n\nfor example, you need to add a postcss plugin on the basis of the original plugin, and push a new plugin to the postcssoptions.plugins array:\n\nexport default {\n  tools: {\n    postcss: opts => {\n      opts.postcssoptions.plugins.push(require('postcss-px-to-viewport'));\n    },\n  },\n};\n\n\nwhen you need to pass parameters to the postcss plugin, you can pass them in by function parameters:\n\nexport default {\n  tools: {\n    postcss: opts => {\n      const viewportplugin = require('postcss-px-to-viewport')({\n        viewportwidth: 375,\n      });\n      opts.postcssoptions.plugins.push(viewportplugin);\n    },\n  },\n};\n\n\ntools.postcss can return a config object and completely replace the default config:\n\nexport default {\n  tools: {\n    postcss: () => {\n      return {\n        postcssoptions: {\n          plugins: [require('postcss-px-to-viewport')],\n        },\n      };\n    },\n  },\n};\n\n\n\n# util functions\n\n# addplugins\n\nfor adding additional postcss plugins.\n\nexport default {\n  tools: {\n    postcss: (config, { addplugins }) => {\n      // add a postcss plugin\n      addplugins(require('postcss-preset-env'));\n      // add multiple postcss plugins\n      addplugins([require('postcss-preset-env'), require('postcss-import')]);\n    },\n  },\n};\n\n\n\n# tools.pug\n\n * type: true | object | function | undefined\n * default: false\n\nconfigure the pug template engine.\n\n\n# boolean type\n\npug template engine is not enabled by default, you can enable it by setting tools.pug to true.\n\nexport default {\n  tools: {\n    pug: true,\n  },\n};\n\n\nwhen enabled, you can use index.pug as the template file in html.template config.\n\n\n# object type\n\nwhen tools.terser is object type, you can passing the pug options:\n\nexport default {\n  tools: {\n    pug: {\n      doctype: 'xml',\n    },\n  },\n};\n\n\nfor detailed options, please refer to pug api reference.\n\n\n# function type\n\nwhen tools.pug is function type, the default configuration is passed in as the first parameter, the configuration object can be modified directly, or a value can be returned as the final result.\n\nexport default {\n  tools: {\n    pug(config) {\n      config.doctype = 'xml';\n    },\n  },\n};\n\n\n\n# tools.sass\n\n * type: object | function\n * default\n\n{\n  sourcemap: false;\n}\n\n\nyou can modify the config of sass-loader via tools.sass.\n\n\n# object type\n\nwhen tools.sass is object type, it is merged with the default config via object.assign. for example:\n\nexport default {\n  tools: {\n    sass: {\n      sourcemap: true,\n    },\n  },\n};\n\n\n\n# function type\n\nwhen tools.sass is function type, the default config is passed as the first parameter, which can be directly modified or returned as the final result. the second parameter provides some utility functions that can be called directly. for example:\n\nexport default {\n  tools: {\n    sass(config) {\n      // modify sourcemap config\n      config.additionaldata = async (content, loadercontext) => {\n        // ...\n      };\n    },\n  },\n};\n\n\n\n# utility function\n\n# addexcludes\n\nused to specify which files sass-loader does not compile, for example:\n\nexport default {\n  tools: {\n    sass(config, { addexcludes }) {\n      addexcludes(/node_modules/);\n    },\n  },\n};\n\n\n\n# tools.styleloader\n\n * type: object | function\n * default: undefined\n\nthe config of style-loader can be set through tools.styleloader. the default config is an empty object.\n\nit is worth noting that builder does not enable style-loader by default. if this value is set to object/function type, style-loader will be enabled in development environment.in production build, we will still use mini-css-extract-plugin to extract css.\n\n\n# object type\n\nwhen this value is of type object, it is merged with the default config via object.assign. for example:\n\nexport default {\n  tools: {\n    styleloader: {\n      loaderoptions: {\n        insert: 'head',\n      },\n    },\n  },\n};\n\n\n\n# function type\n\nwhen the value is of type function, the default config is passed in as the first parameter. you can modify the config object directly, or return an object as the final config. for example:\n\nexport default {\n  tools: {\n    styleloader: config => {\n      config.loaderoptions.insert = 'head';\n      return config;\n    },\n  },\n};\n\n\n\n# tools.styledcomponents\n\n * type: object | function\n * default\n\n{\n  pure: true,\n  displayname: true,\n  // `isssr` is true in ssr build\n  ssr: isssr,\n  transpiletemplateliterals: true,\n}\n\n\ntools.styledcomponents config is corresponding to babel-plugin-styled-components.\n\nwhen the value is of type object, use the object.assign function to merge with the default config. for example:\n\nexport default {\n  tools: {\n    styledcomponents: {\n      pure: false,\n    },\n  },\n};\n\n\nwhen the config is of type function, the first parameter is the default configuration, and the second parameter provides some utility functions that can be called directly:\n\nexport default {\n  tools: {\n    styledcomponents(config) {\n      config.pure = false;\n    },\n  },\n};\n\n\n\n# tools.terser\n\n * type: object | function | undefined\n * default:\n\nconst defaultterseroptions = {\n  terseroptions: {\n    mangle: {\n      safari10: true,\n    },\n  },\n};\n\n\nwhen building for production, builder will minimize the javascript code through terser-webpack-plugin. the config of terser-webpack-plugin can be modified via tools.terser.\n\n\n# object type\n\nwhen tools.terser is object type, it will be merged with the default config via object.assign.\n\nfor example, to exclude some files from minification:\n\nexport default {\n  tools: {\n    terser: {\n      exclude: /\\/excludes/,\n    },\n  },\n};\n\n\n\n# function type\n\nwhen tools.terser is function type, the default config is passed in as the first parameter, the config object can be modified directly, or a value can be returned as the final result.\n\nexport default {\n  tools: {\n    terser: opts => {\n      opts.exclude = /\\/excludes/;\n    },\n  },\n};\n\n\n\n# tools.tsloader\n\n * type： object | function | undefined\n * default:undefined\n\nts-loader is not enabled by default in the project. when tools.tsloader is not undefined, builder will use ts-loader instead of babel-loader to compile typescript code.\n\n\n# object type\n\nwhen this value is of type object, it is merged with the default configuration via object.assign.\n\nthe default configuration is as follows:\n\n{\n  \"compileroptions\": {\n    \"target\": \"es5\",\n    \"module\": \"esnext\"\n  },\n  \"transpileonly\": true,\n  \"allowtsinnodemodules\": true\n}\n\n\nyou can override the default configuration via the tools.tsloader configuration item:\n\nexport default {\n  tools: {\n    tsloader: {\n      allowtsinnodemodules: false,\n    },\n  },\n};\n\n\n\n# function type\n\nwhen this value is of type function, the default configuration is passed in as the first parameter, the configuration object can be modified directly, or an object can be returned as the final configuration.the second parameter is the util functions to modify the ts-loader configuration. for example:\n\nexport default {\n  tools: {\n    tsloader: opts => {\n      opts.allowtsinnodemodules = false;\n    },\n  },\n};\n\n\n\n# util functions\n\nwhen the value of tools.tsloader is of type function, the utils functions available for the second parameter are as follows:\n\n# addincludes\n\ntype: (includes: string | regexp | array<string | regexp>) => void\n\nby default, only the application code in the src directory will be compiled. use addincludes to specify ts-loader to compile some files under node_modules. for example:\n\nexport default {\n  tools: {\n    tsloader: (config, { addincludes }) => {\n      addincludes([/node_modules\\/react/]);\n    },\n  },\n};\n\n\n# addexcludes\n\ntype: (excludes: string | regexp | array<string | regexp>) => void\n\ncontrary to addincludes, specify ts-loader to exclude certain files when compiling.\n\nfor example, without compiling files in the src/example directory:\n\nexport default {\n  tools: {\n    tsloader: (config, { addexcludes }) => {\n      addexcludes([/src\\/example\\//]);\n    },\n  },\n};\n\n\n\n# tools.tschecker\n\n * type: boolean | object | function\n * default: true\n\nby default, the fork-ts-checker-webpack-plugin is enabled for type checking.\n\nyou can:\n\n * configure to true to enable type checking by fork-ts-checker-webpack-plugin.\n * configure to false to disable type checking by fork-ts-checker-webpack-plugin.\n * configure as object or function to modify the default config.\n\nthe default config is as follows:\n\n> in most cases you don't need to modify the default tools.tschecker config.\n\n{\n  typescript: {\n    // avoid oom issue\n    memorylimit: 8192,\n    // use tsconfig of user project\n    configfile: tsconfigpath,\n    // use typescript of user project\n    typescriptpath: require.resolve('typescript'),\n  },\n  issue: {\n    exclude: [\n      { file: '**/*.(spec|test).ts' },\n      { file: '**/node_modules/**/*' },\n    ],\n  },\n  logger: {\n    log() {\n      // do nothing\n      // we only want to display error messages\n    },\n    error(message: string) {\n      console.error(message.replace(/error/g, 'type error'));\n    },\n  },\n},\n\n\n\n# object type\n\nwhen this value is of type object, it is merged with the default config via object.assign.\n\n\n# function type\n\nwhen the value is of type function, the default config is passed in as the first parameter. you can modify the config object directly, or return an object as the final config.\n\n\n# tools.webpack\n\n * type: object | function | undefined\n * default: undefined\n\ntools.webpack is used to configure webpack。\n\n> tools.webpackchain is also used to modify the webpack configuration, and the function is more powerful. it is recommended to use tools.webpackchain first.\n\n\n# object type\n\nyou can configure it as an object, which will be merged with the original webpack configuration through webpack-merge. for example:\n\nexport default {\n  tools: {\n    webpack: {\n      resolve: {\n        alias: {\n          '@util': 'src/util',\n        },\n      },\n    },\n  },\n};\n\n\n\n# function type\n\nyou can also configure it as a function, which accepts one parameter, the original webpack configuration, you can modify this configuration, and then return a new configuration. for example:\n\nexport default {\n  tools: {\n    webpack: config => {\n      config.resolve.alias['@util'] = 'src/util';\n      return config;\n    },\n  },\n};\n\n\nthe second parameter of this function is an object that contains some information about the tool collection. details are as follows:\n\n\n# utils\n\n# env\n\n * type: 'development' | 'production' | 'test'\n\nthe env parameter can be used to determine whether the current environment is development, production or test. for example:\n\nexport default {\n  tools: {\n    webpack: (config, { env }) => {\n      if (env === 'development') {\n        config.devtool = 'cheap-module-eval-source-map';\n      }\n      return config;\n    },\n  },\n};\n\n\n# isprod\n\n * type: boolean\n\nthe isprod parameter can be used to determine whether the current environment is production. for example:\n\nexport default {\n  tools: {\n    webpack: (config, { isprod }) => {\n      if (isprod) {\n        config.devtool = 'source-map';\n      }\n      return config;\n    },\n  },\n};\n\n\n# target\n\n * type: 'web' | 'node' | 'modern-web'\n\nthe target parameter can be used to determine the current target. for example:\n\nexport default {\n  tools: {\n    webpack: (config, { target }) => {\n      if (target === 'node') {\n        // ...\n      }\n      return config;\n    },\n  },\n};\n\n\n# webpack\n\n * type: object\n\nthe webpack parameter is the original webpack configuration. for example:\n\nexport default {\n  tools: {\n    webpack: (config, { webpack }) => {\n      config.plugins.push(new webpack.progressplugin());\n      return config;\n    },\n  },\n};\n\n\n\n# tools.webpackchain\n\n * type: function | undefined\n * default: undefined\n\nyou can modify the webpack configuration by configuring tools.webpackchain which is type of function. the function receives two parameters, the first is the original webpack chain object, and the second is an object containing some utils.\n\ncompared with tools.webpack, webpack-chain not only supports chained calls, but also can locate built-in rule or plugin based on aliases, so as to achieve precise config modification. we recommend using tools.webpackchain instead of tools.webpack.\n\n> tools.webpackchain is executed earlier than tools.webpack and thus will be overridden by changes in tools.webpack.\n\n\n# utils\n\n# env\n\n * type: 'development' | 'production' | 'test'\n\nthe env parameter can be used to determine whether the current environment is development, production or test. for example:\n\nexport default {\n  tools: {\n    webpack: (config, { env }) => {\n      if (env === 'development') {\n        config.devtool = 'cheap-module-eval-source-map';\n      }\n      return config;\n    },\n  },\n};\n\n\n# isprod\n\n * type: boolean\n\nthe isprod parameter can be used to determine whether the current environment is production. for example:\n\nexport default {\n  tools: {\n    webpack: (config, { isprod }) => {\n      if (isprod) {\n        config.devtool = 'source-map';\n      }\n      return config;\n    },\n  },\n};\n\n\n# target\n\n * type: 'web' | 'node' | 'modern-web'\n\nthe target parameter can be used to determine the current environment. for example:\n\nexport default {\n  tools: {\n    webpack: (config, { target }) => {\n      if (target === 'node') {\n        // ...\n      }\n      return config;\n    },\n  },\n};\n\n\n# webpack\n\n * type: object\n\nthe webpack parameter is the original webpack configuration object. for example:\n\nexport default {\n  tools: {\n    webpack: (config, { webpack }) => {\n      config.plugins.push(new webpack.progressplugin());\n      return config;\n    },\n  },\n};\n\n\n# chain_id\n\nsome common chain ids are predefined in the builder, and you can use these ids to locate the built-in rule or plugin.\n\n# chain_id.rule\n\nid           description\nrule.mjs     rule for mjs\nrule.js      rule for js\nrule.ts      rule for ts\nrule.css     rule for css\nrule.less    rule for less\nrule.sass    rule for sass\nrule.pug     rule for pug\nrule.toml    rule for toml\nrule.yaml    rule for yaml\nrule.font    rule for font\nrule.image   rule for image\nrule.media   rule for media\n\n\n# chain_id.one_of\n\none_of.xxx can match a certain type of rule in the rule array.\n\nid                  description\none_of.svg          rules for svg, automatic choice between data uri and\n                    separate file\none_of.svg_url      rules for svg, output as a separate file\none_of.svg_inline   rules for svg, inlined into bundles as data uris\none_of.svg_assets   rules for svg, automatic choice between data uri and\n                    separate file\n\n\n# chain_id.use\n\nuse.xxx can match a certain loader.\n\nid                     description\nuse.ts                 correspond to ts-loader\nuse.css                correspond to css-loader\nuse.less               correspond to less-loader\nuse.sass               correspond to sass-loader\nuse.pug                correspond to pug-loader\nuse.toml               correspond to toml-loader\nuse.yaml               correspond to yaml-loader\nuse.file               correspond to file-loader\nuse.url                correspond to url-loader\nuse.svgr               correspond to @svgr/webpack\nuse.babel              correspond to babel-loader\nuse.style              correspond to style-loader\nuse.postcss            correspond to postcss-loader\nuse.markdown           correspond to markdown-loader\nuse.css_modules_ts     correspond to css-modules-typescript-loader\nuse.mini_css_extract   correspond to mini-css-extract-plugin.loader\n\n\n# chain_id.plugin\n\nplugin.xxx can match a certain webpack plugin.\n\nid                             description\nplugin.hmr                     correspond to hotmodulereplacementplugin\nplugin.copy                    correspond to copywebpackplugin\nplugin.html                    correspond to htmlwebpackplugin, you need to splice the\n                               entry name when using: ${plugin.html}-${entryname}\nplugin.define                  correspond to defineplugin\nplugin.ignore                  correspond to ignoreplugin\nplugin.banner                  correspond to bannerplugin\nplugin.progress                correspond to webpackbar\nplugin.app_icon                correspond to appiconplugin\nplugin.loadable                correspond to loadablewebpackplugin\nplugin.manifest                correspond to webpackmanifestplugin\nplugin.ts_checker              correspond to forktscheckerwebpackplugin\nplugin.inline_html             correspond to inlinechunkhtmlplugin\nplugin.bundle_analyzer         correspond to webpackbundleanalyzer\nplugin.bottom_template         correspond to bottomtemplateplugin\nplugin.mini_css_extract        correspond to minicssextractplugin\nplugin.react_fast_refresh      correspond to reactfastrefreshplugin\nplugin.node_polyfill_provide   correspond to provideplugin for node polyfills\nplugin.inspector               correspond to @modern-js/inspector-webpack-plugin\nplugin.subresource_integrity   correspond to webpack-subresource-integrity\nplugin.assets_retry            correspond to webpack static asset retry plugin in builder\nauto_set_root_size             correspond to automatically set root font size plugin in\n                               builder\n\n\n# chain_id.minimizer\n\nminimizer.xxx can match a certain minimizer.\n\nid                  description\nminimizer.js        correspond to terserwebpackplugin\nminimizer.css       correspond to cssminimizerwebpackplugin\nminimizer.esbuild   correspond to esbuildplugin\n\n\n# examples\n\nthe following are some common configuration examples, see the full webpack-chain api webpack-chain documentation.\n\n# add/modify/delete loader\n\nexport default {\n  tools: {\n    webpackchain: chain => {\n      // add loader\n      chain.module\n        .rule('md')\n        .test(/\\.md$/)\n        .use('md-loader')\n        .loader('md-loader');\n      // modify loader\n      chain.module\n        .rule(chain_id.rule.js)\n        .use(chain_id.use.babel)\n        .tap(options => {\n          options.plugins.push('babel-plugin-xxx');\n          return options;\n        });\n      // delete loader\n      chain.module.rule(chain_id.rule.js).uses.delete(chain_id.use.babel);\n    },\n  },\n};\n\n\n# add/modify/delete plugin\n\nexport default {\n  tools: {\n    webpackchain: chain => {\n      // add plugin\n      chain.plugin('define').use(webpack.defineplugin, [\n        {\n          'process.env': {\n            node_env: json.stringify(process.env.node_env),\n          },\n        },\n      ]);\n      // modify plugin\n      chain.plugin(chain_id.plugin.hmr).tap(options => {\n        options[0].fullbuildtimeout = 200;\n        return options;\n      });\n      // delete plugin\n      chain.plugins.delete(chain_id.plugin.hmr);\n    },\n  },\n};\n",charsets:{cjk:!0}},{frontmatter:{api:!0},regularPath:"/en/api/",relativePath:"en/api/index.md",key:"v-3c8c2c3a",path:"/en/api/",lastUpdated:"10/13/2022, 3:49:10 AM",lastUpdatedTimestamp:166563295e4,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Exceptions",frontmatter:{},regularPath:"/en/guide/faq/exceptions.html",relativePath:"en/guide/faq/exceptions.md",key:"v-65ca61ec",path:"/en/guide/faq/exceptions.html",headers:[{level:2,title:"'compilation' argument error when webpack compiling?",slug:"compilation-argument-error-when-webpack-compiling",normalizedTitle:"'compilation' argument error when webpack compiling?",charIndex:17},{level:2,title:"Find ES6+ code in the compiled files?",slug:"find-es6-code-in-the-compiled-files",normalizedTitle:"find es6+ code in the compiled files?",charIndex:1875},{level:2,title:"Failed import other modules in Monorepo?",slug:"failed-import-other-modules-in-monorepo",normalizedTitle:"failed import other modules in monorepo?",charIndex:2264},{level:2,title:"Compile error You may need additional loader?",slug:"compile-error-you-may-need-additional-loader",normalizedTitle:"compile error you may need additional loader?",charIndex:2690},{level:2,title:"Find exports is not defined runtime error?",slug:"find-exports-is-not-defined-runtime-error",normalizedTitle:"find exports is not defined runtime error?",charIndex:3422},{level:2,title:"React component state lost after HMR?",slug:"react-component-state-lost-after-hmr",normalizedTitle:"react component state lost after hmr?",charIndex:4317},{level:2,title:"The webpack cache does not work?",slug:"the-webpack-cache-does-not-work",normalizedTitle:"the webpack cache does not work?",charIndex:5032},{level:2,title:"Tree Shaking does not take effect?",slug:"tree-shaking-does-not-take-effect",normalizedTitle:"tree shaking does not take effect?",charIndex:5974},{level:2,title:"JavaScript heap out of memory when compiling?",slug:"javascript-heap-out-of-memory-when-compiling",normalizedTitle:"javascript heap out of memory when compiling?",charIndex:6568},{level:2,title:"Division in Less file doesn't work?",slug:"division-in-less-file-doesn-t-work",normalizedTitle:"division in less file doesn't work?",charIndex:7468}],lastUpdated:"10/13/2022, 7:17:15 AM",lastUpdatedTimestamp:1665645435e3,headersStr:"'compilation' argument error when webpack compiling? Find ES6+ code in the compiled files? Failed import other modules in Monorepo? Compile error You may need additional loader? Find exports is not defined runtime error? React component state lost after HMR? The webpack cache does not work? Tree Shaking does not take effect? JavaScript heap out of memory when compiling? Division in Less file doesn't work?",content:"# Exceptions\n\n\n# 'compilation' argument error when webpack compiling?\n\nIf the following error occurs when compiling, it is usually caused by installing the wrong version of webpack in the project, or installing multiple versions of webpack:\n\nTypeError: The 'compilation' argument must be an instance of Compilation\n\n\nThe webpack version problem has the following situations:\n\n 1. The webpack dependency is directly declared in the project's package.json, and the version range of the webpack that the Builder depends on is different and cannot match the same version.\n 2. Multiple npm packages installed in the project all depend on webpack, and the webpack version ranges they depend on are different and cannot match the same version.\n 3. Due to the lock mechanism of the package manager, multiple webpack versions are generated in the lock file.\n\nIn the first case, it is recommended to remove the webpack dependency from the project's package.json. Because Builder encapsulates webpack-related capabilities by default, and will pass in the webpack object in the tools.webpack configuration item. Therefore, in most cases, it is not recommended to install additional webpack dependencies in the project.\n\nIn the second case, it is recommended to see if you can upgrade an npm package so that its dependent webpack version range is consistent with the Builder. It is also possible to manually unify versions through the ability of the package manager, e.g. using yarn resolutions or [pnpm overrides](https 😕/pnpm.io/package_json#pnpmoverrides).\n\nIf it is the third case, you can use the two methods mentioned in the second case, or you can try to delete the lock file and reinstall it to solve it.\n\nTIP\n\nDeleting the lock file will automatically upgrade the dependency version in the project to the latest version under the specified scope, please test it thoroughly.\n\n\n# Find ES6+ code in the compiled files?\n\nBy default, Builder will not compile files under node_modules through babel-loader or ts-loader. If the npm package introduced by the project contains ES6+ syntax, it will be packaged into the product.\n\nWhen this happens, you can specify directories or modules that need to be compiled additionally through the source.include configuration item.\n\n\n# Failed import other modules in Monorepo?\n\nFor the sake of compilation performance, by default, Builder will not compile files under node_modules through babel-loader or ts-loader, nor will it compile files outside the current project directory.\n\nThrough the source.include configuration item, you can specify directories or modules that require additional compilation.\n\nFor details, see source.include usage introduction.\n\n\n# Compile error You may need additional loader?\n\nIf the following error message is encountered during the compilation process, it means that there are individual files that cannot be compiled correctly.\n\nModule parse failed: Unexpected token\nFile was processed with these loaders:\n * some-loader/index.js\n\nYou may need an additional loader to handle the result of these loaders.\n\n\nSolution:\n\n * If the .ts file outside the current project is referenced, or the .ts file under node_modules, please add the source.include configuration Items that specify files that require additional compilation.\n * If you refer to a file format that is not supported by Builder, please configure the corresponding webpack loader for compilation.\n\n\n# Find exports is not defined runtime error?\n\nIf the compilation is succeed, but the exports is not defined error appears after opening the page, it is usually because a CommonJS module is compiled by babel.\n\nUnder normal circumstances, Builder will not use babel to compile CommonJS modules. If the source.include configuration item is used in the project, or the [tools.babel](/en/api/config-tools.html#tools -babel) addIncludes method, some CommonJS modules may be added to the babel compilation.\n\nThere are two workarounds for this problem:\n\n 1. Avoid adding CommonJS modules to babel compilation.\n 2. Set babel's sourceType configuration item to unambiguous, for example:\n\nexport default {\n  tools: {\n    babel(config) {\n      config.sourceType = 'unambiguous';\n    },\n  },\n};\n\n\nSetting sourceType to unambiguous may have some other effects, please refer to babel official documentation.\n\n\n# React component state lost after HMR?\n\nBuilder uses React's official Fast Refresh capability for component hot update.\n\nWhen using Fast Refresh, it is required that the component cannot be an anonymous function, otherwise the state of the React component cannot be preserved after hot update.\n\nThe following spellings are incorrect:\n\n// wrong spelling 1\nexport default function () {\n  return <div>Hello World</div>;\n}\n\n// wrong spelling 2\nexport default () => <div>Hello World</div>;\n\n\nThe correct spelling is:\n\n// Correct spelling 1\nexport default function MyComponent() {\n  return <div>Hello World</div>;\n}\n\n// Correct spelling 2\nconst MyComponent = () => <div>Hello World</div>\n\nexport default MyComponent;\n\n\n\n# The webpack cache does not work?\n\nBuilder enables webpack's persistent cache by default.\n\nAfter the first compilation is completed, the cache file will be automatically generated and output to the ./node_modules/.cache/webpack directory. When the second compilation is performed, the cache is hit and the compilation speed is greatly improved.\n\nWhen configuration files such as package.json are modified, the cache is automatically invalidated.\n\nIf the webpack compilation cache in the project has not taken effect, you can add the following configuration for troubleshooting:\n\nexport default {\n  tools: {\n    webpack(config) {\n      config.infrastructureLogging = {\n        ...config.infrastructureLogging,\n        debug: true,\n      };\n    },\n  },\n};\n\n\nAfter adding the above configuration, webpack will output logs for debugging. Please refer to the logs related to PackFileCacheStrategy to understand the cause of cache invalidation.\n\n\n# Tree Shaking does not take effect?\n\nBuilder will enable the Tree Shaking function of webpack by default during production construction. Whether Tree Shaking can take effect depends on whether the business code can meet the Tree Shaking conditions of webpack.\n\nIf you encounter the problem that Tree Shaking does not take effect, you can check whether the sideEffects configuration of the relevant npm package is correct. If you don't know what sideEffects is, you can read the following two documents:\n\n * webpack official documentation - Tree Shaking\n * Tree Shaking Troubleshooting Guide\n\n\n# JavaScript heap out of memory when compiling?\n\nThis error indicates that there is a memory overflow problem during the packaging process. In most cases, it is because the packaged content exceeds the default memory limit of Node.js.\n\nIn case of OOM issues, the easiest way to fix this is by increasing the memory cap, Node.js provides the --max-old-space-size option to set this. You can set this parameter by adding NODE_OPTIONS before the CLI command:\n\nNODE_OPTIONS=--max_old_space_size=16384 modern build\n\n\nThe value of the parameter represents the upper limit of the memory size (MB). Generally, it can be set to 16384 (16GB).\n\nThe following parameters are explained in more detail in the official Node.js documentation:\n\n * NODE_OPTIONS\n * --max-old-space-size\n\nIn addition to increasing the memory limit, it is also a solution to improve efficiency by enabling some compilation strategies.\n\n\n# Division in Less file doesn't work?\n\nCompared with the v3 version, the Less v4 version has some differences in the way of writing division:\n\n// Less v3\n.math {\n  width: 2px / 2; // 1px\n  width: 2px ./ 2; // 1px\n  width: (2px / 2); // 1px\n}\n\n// Less v4\n.math {\n  width: 2px / 2; // 2px / 2\n  width: 2px ./ 2; // 1px\n  width: (2px / 2); // 1px\n}\n\n\nThe built-in Less version of Builder is v4, and the writing method of the lower version will not take effect. Please pay attention to the distinction.\n\nThe writing of division in Less can also be modified through configuration items, see Less - Math.",normalizedContent:"# exceptions\n\n\n# 'compilation' argument error when webpack compiling?\n\nif the following error occurs when compiling, it is usually caused by installing the wrong version of webpack in the project, or installing multiple versions of webpack:\n\ntypeerror: the 'compilation' argument must be an instance of compilation\n\n\nthe webpack version problem has the following situations:\n\n 1. the webpack dependency is directly declared in the project's package.json, and the version range of the webpack that the builder depends on is different and cannot match the same version.\n 2. multiple npm packages installed in the project all depend on webpack, and the webpack version ranges they depend on are different and cannot match the same version.\n 3. due to the lock mechanism of the package manager, multiple webpack versions are generated in the lock file.\n\nin the first case, it is recommended to remove the webpack dependency from the project's package.json. because builder encapsulates webpack-related capabilities by default, and will pass in the webpack object in the tools.webpack configuration item. therefore, in most cases, it is not recommended to install additional webpack dependencies in the project.\n\nin the second case, it is recommended to see if you can upgrade an npm package so that its dependent webpack version range is consistent with the builder. it is also possible to manually unify versions through the ability of the package manager, e.g. using yarn resolutions or [pnpm overrides](https 😕/pnpm.io/package_json#pnpmoverrides).\n\nif it is the third case, you can use the two methods mentioned in the second case, or you can try to delete the lock file and reinstall it to solve it.\n\ntip\n\ndeleting the lock file will automatically upgrade the dependency version in the project to the latest version under the specified scope, please test it thoroughly.\n\n\n# find es6+ code in the compiled files?\n\nby default, builder will not compile files under node_modules through babel-loader or ts-loader. if the npm package introduced by the project contains es6+ syntax, it will be packaged into the product.\n\nwhen this happens, you can specify directories or modules that need to be compiled additionally through the source.include configuration item.\n\n\n# failed import other modules in monorepo?\n\nfor the sake of compilation performance, by default, builder will not compile files under node_modules through babel-loader or ts-loader, nor will it compile files outside the current project directory.\n\nthrough the source.include configuration item, you can specify directories or modules that require additional compilation.\n\nfor details, see source.include usage introduction.\n\n\n# compile error you may need additional loader?\n\nif the following error message is encountered during the compilation process, it means that there are individual files that cannot be compiled correctly.\n\nmodule parse failed: unexpected token\nfile was processed with these loaders:\n * some-loader/index.js\n\nyou may need an additional loader to handle the result of these loaders.\n\n\nsolution:\n\n * if the .ts file outside the current project is referenced, or the .ts file under node_modules, please add the source.include configuration items that specify files that require additional compilation.\n * if you refer to a file format that is not supported by builder, please configure the corresponding webpack loader for compilation.\n\n\n# find exports is not defined runtime error?\n\nif the compilation is succeed, but the exports is not defined error appears after opening the page, it is usually because a commonjs module is compiled by babel.\n\nunder normal circumstances, builder will not use babel to compile commonjs modules. if the source.include configuration item is used in the project, or the [tools.babel](/en/api/config-tools.html#tools -babel) addincludes method, some commonjs modules may be added to the babel compilation.\n\nthere are two workarounds for this problem:\n\n 1. avoid adding commonjs modules to babel compilation.\n 2. set babel's sourcetype configuration item to unambiguous, for example:\n\nexport default {\n  tools: {\n    babel(config) {\n      config.sourcetype = 'unambiguous';\n    },\n  },\n};\n\n\nsetting sourcetype to unambiguous may have some other effects, please refer to babel official documentation.\n\n\n# react component state lost after hmr?\n\nbuilder uses react's official fast refresh capability for component hot update.\n\nwhen using fast refresh, it is required that the component cannot be an anonymous function, otherwise the state of the react component cannot be preserved after hot update.\n\nthe following spellings are incorrect:\n\n// wrong spelling 1\nexport default function () {\n  return <div>hello world</div>;\n}\n\n// wrong spelling 2\nexport default () => <div>hello world</div>;\n\n\nthe correct spelling is:\n\n// correct spelling 1\nexport default function mycomponent() {\n  return <div>hello world</div>;\n}\n\n// correct spelling 2\nconst mycomponent = () => <div>hello world</div>\n\nexport default mycomponent;\n\n\n\n# the webpack cache does not work?\n\nbuilder enables webpack's persistent cache by default.\n\nafter the first compilation is completed, the cache file will be automatically generated and output to the ./node_modules/.cache/webpack directory. when the second compilation is performed, the cache is hit and the compilation speed is greatly improved.\n\nwhen configuration files such as package.json are modified, the cache is automatically invalidated.\n\nif the webpack compilation cache in the project has not taken effect, you can add the following configuration for troubleshooting:\n\nexport default {\n  tools: {\n    webpack(config) {\n      config.infrastructurelogging = {\n        ...config.infrastructurelogging,\n        debug: true,\n      };\n    },\n  },\n};\n\n\nafter adding the above configuration, webpack will output logs for debugging. please refer to the logs related to packfilecachestrategy to understand the cause of cache invalidation.\n\n\n# tree shaking does not take effect?\n\nbuilder will enable the tree shaking function of webpack by default during production construction. whether tree shaking can take effect depends on whether the business code can meet the tree shaking conditions of webpack.\n\nif you encounter the problem that tree shaking does not take effect, you can check whether the sideeffects configuration of the relevant npm package is correct. if you don't know what sideeffects is, you can read the following two documents:\n\n * webpack official documentation - tree shaking\n * tree shaking troubleshooting guide\n\n\n# javascript heap out of memory when compiling?\n\nthis error indicates that there is a memory overflow problem during the packaging process. in most cases, it is because the packaged content exceeds the default memory limit of node.js.\n\nin case of oom issues, the easiest way to fix this is by increasing the memory cap, node.js provides the --max-old-space-size option to set this. you can set this parameter by adding node_options before the cli command:\n\nnode_options=--max_old_space_size=16384 modern build\n\n\nthe value of the parameter represents the upper limit of the memory size (mb). generally, it can be set to 16384 (16gb).\n\nthe following parameters are explained in more detail in the official node.js documentation:\n\n * node_options\n * --max-old-space-size\n\nin addition to increasing the memory limit, it is also a solution to improve efficiency by enabling some compilation strategies.\n\n\n# division in less file doesn't work?\n\ncompared with the v3 version, the less v4 version has some differences in the way of writing division:\n\n// less v3\n.math {\n  width: 2px / 2; // 1px\n  width: 2px ./ 2; // 1px\n  width: (2px / 2); // 1px\n}\n\n// less v4\n.math {\n  width: 2px / 2; // 2px / 2\n  width: 2px ./ 2; // 1px\n  width: (2px / 2); // 1px\n}\n\n\nthe built-in less version of builder is v4, and the writing method of the lower version will not take effect. please pay attention to the distinction.\n\nthe writing of division in less can also be modified through configuration items, see less - math.",charsets:{}},{title:"Features",frontmatter:{},regularPath:"/en/guide/faq/features.html",relativePath:"en/guide/faq/features.md",key:"v-7a63004c",path:"/en/guide/faq/features.html",headers:[{level:2,title:"How to import UI Component library on demand?",slug:"how-to-import-ui-component-library-on-demand",normalizedTitle:"how to import ui component library on demand?",charIndex:15},{level:2,title:"How to run ESLint during compilation?",slug:"how-to-run-eslint-during-compilation",normalizedTitle:"how to run eslint during compilation?",charIndex:549},{level:2,title:"How to configure CDN path for static resources?",slug:"how-to-configure-cdn-path-for-static-resources",normalizedTitle:"how to configure cdn path for static resources?",charIndex:1272},{level:2,title:"How to clear the webpack cache?",slug:"how-to-clear-the-webpack-cache",normalizedTitle:"how to clear the webpack cache?",charIndex:1583},{level:2,title:"How to remove console after production build?",slug:"how-to-remove-console-after-production-build",normalizedTitle:"how to remove console after production build?",charIndex:1834}],lastUpdated:"10/13/2022, 7:17:15 AM",lastUpdatedTimestamp:1665645435e3,headersStr:"How to import UI Component library on demand? How to run ESLint during compilation? How to configure CDN path for static resources? How to clear the webpack cache? How to remove console after production build?",content:"# Features\n\n\n# How to import UI Component library on demand?\n\nIf you need to configure the on-demand import of component libraries, you can configure [babel-plugin-import](https://github.com/ through tools.babel umijs/babel-plugin-import) plugin.\n\nexport default {\n  tools: {\n    babel: (config, { addPlugins }) => {\n      addPlugins([\n        [\n          'babel-plugin-import',\n          {\n            libraryName: 'xxx-components',\n            libraryDirectory: 'es',\n            style: true,\n          },\n        ],\n      ]);\n    },\n  },\n};\n\n\n\n# How to run ESLint during compilation?\n\nFor the sake of compilation performance, Builder will not perform ESLint verification during the compilation process by default. If you need this function, you can manually install and register the eslint-webpack-plugin in the community -contrib/eslint-webpack-plugin).\n\nThe sample code to register the plugin is as follows:\n\nimport ESLintPlugin from 'eslint-webpack-plugin';\n\nexport default {\n  tools: {\n    webpackChain(chain) {\n      chain.plugin('eslint-plugin').use(ESLintPlugin, [\n        {\n          extensions: ['.js', '.ts', '.jsx', 'tsx', '.mjs'],\n        },\n      ]);\n    },\n  },\n};\n\n\n> For more detailed usage, please refer to the eslint-webpack-plugin documentation.\n\n\n# How to configure CDN path for static resources?\n\nIf you need to upload static resources such as JS and CSS to CDN for use, you can set the URL prefix of static resources through the output.assetPrefix configuration.\n\nexport default {\n  output: {\n    assetPrefix: 'https://cdn.example.com/assets/',\n  },\n};\n\n\n\n# How to clear the webpack cache?\n\nBy default, Builder's webpack cache is generated in the ./node_modules/.cache/webpack directory.\n\nIf you need to clear the local webpack cache, you can execute the following command:\n\nrm -rf ./node_modules/.cache\n\n\n\n# How to remove console after production build?\n\nWhen the production environment is built, we can remove the console from the code, so as to avoid the log of the development environment being output to the production environment.\n\nBuilder provides a configuration item to remove console by default, please see performance.removeConsole.",normalizedContent:"# features\n\n\n# how to import ui component library on demand?\n\nif you need to configure the on-demand import of component libraries, you can configure [babel-plugin-import](https://github.com/ through tools.babel umijs/babel-plugin-import) plugin.\n\nexport default {\n  tools: {\n    babel: (config, { addplugins }) => {\n      addplugins([\n        [\n          'babel-plugin-import',\n          {\n            libraryname: 'xxx-components',\n            librarydirectory: 'es',\n            style: true,\n          },\n        ],\n      ]);\n    },\n  },\n};\n\n\n\n# how to run eslint during compilation?\n\nfor the sake of compilation performance, builder will not perform eslint verification during the compilation process by default. if you need this function, you can manually install and register the eslint-webpack-plugin in the community -contrib/eslint-webpack-plugin).\n\nthe sample code to register the plugin is as follows:\n\nimport eslintplugin from 'eslint-webpack-plugin';\n\nexport default {\n  tools: {\n    webpackchain(chain) {\n      chain.plugin('eslint-plugin').use(eslintplugin, [\n        {\n          extensions: ['.js', '.ts', '.jsx', 'tsx', '.mjs'],\n        },\n      ]);\n    },\n  },\n};\n\n\n> for more detailed usage, please refer to the eslint-webpack-plugin documentation.\n\n\n# how to configure cdn path for static resources?\n\nif you need to upload static resources such as js and css to cdn for use, you can set the url prefix of static resources through the output.assetprefix configuration.\n\nexport default {\n  output: {\n    assetprefix: 'https://cdn.example.com/assets/',\n  },\n};\n\n\n\n# how to clear the webpack cache?\n\nby default, builder's webpack cache is generated in the ./node_modules/.cache/webpack directory.\n\nif you need to clear the local webpack cache, you can execute the following command:\n\nrm -rf ./node_modules/.cache\n\n\n\n# how to remove console after production build?\n\nwhen the production environment is built, we can remove the console from the code, so as to avoid the log of the development environment being output to the production environment.\n\nbuilder provides a configuration item to remove console by default, please see performance.removeconsole.",charsets:{}},{title:"All Features",frontmatter:{},regularPath:"/en/guide/features.html",relativePath:"en/guide/features.md",key:"v-01157b6c",path:"/en/guide/features.html",headers:[{level:2,title:"JavaScript",slug:"javascript",normalizedTitle:"javascript",charIndex:83},{level:2,title:"CSS",slug:"css",normalizedTitle:"css",charIndex:1254},{level:2,title:"HTML",slug:"html",normalizedTitle:"html",charIndex:2490},{level:2,title:"React",slug:"react",normalizedTitle:"react",charIndex:3433},{level:2,title:"Static Resources",slug:"static-resources",normalizedTitle:"static resources",charIndex:3707},{level:2,title:"Performance",slug:"performance",normalizedTitle:"performance",charIndex:4412}],lastUpdated:"10/13/2022, 3:49:10 AM",lastUpdatedTimestamp:166563295e4,headersStr:"JavaScript CSS HTML React Static Resources Performance",content:"# All Features\n\nHere are all the main features supported by Modern.js Builder.\n\n\n# JavaScript\n\nFEATURES                   DESCRIPTION                                                    LINKS\nBabel compilation          Babel compilation is enabled by default, and multiple Babel     * tools.babel\n                           plugins are built in\nTS compilation             TS files are compiled by Babel by default, you can also use     * tools.babel\n                           ts-loader                                                       * tools.tsLoader\nType Checker               Runs TypeScript type checker by default                         * tools.tsChecker\nJS minification            JS minification is enabled by default in production build       * tools.terser\nPolyfill                   core-js and other polyfills are injected by default             * output.polyfill\nSourceMap generation       High-quality SourceMap is generated by default in production    * output.disableSourceMap\n                           build\nAlias                      Optional feature, set import alias                              * source.alias\nRestrict importing paths   Optional feature, restrict source code import paths             * source.moduleScopes\n\n\n# CSS\n\nFEATURES                  DESCRIPTION                                                    LINKS\nPostCSS compilation       PostCSS compilation is enabled by default, built-in             * tools.postcss\n                          autoprefixer and other plugins                                  * tools.autoprefixer\nSass preprocessing        Compile .scss and .sass files by default                        * tools.sass\nLess preprocessing        Compile .less files by default                                  * tools.less\nCSS Modules Compilation   Support compiling *.module.* files by default                   * tools.cssLoader\nCSS Modules Type          Optional feature, automatically generate type definition for    * enableCssModuleTSDeclaration\n                          CSS Modules\nCSS minification          CSS minification is enabled by default in production build      * tools.minifyCss\nExtract CSS files         CSS will be extracted as separate files by default              * tools.cssExtract\nStyled Components         Support styled components compilation by default                * tools.styledComponents\nInsert CSS into JS        Optional feature, insert styles via style-loader                * tools.styleLoader\n\n\n# HTML\n\nFEATURES           DESCRIPTION                                    LINKS\nSet title          Set HTML title tag                              * html.title\n                                                                   * html.titleByEntries\nSet meta           Set HTML meta tag                               * html.meta\n                                                                   * html.metaByEntries\nSet favicon        Set favicon for page                            * html.favicon\n                                                                   * html.faviconByEntries\nSet app icon       Set app icon for iOS                            * html.appIcon\nUse pug template   Optional feature, use pug template syntax       * tools.pug\nInline JS files    Optional feature, inline JS files into HTML     * output.enableInlineScripts\nInline CSS files   Optional feature, inline CSS files into HTML    * output.enableInlineStyles\n\n\n# React\n\nFEATURES                 DESCRIPTION                                     LINKS\nReact Refresh            Support React Refresh by default                 * dev.hmr\nSVG to React component   Support to import SVG as component by default    * output.svgDefaultExport\n\n\n# Static Resources\n\nFEATURES                    DESCRIPTION                                                  LINKS\nInline static resources     Small resources are inlined into JS by default                * output.dataUriLimit\nClean up static resources   Automatically clean up static resources in the dist           * output.cleanDistPath\n                            directory before each build\nCopy static resources       Optional feature, copy static resources to the dist           * output.copy\n                            directory\nGenerate manifest file      Optional feature, generate manifest file containing static    * output.enableAssetManifest\n                            asset information\n\n\n# Performance\n\nFEATURES                         DESCRIPTION                                                    LINKS\nDisplay bundle size              After the production build, All bundle sized is displayed by   -\n                                 default\nAnalyze bundle size              Optional feature, analyze bundle size through Bundle            * performance.bundleAnalyze\n                                 Analyzer\nRemove console                   Optional feature, remove console.xx in code                     * performance.removeConsole\nOptimize the size of moment.js   Optional feature, remove the redundant locale files of          * performance.removeMomentLocale\n                                 moment.js",normalizedContent:"# all features\n\nhere are all the main features supported by modern.js builder.\n\n\n# javascript\n\nfeatures                   description                                                    links\nbabel compilation          babel compilation is enabled by default, and multiple babel     * tools.babel\n                           plugins are built in\nts compilation             ts files are compiled by babel by default, you can also use     * tools.babel\n                           ts-loader                                                       * tools.tsloader\ntype checker               runs typescript type checker by default                         * tools.tschecker\njs minification            js minification is enabled by default in production build       * tools.terser\npolyfill                   core-js and other polyfills are injected by default             * output.polyfill\nsourcemap generation       high-quality sourcemap is generated by default in production    * output.disablesourcemap\n                           build\nalias                      optional feature, set import alias                              * source.alias\nrestrict importing paths   optional feature, restrict source code import paths             * source.modulescopes\n\n\n# css\n\nfeatures                  description                                                    links\npostcss compilation       postcss compilation is enabled by default, built-in             * tools.postcss\n                          autoprefixer and other plugins                                  * tools.autoprefixer\nsass preprocessing        compile .scss and .sass files by default                        * tools.sass\nless preprocessing        compile .less files by default                                  * tools.less\ncss modules compilation   support compiling *.module.* files by default                   * tools.cssloader\ncss modules type          optional feature, automatically generate type definition for    * enablecssmoduletsdeclaration\n                          css modules\ncss minification          css minification is enabled by default in production build      * tools.minifycss\nextract css files         css will be extracted as separate files by default              * tools.cssextract\nstyled components         support styled components compilation by default                * tools.styledcomponents\ninsert css into js        optional feature, insert styles via style-loader                * tools.styleloader\n\n\n# html\n\nfeatures           description                                    links\nset title          set html title tag                              * html.title\n                                                                   * html.titlebyentries\nset meta           set html meta tag                               * html.meta\n                                                                   * html.metabyentries\nset favicon        set favicon for page                            * html.favicon\n                                                                   * html.faviconbyentries\nset app icon       set app icon for ios                            * html.appicon\nuse pug template   optional feature, use pug template syntax       * tools.pug\ninline js files    optional feature, inline js files into html     * output.enableinlinescripts\ninline css files   optional feature, inline css files into html    * output.enableinlinestyles\n\n\n# react\n\nfeatures                 description                                     links\nreact refresh            support react refresh by default                 * dev.hmr\nsvg to react component   support to import svg as component by default    * output.svgdefaultexport\n\n\n# static resources\n\nfeatures                    description                                                  links\ninline static resources     small resources are inlined into js by default                * output.dataurilimit\nclean up static resources   automatically clean up static resources in the dist           * output.cleandistpath\n                            directory before each build\ncopy static resources       optional feature, copy static resources to the dist           * output.copy\n                            directory\ngenerate manifest file      optional feature, generate manifest file containing static    * output.enableassetmanifest\n                            asset information\n\n\n# performance\n\nfeatures                         description                                                    links\ndisplay bundle size              after the production build, all bundle sized is displayed by   -\n                                 default\nanalyze bundle size              optional feature, analyze bundle size through bundle            * performance.bundleanalyze\n                                 analyzer\nremove console                   optional feature, remove console.xx in code                     * performance.removeconsole\noptimize the size of moment.js   optional feature, remove the redundant locale files of          * performance.removemomentlocale\n                                 moment.js",charsets:{}},{title:"Glossary",frontmatter:{},regularPath:"/en/guide/glossary.html",relativePath:"en/guide/glossary.md",key:"v-408b0e68",path:"/en/guide/glossary.html",headers:[{level:2,title:"Bundler",slug:"bundler",normalizedTitle:"bundler",charIndex:15},{level:2,title:"Rspack",slug:"rspack",normalizedTitle:"rspack",charIndex:220},{level:2,title:"Builder",slug:"builder",normalizedTitle:"builder",charIndex:363},{level:2,title:"Builder Provider",slug:"builder-provider",normalizedTitle:"builder provider",charIndex:822},{level:2,title:"Modern.js",slug:"modern-js",normalizedTitle:"modern.js",charIndex:1111}],lastUpdated:"10/13/2022, 3:49:10 AM",lastUpdatedTimestamp:166563295e4,headersStr:"Bundler Rspack Builder Builder Provider Modern.js",content:'# Glossary\n\n\n# Bundler\n\nRefers to module bundlers such as webpack and rspack.\n\nWhen Bundler processes the JavaScript application, it builds a dependency graph and then combines every module into one or more bundles.\n\n\n# Rspack\n\nA Rust Bundler, developed by the ByteDance Web Infra team.\n\nRspack is still in development and will be open sourced in the future.\n\n\n# Builder\n\nBuild Engine. The goal of Builder is to "reuse the best practices of build tools".\n\nBundlers are low-level, if we build a project based on webpack, we need to fully understand the webpack config and many webpack plugins and loaders, then spend a lot of time to combine them.\n\nBuilder is a out-of-box build tools. By using Builder, you can quickly gain the ability to build a modern web application.\n\nThe layers inside the Builder are as follows:\n\n\n# Builder Provider\n\nBuilder Provider is a part of Builder. Providers implements corresponding build feature based on specific bundlers.\n\nCurrently there are two Providers:\n\n * @modern-js/builder-webpack-provider: Based on webpack.\n * @modern-js/builder-rspack-provider: Based on rspack.\n\n\n# Modern.js\n\nA modern web engineering system.\n\nModern.js is open sourced by the ByteDance Web Infra team, provides a series of best practices for modern web development, such as integrated development of frontend and backend, conventional routing, building solutions, style solutions, etc.\n\nModern.js Website.',normalizedContent:'# glossary\n\n\n# bundler\n\nrefers to module bundlers such as webpack and rspack.\n\nwhen bundler processes the javascript application, it builds a dependency graph and then combines every module into one or more bundles.\n\n\n# rspack\n\na rust bundler, developed by the bytedance web infra team.\n\nrspack is still in development and will be open sourced in the future.\n\n\n# builder\n\nbuild engine. the goal of builder is to "reuse the best practices of build tools".\n\nbundlers are low-level, if we build a project based on webpack, we need to fully understand the webpack config and many webpack plugins and loaders, then spend a lot of time to combine them.\n\nbuilder is a out-of-box build tools. by using builder, you can quickly gain the ability to build a modern web application.\n\nthe layers inside the builder are as follows:\n\n\n# builder provider\n\nbuilder provider is a part of builder. providers implements corresponding build feature based on specific bundlers.\n\ncurrently there are two providers:\n\n * @modern-js/builder-webpack-provider: based on webpack.\n * @modern-js/builder-rspack-provider: based on rspack.\n\n\n# modern.js\n\na modern web engineering system.\n\nmodern.js is open sourced by the bytedance web infra team, provides a series of best practices for modern web development, such as integrated development of frontend and backend, conventional routing, building solutions, style solutions, etc.\n\nmodern.js website.',charsets:{}},{title:"Introduction",frontmatter:{},regularPath:"/en/guide/introduction.html",relativePath:"en/guide/introduction.md",key:"v-4fede3cc",path:"/en/guide/introduction.html",headers:[{level:2,title:"Features",slug:"features",normalizedTitle:"features",charIndex:244},{level:3,title:"Multiple Build Engines",slug:"multiple-build-engines",normalizedTitle:"multiple build engines",charIndex:257},{level:3,title:"Deep optimization",slug:"deep-optimization",normalizedTitle:"deep optimization",charIndex:786},{level:3,title:"Extensible Plugin System",slug:"extensible-plugin-system",normalizedTitle:"extensible plugin system",charIndex:1294},{level:2,title:"npm packages",slug:"npm-packages",normalizedTitle:"npm packages",charIndex:1675},{level:2,title:"Next Step",slug:"next-step",normalizedTitle:"next step",charIndex:2552}],lastUpdated:"10/13/2022, 7:17:15 AM",lastUpdatedTimestamp:1665645435e3,headersStr:"Features Multiple Build Engines Deep optimization Extensible Plugin System npm packages Next Step",content:"# Introduction\n\nModern.js Builder is a Universal Build Engine for Modern Web Development.\n\nBased on the best practices of thousands web applications in ByteDance, we created Modern.js Builder to provide useful features for web development.\n\n\n# Features\n\n\n# Multiple Build Engines\n\nBuilder supports two build engines: webpack & rspack.\n\nBuilder uses webpack as the default bundler, integrates babel, postcss, terser and other tools to transform or minify codes. And also support using swc and esbuild to improving the compile speed.\n\nAt the same time, We are integrating rspack to improve compilation speed, rspack is a Rust Bundler developed by ByteDance.\n\nAt present, the webpack build engine is stable for production, and the rspack build engine is still under heavy development.\n\n\n# Deep optimization\n\nAt this stage, webpack is still the most mature bundler for product optimization.\n\nBuilder makes full use of various optimization strategies in the webpack ecosystem to ensure the product performance in the production environment.\n\nTaking the chunk splitting scenario as an example, the webpack's splitChunks config is complex, and Builder makes it as an out-of-the-box performance.chunkSplit config, it will split common third-party libraries into chunks to make page loading faster.\n\n\n# Extensible Plugin System\n\nProvides rich configuration items and a flexible plugin system to support in-depth customization of all features.\n\nAll the building abilities of Builder are implemented through plugins:\n\n * Most of the plugins are lightweight, built in Builder, and can be enabled or disabled through configs.\n * Some plugins are more complex and developed as independent npm packages, which can be optionally installed and registered.\n\nBuilder supports custom plugins, allowing framework developers to implement customized build abilities.\n\n\n# npm packages\n\nBelow is the npm package published by Builder.\n\nPACKAGE                                   VERSION   DESCRIPTION\n@modern-js/builder                                  Core package of Builder\n@modern-js/builder-webpack-provider                 Provides webpack build ability\n@modern-js/builder-plugin-esbuild                   ESBuild Plugin\n@modern-js/builder-plugin-node-polyfill             Node Polyfill Plugin\n@modern-js/builder-shared                           Shared modules of Builder\n@modern-js/builder-doc                              Documentation snippets of Builder\n\nYou can view the source code of these packages in the packages/builder directory of the modern.js repository.\n\n\n# Next Step\n\nYou may want:",normalizedContent:"# introduction\n\nmodern.js builder is a universal build engine for modern web development.\n\nbased on the best practices of thousands web applications in bytedance, we created modern.js builder to provide useful features for web development.\n\n\n# features\n\n\n# multiple build engines\n\nbuilder supports two build engines: webpack & rspack.\n\nbuilder uses webpack as the default bundler, integrates babel, postcss, terser and other tools to transform or minify codes. and also support using swc and esbuild to improving the compile speed.\n\nat the same time, we are integrating rspack to improve compilation speed, rspack is a rust bundler developed by bytedance.\n\nat present, the webpack build engine is stable for production, and the rspack build engine is still under heavy development.\n\n\n# deep optimization\n\nat this stage, webpack is still the most mature bundler for product optimization.\n\nbuilder makes full use of various optimization strategies in the webpack ecosystem to ensure the product performance in the production environment.\n\ntaking the chunk splitting scenario as an example, the webpack's splitchunks config is complex, and builder makes it as an out-of-the-box performance.chunksplit config, it will split common third-party libraries into chunks to make page loading faster.\n\n\n# extensible plugin system\n\nprovides rich configuration items and a flexible plugin system to support in-depth customization of all features.\n\nall the building abilities of builder are implemented through plugins:\n\n * most of the plugins are lightweight, built in builder, and can be enabled or disabled through configs.\n * some plugins are more complex and developed as independent npm packages, which can be optionally installed and registered.\n\nbuilder supports custom plugins, allowing framework developers to implement customized build abilities.\n\n\n# npm packages\n\nbelow is the npm package published by builder.\n\npackage                                   version   description\n@modern-js/builder                                  core package of builder\n@modern-js/builder-webpack-provider                 provides webpack build ability\n@modern-js/builder-plugin-esbuild                   esbuild plugin\n@modern-js/builder-plugin-node-polyfill             node polyfill plugin\n@modern-js/builder-shared                           shared modules of builder\n@modern-js/builder-doc                              documentation snippets of builder\n\nyou can view the source code of these packages in the packages/builder directory of the modern.js repository.\n\n\n# next step\n\nyou may want:",charsets:{}},{title:"Quick Start",frontmatter:{},regularPath:"/en/guide/quick-start.html",relativePath:"en/guide/quick-start.md",key:"v-fe8b9b74",path:"/en/guide/quick-start.html",headers:[{level:2,title:"Modern.js project",slug:"modern-js-project",normalizedTitle:"modern.js project",charIndex:18},{level:2,title:"Other projects",slug:"other-projects",normalizedTitle:"other projects",charIndex:304}],lastUpdated:"10/13/2022, 3:49:10 AM",lastUpdatedTimestamp:166563295e4,headersStr:"Modern.js project Other projects",content:"# Quick Start\n\n\n# Modern.js project\n\nModern.js 2.0 use Modern.js Builder as the build engine by default.\n\nTherefore, you do not need to do anything, you can directly use all the configs provided by Modern.js Builder.\n\n> Tips: Modern.js 2.0 is still under development and not officially released yet.\n\n\n# Other projects\n\nTODO",normalizedContent:"# quick start\n\n\n# modern.js project\n\nmodern.js 2.0 use modern.js builder as the build engine by default.\n\ntherefore, you do not need to do anything, you can directly use all the configs provided by modern.js builder.\n\n> tips: modern.js 2.0 is still under development and not officially released yet.\n\n\n# other projects\n\ntodo",charsets:{}},{title:"Home",frontmatter:{home:!0,actionText:"介绍",actionLink:"/zh/guide/introduction.html",subActionText:"快速上手",subActionLink:"/zh/guide/quick-start.html",features:[{title:"开箱即用",details:"基于字节跳动数千个应用沉淀的最佳实践，默认提供 Web 开发所需的全方位能力。"},{title:"深度优化",details:"内置丰富的拆包策略，自动优化各类静态资源，保证生产环境的产物性能最优。"},{title:"易于扩展",details:"提供丰富的配置项和灵活的插件系统，支持对各项能力进行深度定制。"}]},regularPath:"/zh/",relativePath:"zh/README.md",key:"v-67d941bf",path:"/zh/",lastUpdated:"2022/10/13 03:49:10",lastUpdatedTimestamp:166563295e4,headersStr:null,content:"The Modern\n\nWeb Build Engine\n\n面向现代 Web 开发场景的通用构建引擎\n\nCopyright © 2022 ByteDance.",normalizedContent:"the modern\n\nweb build engine\n\n面向现代 web 开发场景的通用构建引擎\n\ncopyright © 2022 bytedance.",charsets:{cjk:!0}},{title:"Builder Core",frontmatter:{extractApiHeaders:[2]},regularPath:"/zh/api/builder-core.html",relativePath:"zh/api/builder-core.md",key:"v-2cc513e8",path:"/zh/api/builder-core.html",headers:[{level:2,title:"createBuilder",slug:"createbuilder",normalizedTitle:"createbuilder",charIndex:46},{level:3,title:"Webpack Provider",slug:"webpack-provider",normalizedTitle:"webpack provider",charIndex:207},{level:3,title:"Rspack Provider",slug:"rspack-provider",normalizedTitle:"rspack provider",charIndex:589},{level:3,title:"options",slug:"options",normalizedTitle:"options",charIndex:572},{level:4,title:"构建产物类型",slug:"构建产物类型",normalizedTitle:"构建产物类型",charIndex:1422},{level:2,title:"mergeBuilderConfig",slug:"mergebuilderconfig",normalizedTitle:"mergebuilderconfig",charIndex:1775},{level:2,title:"webpack",slug:"webpack",normalizedTitle:"webpack",charIndex:112},{level:2,title:"HtmlWebpackPlugin",slug:"htmlwebpackplugin",normalizedTitle:"htmlwebpackplugin",charIndex:2466}],lastUpdated:"2022/10/13 03:49:10",lastUpdatedTimestamp:166563295e4,headersStr:"createBuilder Webpack Provider Rspack Provider options 构建产物类型 mergeBuilderConfig webpack HtmlWebpackPlugin",content:"# Builder Core\n\n本章节描述了 Builder 提供的一些核心方法。\n\n\n# createBuilder\n\n创建一个 Builder 实例对象。\n\n使用该方法时，需要搭配 @modern-js/builder-webpack-provider 或 @modern-js/builder-rspack-provider 使用，Provider 基于特定 bundler 实现了对应的构建能力。\n\n\n# Webpack Provider\n\n当传入 builderWebpackProvider 时，Builder 会使用 webpack 作为 bundler 进行构建。\n\nimport { createBuilder } from '@modern-js/builder';\nimport { builderWebpackProvider } from '@modern-js/builder-webpack-provider';\n\nconst provider = builderWebpackProvider({\n  builderConfig: {\n    // some configs\n  },\n});\n\nconst builder = await createBuilder(provider, {\n  // some options\n});\n\n\n\n# Rspack Provider\n\n当传入 builderRspackProvider 时，Builder 会使用 rspack 作为 bundler 进行构建。\n\nimport { createBuilder } from '@modern-js/builder';\nimport { builderRspackProvider } from '@modern-js/builder-rspack-provider';\n\nconst provider = builderRspackProvider({\n  builderConfig: {\n    // some configs\n  },\n});\n\nconst builder = await createBuilder(provider, {\n  // some options\n});\n\n\n> Tips: @modern-js/builder-rspack-provider 尚未开发完成。\n\n\n# options\n\ncreateBuilder 的第二个参数是一个配置对象，你可以传入以下选项：\n\ntype BuilderEntry = Record<string, string | string[]>;\n\ntype BuilderTarget = 'web' | 'node' | 'modern-web';\n\ntype CreateBuilderOptions = {\n  cwd?: string;\n  entry?: BuilderEntry;\n  target?: BuilderTarget | BuilderTarget[];\n  framework?: string;\n  configPath?: string | null;\n};\n\n\n各个选项的作用：\n\n * cwd: 当前执行构建的根路径，默认值为 process.cwd()\n * entry: 构建入口对象\n * target: 构建产物类型，默认值为 ['web']\n * framework: 框架的英文名称，唯一标识符，默认值为 'modern.js'\n * configPath: 框架配置文件的路径（绝对路径），该参数影响构建缓存更新\n\n# 构建产物类型\n\ntarget 表示构建产物类型，可以设置为以下值：\n\n * web: 用于浏览器的产物\n * modern-web：用于现代浏览器的产物\n * node: 用于 SSR 场景的产物\n\n当 target 为包含多个值的数组时，会并行构建并生成多份不同的产物。比如同时构建浏览器产物和 SSR 产物：\n\nconst builder = await createBuilder(provider, {\n  target: ['web', 'node'],\n});\n\n\n\n# mergeBuilderConfig\n\n合并多份 Builder 配置对象，并返回一个合并后的新对象。\n\n * Type\n\nfunction mergeBuilderConfig(...configs: BuilderConfig[]): BuilderConfig;\n\n\n * Example\n\nimport { mergeBuilderConfig } from '@modern-js/builder';\n\nconst config1 = {\n  dev: {\n    https: false,\n  },\n};\nconst config2 = {\n  dev: {\n    https: true,\n  },\n};\n\nconst mergedConfig = mergeBuilderConfig(config1, config2);\n\nconsole.log(mergedConfig); // { dev: { https: true } }\n\n\n> 该方法不会修改传入的 config 对象。\n\n\n# webpack\n\nwebpack 对象，用于消费 webpack 内置插件或类型定义。\n\n * Example\n\nimport webpack from '@modern-js/builder-webpack-provider/webpack';\n\nnew webpack.DefinePlugin();\n\n\n> 大部分场景下，推荐从 Builder 中引用 webpack 对象，而不是手动安装一份 \"webpack\" 依赖，这样可以避免出现多实例问题。\n\n\n# HtmlWebpackPlugin\n\nHtmlWebpackPlugin 对象，通常用于实现 HtmlWebpackPlugin 的自定义插件。\n\n * Example\n\nimport HtmlWebpackPlugin from '@modern-js/builder-webpack-provider/html-webpack-plugin';\n\n\n> 大部分场景下，推荐从 Builder 中引用 HtmlWebpackPlugin 对象，而不是手动安装一份 \"html-webpack-plugin\" 依赖，这样可以避免出现多实例问题。",normalizedContent:"# builder core\n\n本章节描述了 builder 提供的一些核心方法。\n\n\n# createbuilder\n\n创建一个 builder 实例对象。\n\n使用该方法时，需要搭配 @modern-js/builder-webpack-provider 或 @modern-js/builder-rspack-provider 使用，provider 基于特定 bundler 实现了对应的构建能力。\n\n\n# webpack provider\n\n当传入 builderwebpackprovider 时，builder 会使用 webpack 作为 bundler 进行构建。\n\nimport { createbuilder } from '@modern-js/builder';\nimport { builderwebpackprovider } from '@modern-js/builder-webpack-provider';\n\nconst provider = builderwebpackprovider({\n  builderconfig: {\n    // some configs\n  },\n});\n\nconst builder = await createbuilder(provider, {\n  // some options\n});\n\n\n\n# rspack provider\n\n当传入 builderrspackprovider 时，builder 会使用 rspack 作为 bundler 进行构建。\n\nimport { createbuilder } from '@modern-js/builder';\nimport { builderrspackprovider } from '@modern-js/builder-rspack-provider';\n\nconst provider = builderrspackprovider({\n  builderconfig: {\n    // some configs\n  },\n});\n\nconst builder = await createbuilder(provider, {\n  // some options\n});\n\n\n> tips: @modern-js/builder-rspack-provider 尚未开发完成。\n\n\n# options\n\ncreatebuilder 的第二个参数是一个配置对象，你可以传入以下选项：\n\ntype builderentry = record<string, string | string[]>;\n\ntype buildertarget = 'web' | 'node' | 'modern-web';\n\ntype createbuilderoptions = {\n  cwd?: string;\n  entry?: builderentry;\n  target?: buildertarget | buildertarget[];\n  framework?: string;\n  configpath?: string | null;\n};\n\n\n各个选项的作用：\n\n * cwd: 当前执行构建的根路径，默认值为 process.cwd()\n * entry: 构建入口对象\n * target: 构建产物类型，默认值为 ['web']\n * framework: 框架的英文名称，唯一标识符，默认值为 'modern.js'\n * configpath: 框架配置文件的路径（绝对路径），该参数影响构建缓存更新\n\n# 构建产物类型\n\ntarget 表示构建产物类型，可以设置为以下值：\n\n * web: 用于浏览器的产物\n * modern-web：用于现代浏览器的产物\n * node: 用于 ssr 场景的产物\n\n当 target 为包含多个值的数组时，会并行构建并生成多份不同的产物。比如同时构建浏览器产物和 ssr 产物：\n\nconst builder = await createbuilder(provider, {\n  target: ['web', 'node'],\n});\n\n\n\n# mergebuilderconfig\n\n合并多份 builder 配置对象，并返回一个合并后的新对象。\n\n * type\n\nfunction mergebuilderconfig(...configs: builderconfig[]): builderconfig;\n\n\n * example\n\nimport { mergebuilderconfig } from '@modern-js/builder';\n\nconst config1 = {\n  dev: {\n    https: false,\n  },\n};\nconst config2 = {\n  dev: {\n    https: true,\n  },\n};\n\nconst mergedconfig = mergebuilderconfig(config1, config2);\n\nconsole.log(mergedconfig); // { dev: { https: true } }\n\n\n> 该方法不会修改传入的 config 对象。\n\n\n# webpack\n\nwebpack 对象，用于消费 webpack 内置插件或类型定义。\n\n * example\n\nimport webpack from '@modern-js/builder-webpack-provider/webpack';\n\nnew webpack.defineplugin();\n\n\n> 大部分场景下，推荐从 builder 中引用 webpack 对象，而不是手动安装一份 \"webpack\" 依赖，这样可以避免出现多实例问题。\n\n\n# htmlwebpackplugin\n\nhtmlwebpackplugin 对象，通常用于实现 htmlwebpackplugin 的自定义插件。\n\n * example\n\nimport htmlwebpackplugin from '@modern-js/builder-webpack-provider/html-webpack-plugin';\n\n\n> 大部分场景下，推荐从 builder 中引用 htmlwebpackplugin 对象，而不是手动安装一份 \"html-webpack-plugin\" 依赖，这样可以避免出现多实例问题。",charsets:{cjk:!0}},{title:"Builder Instance",frontmatter:{extractApiHeaders:[2]},regularPath:"/zh/api/builder-instance.html",relativePath:"zh/api/builder-instance.md",key:"v-25796e4c",path:"/zh/api/builder-instance.html",headers:[{level:2,title:"builder.context",slug:"builder-context",normalizedTitle:"builder.context",charIndex:54},{level:3,title:"builder.context.entry",slug:"builder-context-entry",normalizedTitle:"builder.context.entry",charIndex:110},{level:3,title:"builder.context.rootPath",slug:"builder-context-rootpath",normalizedTitle:"builder.context.rootpath",charIndex:244},{level:3,title:"builder.context.srcPath",slug:"builder-context-srcpath",normalizedTitle:"builder.context.srcpath",charIndex:352},{level:3,title:"builder.context.distPath",slug:"builder-context-distpath",normalizedTitle:"builder.context.distpath",charIndex:428},{level:3,title:"builder.context.cachePath",slug:"builder-context-cachepath",normalizedTitle:"builder.context.cachepath",charIndex:553},{level:3,title:"builder.context.configPath",slug:"builder-context-configpath",normalizedTitle:"builder.context.configpath",charIndex:641},{level:3,title:"builder.context.tsconfigPath",slug:"builder-context-tsconfigpath",normalizedTitle:"builder.context.tsconfigpath",charIndex:773},{level:3,title:"builder.context.framework",slug:"builder-context-framework",normalizedTitle:"builder.context.framework",charIndex:919},{level:3,title:"builder.context.devServer",slug:"builder-context-devserver",normalizedTitle:"builder.context.devserver",charIndex:1030},{level:2,title:"builder.build",slug:"builder-build",normalizedTitle:"builder.build",charIndex:1180},{level:3,title:"开发环境构建",slug:"开发环境构建",normalizedTitle:"开发环境构建",charIndex:1412},{level:3,title:"监听文件变化",slug:"监听文件变化",normalizedTitle:"监听文件变化",charIndex:1520},{level:2,title:"builder.startDevServer",slug:"builder-startdevserver",normalizedTitle:"builder.startdevserver",charIndex:1617},{level:3,title:"自定义 URL 输出",slug:"自定义-url-输出",normalizedTitle:"自定义 url 输出",charIndex:2519},{level:3,title:"严格限制端口",slug:"严格限制端口",normalizedTitle:"严格限制端口",charIndex:2646},{level:3,title:"自定义 Compiler",slug:"自定义-compiler",normalizedTitle:"自定义 compiler",charIndex:1833},{level:2,title:"builder.createCompiler",slug:"builder-createcompiler",normalizedTitle:"builder.createcompiler",charIndex:2930},{level:2,title:"builder.addPlugins",slug:"builder-addplugins",normalizedTitle:"builder.addplugins",charIndex:3161},{level:2,title:"builder.removePlugins",slug:"builder-removeplugins",normalizedTitle:"builder.removeplugins",charIndex:3632},{level:2,title:"builder.isPluginExists",slug:"builder-ispluginexists",normalizedTitle:"builder.ispluginexists",charIndex:3923}],lastUpdated:"2022/10/13 03:49:10",lastUpdatedTimestamp:166563295e4,headersStr:"builder.context builder.context.entry builder.context.rootPath builder.context.srcPath builder.context.distPath builder.context.cachePath builder.context.configPath builder.context.tsconfigPath builder.context.framework builder.context.devServer builder.build 开发环境构建 监听文件变化 builder.startDevServer 自定义 URL 输出 严格限制端口 自定义 Compiler builder.createCompiler builder.addPlugins builder.removePlugins builder.isPluginExists",content:"# Builder Instance\n\n本章节描述了 Builder 实例对象上所有的属性和方法。\n\n\n# builder.context\n\nbuilder.context 是一个只读对象，提供一些上下文信息。\n\n\n# builder.context.entry\n\n构建入口对象，对应调用 createBuilder 时传入的 entry 选项。\n\n * Type\n\ntype BuilderEntry = Record<string, string | string[]>;\n\n\n\n# builder.context.rootPath\n\n当前执行构建的根路径，对应调用 createBuilder 时传入的 cwd 选项。\n\n * Type\n\ntype RootPath = string;\n\n\n\n# builder.context.srcPath\n\nsrc 目录的绝对路径。\n\n * Type\n\ntype SrcPath = string;\n\n\n\n# builder.context.distPath\n\n构建产物输出目录的绝对路径，对应 BuilderConfig 中的 output.distPath.root 配置项。\n\n * Type\n\ntype DistPath = string;\n\n\n\n# builder.context.cachePath\n\n构建过程中生成的缓存文件所在的绝对路径。\n\n * Type\n\ntype CachePath = string;\n\n\n\n# builder.context.configPath\n\n框架配置文件的绝对路径，对应调用 createBuilder 时传入的 configPath 选项。\n\n * Type\n\ntype ConfigPath = string | undefined;\n\n\n\n# builder.context.tsconfigPath\n\ntsconfig.json 文件的绝对路径，若项目中不存在 tsconfig.json 文件，则为 undefined。\n\n * Type\n\ntype TsconfigPath = string | undefined;\n\n\n\n# builder.context.framework\n\n框架的英文名称，唯一标识符，默认值为 'modern.js'。\n\n * Type\n\ntype Framework = string | undefined;\n\n\n\n# builder.context.devServer\n\nDev Server 相关信息，包含了当前 Dev Server 的 hostname 和端口号。\n\n * Type\n\ntype DevServer = {\n  hostname: string;\n  port: number;\n};\n\n\n\n# builder.build\n\n调用 build 方法时，会执行一次生产环境构建。\n\n * Type\n\ntype BuildOptions = {\n  mode?: 'development' | 'production';\n  watch?: boolean;\n};\n\nfunction Build(options?: BuildOptions): Promise<void>;\n\n\n * Example\n\nawait builder.build();\n\n\n\n# 开发环境构建\n\n如果需要执行一次开发环境构建，可以将 mode 参数设置为 'development'。\n\nawait builder.build({\n  mode: 'development',\n});\n\n\n\n# 监听文件变化\n\n如果需要自动监听文件变化并重新执行构建，可以将 watch 参数设置为 true。\n\nawait builder.build({\n  watch: true,\n});\n\n\n\n# builder.startDevServer\n\n启动本地 Dev Server，基于 Modern.js Dev Server 实现。\n\n * Type\n\ntype StartDevServerOptions = {\n  // 是否输出 URL 信息，默认为 true\n  printURLs?: boolean;\n  // 是否在端口被占用时抛出异常，默认为 false\n  strictPort?: boolean;\n  // 自定义 Compiler 对象\n  compiler?: Compiler | MultiCompiler;\n  // 透传与构建无关的 dev server 配置\n  serverOptions?: Partial<ModernDevServerOptions>;\n};\n\ntype StartDevServerResult = {\n  urls: string[];\n  port: number;\n  server: Server;\n};\n\nfunction StartDevServer(\n  options?: StartDevServerOptions,\n): Promise<StartDevServerResult>;\n\n\n * Example\n\n启动 Dev Server：\n\nawait builder.startDevServer();\n\n\nstartDevServer 会返回以下参数：\n\n * urls：访问 Dev Server 的 URLs\n * port 实际监听的端口号\n * server：Server 实例对象\n\nconst { urls, port, server } = await builder.startDevServer();\nconsole.log(urls); // ['http://localhost:8080', 'http://192.168.0.1:8080']\nconsole.log(port); // 8080\n\n// 关闭 Dev Server\nawait server.close();\n\n\n\n# 自定义 URL 输出\n\n将 printURLs 设置为 false 可以禁用默认的 URL 输出，此时你可以输出自定义的日志内容。\n\nawait builder.startDevServer({\n  printURLs: false,\n});\n\n\n\n# 严格限制端口\n\n当端口被占用时，Builder 会自动递增端口号，直至找到一个可用端口。\n\n如果你希望在端口被占用时抛出异常，可以将 strictPort 设置为 true。\n\nawait builder.startDevServer({\n  strictPort: true,\n});\n\n\n\n# 自定义 Compiler\n\n个别情况下，你可能希望使用自定义的 compiler：\n\nconst compiler = webpack({\n  // ...\n});\nawait builder.startDevServer({\n  compiler,\n});\n\n\n\n# builder.createCompiler\n\n创建一个 compiler 对象。\n\n * Type\n\nfunction CreateCompiler(): Promise<Compiler | MultiCompiler>;\n\n\n * Example\n\nconst compiler = await builder.createCompiler();\n\n\n> 大部分场景下，不需要使用该 API，除非需要进行自定义 Dev Server 等高级操作。\n\n\n# builder.addPlugins\n\n注册一个或多个 builder 插件，可以被多次调用。\n\n该方法需要在开始编译前调用，如果在开始编译之后调用，则不会影响编译结果。\n\n * Type\n\ntype AddPluginsOptions = { before?: string } | { after?: string };\n\nfunction AddPlugins(\n  plugins: BuilderPlugins[],\n  options?: AddPluginsOptions,\n): Promise<void>;\n\n\n * Example\n\nbuilder.addPlugins([PluginFoo(), PluginBar()]);\n\n// 在 bar 插件之前插入\nbuilder.addPlugins([PluginFoo()], { before: 'bar' });\n\n// 在 bar 插件之后插入\nbuilder.addPlugins([PluginFoo()], { after: 'bar' });\n\n\n\n# builder.removePlugins\n\n移除一个或多个 builder 插件，可以被多次调用。\n\n该方法需要在开始编译前调用，如果在开始编译之后调用，则不会影响编译结果。\n\n * Type\n\nfunction RemovePlugins(pluginNames: string[]): void;\n\n\n * Example\n\n// 添加插件\nconst pluginFoo = PluginFoo();\nbuilder.addPlugins(pluginFoo);\n\n// 移除插件\nbuilder.removePlugins([pluginFoo.name]);\n\n\n\n# builder.isPluginExists\n\n判断某个插件是否已经被注册。\n\n * Type\n\nfunction IsPluginExists(pluginName: string): boolean;\n\n\n * Example\n\nbuilder.addPlugins([PluginFoo()]);\n\nbuilder.isPluginExists(PluginFoo().name); // true\n",normalizedContent:"# builder instance\n\n本章节描述了 builder 实例对象上所有的属性和方法。\n\n\n# builder.context\n\nbuilder.context 是一个只读对象，提供一些上下文信息。\n\n\n# builder.context.entry\n\n构建入口对象，对应调用 createbuilder 时传入的 entry 选项。\n\n * type\n\ntype builderentry = record<string, string | string[]>;\n\n\n\n# builder.context.rootpath\n\n当前执行构建的根路径，对应调用 createbuilder 时传入的 cwd 选项。\n\n * type\n\ntype rootpath = string;\n\n\n\n# builder.context.srcpath\n\nsrc 目录的绝对路径。\n\n * type\n\ntype srcpath = string;\n\n\n\n# builder.context.distpath\n\n构建产物输出目录的绝对路径，对应 builderconfig 中的 output.distpath.root 配置项。\n\n * type\n\ntype distpath = string;\n\n\n\n# builder.context.cachepath\n\n构建过程中生成的缓存文件所在的绝对路径。\n\n * type\n\ntype cachepath = string;\n\n\n\n# builder.context.configpath\n\n框架配置文件的绝对路径，对应调用 createbuilder 时传入的 configpath 选项。\n\n * type\n\ntype configpath = string | undefined;\n\n\n\n# builder.context.tsconfigpath\n\ntsconfig.json 文件的绝对路径，若项目中不存在 tsconfig.json 文件，则为 undefined。\n\n * type\n\ntype tsconfigpath = string | undefined;\n\n\n\n# builder.context.framework\n\n框架的英文名称，唯一标识符，默认值为 'modern.js'。\n\n * type\n\ntype framework = string | undefined;\n\n\n\n# builder.context.devserver\n\ndev server 相关信息，包含了当前 dev server 的 hostname 和端口号。\n\n * type\n\ntype devserver = {\n  hostname: string;\n  port: number;\n};\n\n\n\n# builder.build\n\n调用 build 方法时，会执行一次生产环境构建。\n\n * type\n\ntype buildoptions = {\n  mode?: 'development' | 'production';\n  watch?: boolean;\n};\n\nfunction build(options?: buildoptions): promise<void>;\n\n\n * example\n\nawait builder.build();\n\n\n\n# 开发环境构建\n\n如果需要执行一次开发环境构建，可以将 mode 参数设置为 'development'。\n\nawait builder.build({\n  mode: 'development',\n});\n\n\n\n# 监听文件变化\n\n如果需要自动监听文件变化并重新执行构建，可以将 watch 参数设置为 true。\n\nawait builder.build({\n  watch: true,\n});\n\n\n\n# builder.startdevserver\n\n启动本地 dev server，基于 modern.js dev server 实现。\n\n * type\n\ntype startdevserveroptions = {\n  // 是否输出 url 信息，默认为 true\n  printurls?: boolean;\n  // 是否在端口被占用时抛出异常，默认为 false\n  strictport?: boolean;\n  // 自定义 compiler 对象\n  compiler?: compiler | multicompiler;\n  // 透传与构建无关的 dev server 配置\n  serveroptions?: partial<moderndevserveroptions>;\n};\n\ntype startdevserverresult = {\n  urls: string[];\n  port: number;\n  server: server;\n};\n\nfunction startdevserver(\n  options?: startdevserveroptions,\n): promise<startdevserverresult>;\n\n\n * example\n\n启动 dev server：\n\nawait builder.startdevserver();\n\n\nstartdevserver 会返回以下参数：\n\n * urls：访问 dev server 的 urls\n * port 实际监听的端口号\n * server：server 实例对象\n\nconst { urls, port, server } = await builder.startdevserver();\nconsole.log(urls); // ['http://localhost:8080', 'http://192.168.0.1:8080']\nconsole.log(port); // 8080\n\n// 关闭 dev server\nawait server.close();\n\n\n\n# 自定义 url 输出\n\n将 printurls 设置为 false 可以禁用默认的 url 输出，此时你可以输出自定义的日志内容。\n\nawait builder.startdevserver({\n  printurls: false,\n});\n\n\n\n# 严格限制端口\n\n当端口被占用时，builder 会自动递增端口号，直至找到一个可用端口。\n\n如果你希望在端口被占用时抛出异常，可以将 strictport 设置为 true。\n\nawait builder.startdevserver({\n  strictport: true,\n});\n\n\n\n# 自定义 compiler\n\n个别情况下，你可能希望使用自定义的 compiler：\n\nconst compiler = webpack({\n  // ...\n});\nawait builder.startdevserver({\n  compiler,\n});\n\n\n\n# builder.createcompiler\n\n创建一个 compiler 对象。\n\n * type\n\nfunction createcompiler(): promise<compiler | multicompiler>;\n\n\n * example\n\nconst compiler = await builder.createcompiler();\n\n\n> 大部分场景下，不需要使用该 api，除非需要进行自定义 dev server 等高级操作。\n\n\n# builder.addplugins\n\n注册一个或多个 builder 插件，可以被多次调用。\n\n该方法需要在开始编译前调用，如果在开始编译之后调用，则不会影响编译结果。\n\n * type\n\ntype addpluginsoptions = { before?: string } | { after?: string };\n\nfunction addplugins(\n  plugins: builderplugins[],\n  options?: addpluginsoptions,\n): promise<void>;\n\n\n * example\n\nbuilder.addplugins([pluginfoo(), pluginbar()]);\n\n// 在 bar 插件之前插入\nbuilder.addplugins([pluginfoo()], { before: 'bar' });\n\n// 在 bar 插件之后插入\nbuilder.addplugins([pluginfoo()], { after: 'bar' });\n\n\n\n# builder.removeplugins\n\n移除一个或多个 builder 插件，可以被多次调用。\n\n该方法需要在开始编译前调用，如果在开始编译之后调用，则不会影响编译结果。\n\n * type\n\nfunction removeplugins(pluginnames: string[]): void;\n\n\n * example\n\n// 添加插件\nconst pluginfoo = pluginfoo();\nbuilder.addplugins(pluginfoo);\n\n// 移除插件\nbuilder.removeplugins([pluginfoo.name]);\n\n\n\n# builder.ispluginexists\n\n判断某个插件是否已经被注册。\n\n * type\n\nfunction ispluginexists(pluginname: string): boolean;\n\n\n * example\n\nbuilder.addplugins([pluginfoo()]);\n\nbuilder.ispluginexists(pluginfoo().name); // true\n",charsets:{cjk:!0}},{title:"Builder Types",frontmatter:{extractApiHeaders:[2]},regularPath:"/zh/api/builder-types.html",relativePath:"zh/api/builder-types.md",key:"v-4f7a5876",path:"/zh/api/builder-types.html",headers:[{level:2,title:"BuilderInstance",slug:"builderinstance",normalizedTitle:"builderinstance",charIndex:47},{level:2,title:"BuilderContext",slug:"buildercontext",normalizedTitle:"buildercontext",charIndex:208},{level:2,title:"BuilderPlugin",slug:"builderplugin",normalizedTitle:"builderplugin",charIndex:362},{level:2,title:"BuilderTarget",slug:"buildertarget",normalizedTitle:"buildertarget",charIndex:655}],lastUpdated:"2022/10/13 03:49:10",lastUpdatedTimestamp:166563295e4,headersStr:"BuilderInstance BuilderContext BuilderPlugin BuilderTarget",content:"# Builder Types\n\n本章节描述了 Builder 提供的一些类型定义。\n\n\n# BuilderInstance\n\nBuilder 实例的类型。\n\nimport { BuilderInstance } from '@modern-js/builder';\n\nconst builder: BuilderInstance = await createBuilder(provider, {});\n\n\n\n# BuilderContext\n\nBuilder 实例中 context 属性的类型定义。\n\nimport { BuilderContext } from '@modern-js/builder';\n\nconst context: BuilderContext = builder.context;\n\n\n\n# BuilderPlugin\n\nBuilder 插件的类型，需要配合 provider 中提供的 BuilderPluginAPI 类型来使用。\n\nimport { BuilderPlugin } from '@modern-js/builder';\nimport { BuilderPluginAPI } from '@modern-js/builder-webpack-provider';\n\nconst myPlugin: BuilderPlugin<BuilderPluginAPI> = {\n  name: 'my-plugin',\n  setup() {},\n};\n\n\n\n# BuilderTarget\n\nBuilder 构建产物的类型。\n\nimport { BuilderTarget } from '@modern-js/builder';\n",normalizedContent:"# builder types\n\n本章节描述了 builder 提供的一些类型定义。\n\n\n# builderinstance\n\nbuilder 实例的类型。\n\nimport { builderinstance } from '@modern-js/builder';\n\nconst builder: builderinstance = await createbuilder(provider, {});\n\n\n\n# buildercontext\n\nbuilder 实例中 context 属性的类型定义。\n\nimport { buildercontext } from '@modern-js/builder';\n\nconst context: buildercontext = builder.context;\n\n\n\n# builderplugin\n\nbuilder 插件的类型，需要配合 provider 中提供的 builderpluginapi 类型来使用。\n\nimport { builderplugin } from '@modern-js/builder';\nimport { builderpluginapi } from '@modern-js/builder-webpack-provider';\n\nconst myplugin: builderplugin<builderpluginapi> = {\n  name: 'my-plugin',\n  setup() {},\n};\n\n\n\n# buildertarget\n\nbuilder 构建产物的类型。\n\nimport { buildertarget } from '@modern-js/builder';\n",charsets:{cjk:!0}},{title:"Dev Config",frontmatter:{extractApiHeaders:[2]},regularPath:"/zh/api/config-dev.html",relativePath:"zh/api/config-dev.md",key:"v-86a08da8",path:"/zh/api/config-dev.html",headers:[{level:2,title:"dev.assetPrefix",slug:"dev-assetprefix",normalizedTitle:"dev.assetprefix",charIndex:46},{level:4,title:"Boolean 类型",slug:"boolean-类型",normalizedTitle:"boolean 类型",charIndex:216},{level:4,title:"String 类型",slug:"string-类型",normalizedTitle:"string 类型",charIndex:484},{level:2,title:"dev.hmr",slug:"dev-hmr",normalizedTitle:"dev.hmr",charIndex:738},{level:2,title:"dev.https",slug:"dev-https",normalizedTitle:"dev.https",charIndex:920},{level:4,title:"自动生成证书",slug:"自动生成证书",normalizedTitle:"自动生成证书",charIndex:1223},{level:4,title:"手动设置证书",slug:"手动设置证书",normalizedTitle:"手动设置证书",charIndex:1571},{level:2,title:"dev.port",slug:"dev-port",normalizedTitle:"dev.port",charIndex:1892},{level:4,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:2008},{level:2,title:"dev.progressBar",slug:"dev-progressbar",normalizedTitle:"dev.progressbar",charIndex:2081},{level:2,title:"dev.startUrl",slug:"dev-starturl",normalizedTitle:"dev.starturl",charIndex:2212}],lastUpdated:"2022/10/13 03:49:10",lastUpdatedTimestamp:166563295e4,headersStr:"dev.assetPrefix Boolean 类型 String 类型 dev.hmr dev.https 自动生成证书 手动设置证书 dev.port 示例 dev.progressBar dev.startUrl",content:"# Dev Config\n\n本章节描述了 Builder 中与本地开发有关的配置。\n\n\n# dev.assetPrefix\n\n * Type: boolean | string\n * Default: '/'\n\n设置开发环境下的静态资源 URL 前缀，对应 webpack 的 output.publicPath 配置。\n\n该配置项仅用于开发环境。在生产环境下，请使用 output.assetPrefix 配置项进行设置。\n\n# Boolean 类型\n\n如果设置 assetPrefix 为 true，Builder 会自动计算出 //ip:port/ 作为 URL 前缀：\n\nexport default {\n  dev: {\n    assetPrefix: true,\n  },\n};\n\n\n对应 JS 文件在浏览器中加载的地址如下：\n\n<script defer src=\"//${ip}:8080/static/js/main.js\"><\/script>\n\n\n如果设置 assetPrefix 为 false 或不设置，则默认使用 / 作为访问前缀。\n\n# String 类型\n\n当 assetPrefix 的值为 string 类型时，字符串会作为前缀，自动拼接到静态资源访问 URL 上：\n\nexport default {\n  dev: {\n    assetPrefix: 'http://example.com/assets/',\n  },\n};\n\n\n对应 JS 文件在浏览器中加载的地址如下：\n\n<script defer src=\"http://example.com/assets/static/js/main.js\"><\/script>\n\n\n\n# dev.hmr\n\n * Type: boolean\n * Default: true\n\n是否开启 Hot Module Replacement 热更新能力。\n\n当 hmr 设置为 false 时，将不再提供热更新和 react-refresh 功能。\n\nexport default {\n  dev: {\n    hmr: false,\n  },\n};\n\n\n\n# dev.https\n\n * Type: boolean | { key: string; cert: string }\n * Default: false\n\n配置该选项后，可以开启 Dev Server 对 HTTPS 的支持，同时会禁用 HTTP 服务器。\n\n开启前：\n\n  > Local:    http://localhost:8080/\n  > Network:  http://192.168.0.1:8080/\n\n\n开启后：\n\n  > Local:    https://localhost:8080/\n  > Network:  https://192.168.0.1:8080/\n\n\n# 自动生成证书\n\n你可以直接将 https 设置为 true，Builder 会基于 devcert 来自动生成 Dev Server 所需的 HTTPS 证书。\n\nexport default {\n  dev: {\n    https: true,\n  },\n};\n\n\n该方式有一定局限性，由于 devcert 目前不支持 IP addresses，因此访问 Network 域名时，会遇到「您的连接不是私密连接」的问题。\n\n此问题的解决方法为：点击 Chrome 浏览器问题页面的「高级」->「继续前往 192.168.0.1（不安全）」。\n\nTIP\n\nhttps 代理自动安装证书需要获取 root 权限, 请根据提示输入密码即可。 密码仅在信任证书时使用，不会泄漏或者用于其他环节。\n\n# 手动设置证书\n\n你也可以在 dev.https 选项中手动传入 HTTPS 服务器所需要的证书和对应的私钥，这个参数将直接传递给 Node.js 中 https 模块的 createServer。\n\n具体可以参考 https.createServer。\n\nimport fs from 'fs';\n\nexport default {\n  dev: {\n    https: {\n      key: fs.readFileSync('certificates/private.pem'),\n      cert: fs.readFileSync('certificates/public.pem'),\n    },\n  },\n};\n\n\n\n# dev.port\n\n * Type: number\n * Default: 8080\n\n设置 Dev Server 监听的端口号。\n\n默认情况下，Dev Server 会监听 8080 端口，并在端口被占用时自动递增端口号。\n\n# 示例\n\n将端口设置为 3000：\n\nexport default {\n  dev: {\n    port: 3000,\n  },\n};\n\n\n\n# dev.progressBar\n\n * Type: boolean\n * Default: true\n\n是否启用编译过程中的进度条。\n\nexport default {\n  dev: {\n    progressBar: false,\n  },\n};\n\n\n\n# dev.startUrl\n\n * Type: boolean | string | string[] | undefined\n * Default: undefined\n\ndev.startUrl 用来设置启动时打开的页面，默认情况下不开启。你可以设置为如下的值：\n\nexport default {\n  dev: {\n    // 默认打开项目预览页面\n    startUrl: true,\n    // 打开指定的页面\n    startUrl: 'http://localhost:8080',\n    // 打开多个页面\n    startUrl: ['http://localhost:8080', 'http://localhost:8080/about'],\n  },\n};\n",normalizedContent:"# dev config\n\n本章节描述了 builder 中与本地开发有关的配置。\n\n\n# dev.assetprefix\n\n * type: boolean | string\n * default: '/'\n\n设置开发环境下的静态资源 url 前缀，对应 webpack 的 output.publicpath 配置。\n\n该配置项仅用于开发环境。在生产环境下，请使用 output.assetprefix 配置项进行设置。\n\n# boolean 类型\n\n如果设置 assetprefix 为 true，builder 会自动计算出 //ip:port/ 作为 url 前缀：\n\nexport default {\n  dev: {\n    assetprefix: true,\n  },\n};\n\n\n对应 js 文件在浏览器中加载的地址如下：\n\n<script defer src=\"//${ip}:8080/static/js/main.js\"><\/script>\n\n\n如果设置 assetprefix 为 false 或不设置，则默认使用 / 作为访问前缀。\n\n# string 类型\n\n当 assetprefix 的值为 string 类型时，字符串会作为前缀，自动拼接到静态资源访问 url 上：\n\nexport default {\n  dev: {\n    assetprefix: 'http://example.com/assets/',\n  },\n};\n\n\n对应 js 文件在浏览器中加载的地址如下：\n\n<script defer src=\"http://example.com/assets/static/js/main.js\"><\/script>\n\n\n\n# dev.hmr\n\n * type: boolean\n * default: true\n\n是否开启 hot module replacement 热更新能力。\n\n当 hmr 设置为 false 时，将不再提供热更新和 react-refresh 功能。\n\nexport default {\n  dev: {\n    hmr: false,\n  },\n};\n\n\n\n# dev.https\n\n * type: boolean | { key: string; cert: string }\n * default: false\n\n配置该选项后，可以开启 dev server 对 https 的支持，同时会禁用 http 服务器。\n\n开启前：\n\n  > local:    http://localhost:8080/\n  > network:  http://192.168.0.1:8080/\n\n\n开启后：\n\n  > local:    https://localhost:8080/\n  > network:  https://192.168.0.1:8080/\n\n\n# 自动生成证书\n\n你可以直接将 https 设置为 true，builder 会基于 devcert 来自动生成 dev server 所需的 https 证书。\n\nexport default {\n  dev: {\n    https: true,\n  },\n};\n\n\n该方式有一定局限性，由于 devcert 目前不支持 ip addresses，因此访问 network 域名时，会遇到「您的连接不是私密连接」的问题。\n\n此问题的解决方法为：点击 chrome 浏览器问题页面的「高级」->「继续前往 192.168.0.1（不安全）」。\n\ntip\n\nhttps 代理自动安装证书需要获取 root 权限, 请根据提示输入密码即可。 密码仅在信任证书时使用，不会泄漏或者用于其他环节。\n\n# 手动设置证书\n\n你也可以在 dev.https 选项中手动传入 https 服务器所需要的证书和对应的私钥，这个参数将直接传递给 node.js 中 https 模块的 createserver。\n\n具体可以参考 https.createserver。\n\nimport fs from 'fs';\n\nexport default {\n  dev: {\n    https: {\n      key: fs.readfilesync('certificates/private.pem'),\n      cert: fs.readfilesync('certificates/public.pem'),\n    },\n  },\n};\n\n\n\n# dev.port\n\n * type: number\n * default: 8080\n\n设置 dev server 监听的端口号。\n\n默认情况下，dev server 会监听 8080 端口，并在端口被占用时自动递增端口号。\n\n# 示例\n\n将端口设置为 3000：\n\nexport default {\n  dev: {\n    port: 3000,\n  },\n};\n\n\n\n# dev.progressbar\n\n * type: boolean\n * default: true\n\n是否启用编译过程中的进度条。\n\nexport default {\n  dev: {\n    progressbar: false,\n  },\n};\n\n\n\n# dev.starturl\n\n * type: boolean | string | string[] | undefined\n * default: undefined\n\ndev.starturl 用来设置启动时打开的页面，默认情况下不开启。你可以设置为如下的值：\n\nexport default {\n  dev: {\n    // 默认打开项目预览页面\n    starturl: true,\n    // 打开指定的页面\n    starturl: 'http://localhost:8080',\n    // 打开多个页面\n    starturl: ['http://localhost:8080', 'http://localhost:8080/about'],\n  },\n};\n",charsets:{cjk:!0}},{title:"Html Config",frontmatter:{extractApiHeaders:[2]},regularPath:"/zh/api/config-html.html",relativePath:"zh/api/config-html.md",key:"v-4311ae18",path:"/zh/api/config-html.html",headers:[{level:2,title:"html.appIcon",slug:"html-appicon",normalizedTitle:"html.appicon",charIndex:49},{level:4,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:194},{level:2,title:"html.crossorigin",slug:"html-crossorigin",normalizedTitle:"html.crossorigin",charIndex:365},{level:4,title:"示例",slug:"示例-2",normalizedTitle:"示例",charIndex:194},{level:2,title:"html.disableHtmlFolder",slug:"html-disablehtmlfolder",normalizedTitle:"html.disablehtmlfolder",charIndex:710},{level:4,title:"示例",slug:"示例-3",normalizedTitle:"示例",charIndex:194},{level:2,title:"html.favicon",slug:"html-favicon",normalizedTitle:"html.favicon",charIndex:1160},{level:4,title:"示例",slug:"示例-4",normalizedTitle:"示例",charIndex:194},{level:2,title:"html.faviconByEntries",slug:"html-faviconbyentries",normalizedTitle:"html.faviconbyentries",charIndex:1439},{level:4,title:"示例",slug:"示例-5",normalizedTitle:"示例",charIndex:194},{level:2,title:"html.inject",slug:"html-inject",normalizedTitle:"html.inject",charIndex:1911},{level:4,title:"默认插入位置",slug:"默认插入位置",normalizedTitle:"默认插入位置",charIndex:2208},{level:4,title:"插入至 body 标签",slug:"插入至-body-标签",normalizedTitle:"插入至 body 标签",charIndex:2515},{level:2,title:"html.injectByEntries",slug:"html-injectbyentries",normalizedTitle:"html.injectbyentries",charIndex:2923},{level:4,title:"示例",slug:"示例-6",normalizedTitle:"示例",charIndex:194},{level:2,title:"html.meta",slug:"html-meta",normalizedTitle:"html.meta",charIndex:3348},{level:4,title:"字符串用法",slug:"字符串用法",normalizedTitle:"字符串用法",charIndex:3483},{level:4,title:"对象用法",slug:"对象用法",normalizedTitle:"对象用法",charIndex:3770},{level:3,title:"移除默认值",slug:"移除默认值",normalizedTitle:"移除默认值",charIndex:4125},{level:2,title:"html.metaByEntries",slug:"html-metabyentries",normalizedTitle:"html.metabyentries",charIndex:4284},{level:4,title:"示例",slug:"示例-7",normalizedTitle:"示例",charIndex:194},{level:2,title:"html.mountId",slug:"html-mountid",normalizedTitle:"html.mountid",charIndex:4799},{level:4,title:"示例",slug:"示例-8",normalizedTitle:"示例",charIndex:194},{level:2,title:"html.template",slug:"html-template",normalizedTitle:"html.template",charIndex:5156},{level:4,title:"示例",slug:"示例-9",normalizedTitle:"示例",charIndex:194},{level:2,title:"html.templateByEntries",slug:"html-templatebyentries",normalizedTitle:"html.templatebyentries",charIndex:5373},{level:4,title:"示例",slug:"示例-10",normalizedTitle:"示例",charIndex:194},{level:2,title:"html.templateParameters",slug:"html-templateparameters",normalizedTitle:"html.templateparameters",charIndex:5776},{level:4,title:"示例",slug:"示例-11",normalizedTitle:"示例",charIndex:194},{level:2,title:"html.templateParametersByEntries",slug:"html-templateparametersbyentries",normalizedTitle:"html.templateparametersbyentries",charIndex:7237},{level:4,title:"示例",slug:"示例-12",normalizedTitle:"示例",charIndex:194},{level:2,title:"html.title",slug:"html-title",normalizedTitle:"html.title",charIndex:5926},{level:2,title:"html.titleByEntries",slug:"html-titlebyentries",normalizedTitle:"html.titlebyentries",charIndex:7799},{level:4,title:"示例",slug:"示例-13",normalizedTitle:"示例",charIndex:194}],lastUpdated:"2022/10/13 03:49:10",lastUpdatedTimestamp:166563295e4,headersStr:"html.appIcon 示例 html.crossorigin 示例 html.disableHtmlFolder 示例 html.favicon 示例 html.faviconByEntries 示例 html.inject 默认插入位置 插入至 body 标签 html.injectByEntries 示例 html.meta 字符串用法 对象用法 移除默认值 html.metaByEntries 示例 html.mountId 示例 html.template 示例 html.templateByEntries 示例 html.templateParameters 示例 html.templateParametersByEntries 示例 html.title html.titleByEntries 示例",content:"# Html Config\n\n本章节描述了 Builder 中与 HTML 有关的配置。\n\n\n# html.appIcon\n\n * Type: string\n * Default: undefined\n\n设置 app icon 的文件路径，可以为相对路径或绝对路径。\n\n配置该选项后，在编译过程中会自动将图标拷贝至 dist 目录下，并在 HTML 中添加相应的 link 标签。\n\n# 示例\n\nexport default {\n  html: {\n    appIcon: './src/assets/icon.png',\n  },\n};\n\n\n重新编译后，HTML 中自动生成了以下标签：\n\n<link rel=\"app-touch-icon\" sizes=\"180*180\" href=\"/icon.png\" />\n\n\n\n# html.crossorigin\n\n * Type: boolean | 'anonymous' | 'use-credentials'\n * Default: false\n\n用于设置 <script> 标签的 crossorigin 属性。\n\n传入 true 时，会自动设置为 crossorigin=\"anonymous\"。\n\n# 示例\n\nexport default {\n  html: {\n    crossorigin: 'anonymous',\n  },\n};\n\n\n编译后，HTML 中的 <script> 标签变为：\n\n<script defer src=\"/static/js/main.js\" crossorigin=\"anonymous\"><\/script>\n\n\n\n# html.disableHtmlFolder\n\n * Type: boolean\n * Default: false\n\n移除 HTML 产物对应的文件夹。开启该选项后，生成的 HTML 文件目录会从 [name]/index.html 变为 [name].html。\n\n# 示例\n\n默认情况下，HTML 产物在 dist 目录下的结构为：\n\n/dist\n└── html\n    └── main\n        └── index.html\n\n\n开启 html.disableHtmlFolder 配置:\n\nexport default {\n  html: {\n    disableHtmlFolder: true,\n  },\n};\n\n\n重新编译后，HTML 产物在 dist 中的目录结构如下：\n\n/dist\n└── html\n    └── main.html\n\n\n> 如果需要设置 HTML 文件在 dist 目录中的路径，请使用 output.distPath.html 配置。\n\n\n# html.favicon\n\n * Type: string\n * Default: undefined\n\n设置页面的 favicon 图标。\n\n配置该选项后，在编译过程中会自动将图标拷贝至 dist 目录下，并在 HTML 中添加相应的 link 标签。\n\n# 示例\n\nexport default {\n  html: {\n    favicon: './src/assets/icon.png',\n  },\n};\n\n\n重新编译后，HTML 中自动生成了以下标签：\n\n<link rel=\"icon\" href=\"/favicon.ico\" />\n\n\n\n# html.faviconByEntries\n\n * Type: Record<string, string>\n * Default: undefined\n\n用于在多页面的场景下，为不同的页面设置不同的 favicon。\n\n整体用法与 favicon 一致，并且可以使用「入口名称」作为 key ，对各个页面进行单独设置。\n\nfaviconByEntries 的优先级高于 favicon，因此会覆盖 favicon 中设置的值。\n\n# 示例\n\nexport default {\n  html: {\n    favicon: './src/assets/default.png',\n    faviconByEntries: {\n      foo: './src/assets/foo.png',\n    },\n  },\n};\n\n\n重新编译后，可以看到:\n\n * 页面 foo 的 favicon 为 ./src/assets/foo.png。\n * 其他页面的 favicon 为 ./src/assets/default.png。\n\n\n# html.inject\n\n * Type: 'head' | 'body'| 'true' | false\n * Default: 'head'\n\n修改构建产物中 <script> 标签在 HTML 中的插入位置。\n\n可以设置为以下值：\n\n * 'head': script 标签会插入在 HTML 的 head 标签内。\n * 'body': script 标签会插入在 HTML 的 body 标签尾部。\n * true: 最终表现取决于 html-webpack-plugin 的 scriptLoading 配置项。\n * false: script 标签不插入 HTML 中。\n\n# 默认插入位置\n\nscript 标签默认在 head 标签内：\n\n<html>\n  <head>\n    <title></title>\n    <script defer src=\"/static/js/runtime-main.js\"><\/script>\n    <script defer src=\"/static/js/main.js\"><\/script>\n    <link href=\"/static/css/main.css\" rel=\"stylesheet\" />\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html>\n\n\n# 插入至 body 标签\n\n添加如下配置，可以将 script 插入至 body 标签：\n\nexport default {\n  html: {\n    inject: 'body',\n  },\n};\n\n\n可以看到 script 标签生成在 body 标签尾部：\n\n<html>\n  <head>\n    <title></title>\n    <link href=\"/static/css/main.css\" rel=\"stylesheet\" />\n  </head>\n  <body>\n    <div id=\"root\"></div>\n    <script defer src=\"/static/js/runtime-main.js\"><\/script>\n    <script defer src=\"/static/js/main.js\"><\/script>\n  </body>\n</html>\n\n\n\n# html.injectByEntries\n\n * Type: Record<string, boolean | string>\n * Default: undefined\n\n用于在多页面的场景下，为不同的页面设置不同的 script 标签插入位置。\n\n整体用法与 inject 一致，并且可以使用「入口名称」作为 key ，对各个页面进行单独设置。\n\ninjectByEntries 的优先级高于 inject，因此会覆盖 inject 中设置的值。\n\n# 示例\n\nexport default {\n  html: {\n    inject: 'head',\n    injectByEntries: {\n      foo: 'body',\n    },\n  },\n};\n\n\n重新编译后，可以看到:\n\n * 页面 foo 的 script 标签会插入到 body 标签内。\n * 其他页面的 script 标签会插入到 head 标签内。\n\n\n# html.meta\n\n * Type: Record<string, false | string | Record<string, string | boolean>>\n * Default: undefined\n\n配置 HTML 页面的 <meta> 标签。\n\n# 字符串用法\n\n当 meta 对象的 value 为字符串时，会自动将对象的 key 映射为 name，value 映射为 content。\n\n比如设置 description：\n\nexport default {\n  html: {\n    meta: {\n      description: 'a description of the page',\n    },\n  },\n};\n\n\n最终在 HTML 中生成的 meta 标签为：\n\n<meta name=\"description\" content=\"a description of the page\" />\n\n\n# 对象用法\n\n当 meta 对象的 value 为对象时，会将该对象的 key: value 映射为 meta 标签的属性。\n\n这种情况下默认不会设置 name 和 content 属性。\n\n比如设置 http-equiv：\n\nexport default {\n  html: {\n    meta: {\n      'http-equiv': {\n        'http-equiv': 'x-ua-compatible',\n        content: 'ie=edge',\n      },\n    },\n  },\n};\n\n\n最终在 HTML 中生成的 meta 标签为：\n\n<meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\" />\n\n\n\n# 移除默认值\n\n将 meta 对象的 value 设置为 false，则表示不生成对应的 meta 标签。\n\n比如移除框架预设的 imagemode：\n\nexport default {\n  html: {\n    meta: {\n      imagemode: false,\n    },\n  },\n};\n\n\n\n# html.metaByEntries\n\n * Type: Record<string, Meta>\n * Default: undefined\n\n用于在多页面的场景下，为不同的页面设置不同的 meta 标签。\n\n整体用法与 meta 一致，并且可以使用「入口名称」作为 key ，对各个页面进行单独设置。\n\nmetaByEntries 的优先级高于 meta，因此会覆盖 meta 中设置的值。\n\n# 示例\n\nexport default {\n  html: {\n    meta: {\n      description: 'ByteDance',\n    },\n    metaByEntries: {\n      foo: {\n        description: 'Tiktok',\n      },\n    },\n  },\n};\n\n\n编译后，可以看到页面 foo 的 meta 为：\n\n<meta name=\"description\" content=\"Tiktok\" />\n\n\n其他页面的 meta 为：\n\n<meta name=\"description\" content=\"ByteDance\" />\n\n\n\n# html.mountId\n\n * Type: string\n * Default: 'root'\n\n默认情况下，HTML 模板中包含了 root 节点用于组件挂载，通过 mountId 可以修改该节点的 id。\n\n<body>\n  <div id=\"root\"></div>\n</body>\n\n\n# 示例\n\n修改 DOM 挂载节点 id 为 app：\n\nexport default {\n  html: {\n    mountId: 'app',\n  },\n};\n\n\n编译后：\n\n<body>\n  <div id=\"app\"></div>\n</body>\n\n\nTIP\n\n如果自定义了 HTML 模板，请确保模板中包含 <div id=\"<%= mountId %>\"></div>，否则该配置项无法生效。\n\n\n# html.template\n\n * Type: string\n * Default:\n\n定义 HTML 模板的文件路径，对应 html-webpack-plugin 的 template 配置项。\n\n# 示例\n\n使用自定义的 HTML 模板文件替代默认模板，可以添加如下设置：\n\nexport default {\n  html: {\n    template: './static/index.html',\n  },\n};\n\n\n\n# html.templateByEntries\n\n * Type: Object\n * Default: undefined\n\n用于在多页面的场景下，为不同的页面设置不同的 HTML 模板。\n\n整体用法与 template 一致，并且可以使用「入口名称」作为 key ，对各个页面进行单独设置。\n\ntemplateByEntries 的优先级高于 template，因此会覆盖 template 设置的值。\n\n# 示例\n\nexport default {\n  output: {\n    template: './static/index.html',\n    templateByEntries: {\n      foo: './src/pages/foo/index.html',\n      bar: './src/pages/bar/index.html',\n    },\n  },\n};\n\n\n\n# html.templateParameters\n\n * Type: Object | Function\n * Default:\n\ntype DefaultParameters = {\n  meta: string; // 对应 html.meta 配置\n  title: string; // 对应 html.title 配置\n  mountId: string; // 对应 html.mountId 配置\n  entryName: string; // 入口名称\n  assetPrefix: string; // 对应 output.assetPrefix 配置\n  compilation: webpack.Compilation; // 对应 webpack 的 compilation 对象\n  webpackConfig: Configuration; // webpack 配置\n  // htmlWebpackPlugin 内置的参数\n  // 详见 https://github.com/jantimon/html-webpack-plugin\n  htmlWebpackPlugin: {\n    tags: object;\n    files: object;\n    options: object;\n  };\n};\n\n\n定义 HTML 模板中的参数，对应 html-webpack-plugin 的 templateParameters 配置项。你可以使用配置为对象或者函数。\n\n如果是对象，会和默认参数合并。比如：\n\nexport default {\n  html: {\n    templateParameters: {\n      title: 'My App',\n    },\n  },\n};\n\n\n如果是函数，会传入默认参数，你可以返回一个对象，用于覆盖默认参数。比如：\n\nexport default {\n  html: {\n    templateParameters: defaultParameters => {\n      console.log(defaultParameters.compilation);\n      console.log(defaultParameters.title);\n      return {\n        title: 'My App',\n      };\n    },\n  },\n};\n\n\n# 示例\n\n如果需要在 HTML 模板中使用 foo 参数，可以添加如下设置：\n\nexport default {\n  html: {\n    templateParameters: {\n      foo: 'bar',\n    },\n  },\n};\n\n\n或者使用函数配置：\n\nexport default {\n  html: {\n    templateParameters: defaultParameters => {\n      return {\n        foo: 'bar',\n      };\n    },\n  },\n};\n\n\n接下来，你可以在 HTML 模板中，通过 <%= foo %> 来读取参数：\n\n<script>window.foo = '<%= foo %>'<\/script>\n\n\n经过编译后的最终 HTML 代码如下：\n\n<script>window.foo = 'bar'<\/script>\n\n\n\n# html.templateParametersByEntries\n\n * Type: Object\n * Default: undefined\n\n用于在多页面的场景下，为不同的页面设置不同的模板参数。\n\n整体用法与 templateParameters 一致，并且可以使用「入口名称」作为 key ，对各个页面进行单独设置。\n\ntemplateParametersByEntries 的优先级高于 templateParameters，因此会覆盖 templateParameters 中设置的值。\n\n# 示例\n\nexport default {\n  output: {\n    templateParametersByEntries: {\n      foo: {\n        type: 'a',\n      },\n      bar: {\n        type: 'b',\n      },\n    },\n  },\n};\n\n\n\n# html.title\n\n * Type: string\n * Default: undefined\n\n配置 HTML 页面的 title 标签，例如：\n\nexport default {\n  html: {\n    title: 'example',\n  },\n};\n\n\n\n# html.titleByEntries\n\n * Type: Record<string, string>\n * Default: undefined\n\n用于在多页面的场景下，为不同的页面设置不同的 title。\n\n整体用法与 title 一致，并且可以使用「入口名称」作为 key ，对各个页面进行单独设置。\n\ntitleByEntries 的优先级高于 title，因此会覆盖 title 中设置的值。\n\n# 示例\n\nexport default {\n  html: {\n    title: 'ByteDance',\n    titleByEntries: {\n      foo: 'Tiktok',\n    },\n  },\n};\n\n\n重新编译后，可以看到:\n\n * 页面 foo 的 title 为 Tiktok。\n * 其他页面的 title 为 ByteDance。",normalizedContent:"# html config\n\n本章节描述了 builder 中与 html 有关的配置。\n\n\n# html.appicon\n\n * type: string\n * default: undefined\n\n设置 app icon 的文件路径，可以为相对路径或绝对路径。\n\n配置该选项后，在编译过程中会自动将图标拷贝至 dist 目录下，并在 html 中添加相应的 link 标签。\n\n# 示例\n\nexport default {\n  html: {\n    appicon: './src/assets/icon.png',\n  },\n};\n\n\n重新编译后，html 中自动生成了以下标签：\n\n<link rel=\"app-touch-icon\" sizes=\"180*180\" href=\"/icon.png\" />\n\n\n\n# html.crossorigin\n\n * type: boolean | 'anonymous' | 'use-credentials'\n * default: false\n\n用于设置 <script> 标签的 crossorigin 属性。\n\n传入 true 时，会自动设置为 crossorigin=\"anonymous\"。\n\n# 示例\n\nexport default {\n  html: {\n    crossorigin: 'anonymous',\n  },\n};\n\n\n编译后，html 中的 <script> 标签变为：\n\n<script defer src=\"/static/js/main.js\" crossorigin=\"anonymous\"><\/script>\n\n\n\n# html.disablehtmlfolder\n\n * type: boolean\n * default: false\n\n移除 html 产物对应的文件夹。开启该选项后，生成的 html 文件目录会从 [name]/index.html 变为 [name].html。\n\n# 示例\n\n默认情况下，html 产物在 dist 目录下的结构为：\n\n/dist\n└── html\n    └── main\n        └── index.html\n\n\n开启 html.disablehtmlfolder 配置:\n\nexport default {\n  html: {\n    disablehtmlfolder: true,\n  },\n};\n\n\n重新编译后，html 产物在 dist 中的目录结构如下：\n\n/dist\n└── html\n    └── main.html\n\n\n> 如果需要设置 html 文件在 dist 目录中的路径，请使用 output.distpath.html 配置。\n\n\n# html.favicon\n\n * type: string\n * default: undefined\n\n设置页面的 favicon 图标。\n\n配置该选项后，在编译过程中会自动将图标拷贝至 dist 目录下，并在 html 中添加相应的 link 标签。\n\n# 示例\n\nexport default {\n  html: {\n    favicon: './src/assets/icon.png',\n  },\n};\n\n\n重新编译后，html 中自动生成了以下标签：\n\n<link rel=\"icon\" href=\"/favicon.ico\" />\n\n\n\n# html.faviconbyentries\n\n * type: record<string, string>\n * default: undefined\n\n用于在多页面的场景下，为不同的页面设置不同的 favicon。\n\n整体用法与 favicon 一致，并且可以使用「入口名称」作为 key ，对各个页面进行单独设置。\n\nfaviconbyentries 的优先级高于 favicon，因此会覆盖 favicon 中设置的值。\n\n# 示例\n\nexport default {\n  html: {\n    favicon: './src/assets/default.png',\n    faviconbyentries: {\n      foo: './src/assets/foo.png',\n    },\n  },\n};\n\n\n重新编译后，可以看到:\n\n * 页面 foo 的 favicon 为 ./src/assets/foo.png。\n * 其他页面的 favicon 为 ./src/assets/default.png。\n\n\n# html.inject\n\n * type: 'head' | 'body'| 'true' | false\n * default: 'head'\n\n修改构建产物中 <script> 标签在 html 中的插入位置。\n\n可以设置为以下值：\n\n * 'head': script 标签会插入在 html 的 head 标签内。\n * 'body': script 标签会插入在 html 的 body 标签尾部。\n * true: 最终表现取决于 html-webpack-plugin 的 scriptloading 配置项。\n * false: script 标签不插入 html 中。\n\n# 默认插入位置\n\nscript 标签默认在 head 标签内：\n\n<html>\n  <head>\n    <title></title>\n    <script defer src=\"/static/js/runtime-main.js\"><\/script>\n    <script defer src=\"/static/js/main.js\"><\/script>\n    <link href=\"/static/css/main.css\" rel=\"stylesheet\" />\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html>\n\n\n# 插入至 body 标签\n\n添加如下配置，可以将 script 插入至 body 标签：\n\nexport default {\n  html: {\n    inject: 'body',\n  },\n};\n\n\n可以看到 script 标签生成在 body 标签尾部：\n\n<html>\n  <head>\n    <title></title>\n    <link href=\"/static/css/main.css\" rel=\"stylesheet\" />\n  </head>\n  <body>\n    <div id=\"root\"></div>\n    <script defer src=\"/static/js/runtime-main.js\"><\/script>\n    <script defer src=\"/static/js/main.js\"><\/script>\n  </body>\n</html>\n\n\n\n# html.injectbyentries\n\n * type: record<string, boolean | string>\n * default: undefined\n\n用于在多页面的场景下，为不同的页面设置不同的 script 标签插入位置。\n\n整体用法与 inject 一致，并且可以使用「入口名称」作为 key ，对各个页面进行单独设置。\n\ninjectbyentries 的优先级高于 inject，因此会覆盖 inject 中设置的值。\n\n# 示例\n\nexport default {\n  html: {\n    inject: 'head',\n    injectbyentries: {\n      foo: 'body',\n    },\n  },\n};\n\n\n重新编译后，可以看到:\n\n * 页面 foo 的 script 标签会插入到 body 标签内。\n * 其他页面的 script 标签会插入到 head 标签内。\n\n\n# html.meta\n\n * type: record<string, false | string | record<string, string | boolean>>\n * default: undefined\n\n配置 html 页面的 <meta> 标签。\n\n# 字符串用法\n\n当 meta 对象的 value 为字符串时，会自动将对象的 key 映射为 name，value 映射为 content。\n\n比如设置 description：\n\nexport default {\n  html: {\n    meta: {\n      description: 'a description of the page',\n    },\n  },\n};\n\n\n最终在 html 中生成的 meta 标签为：\n\n<meta name=\"description\" content=\"a description of the page\" />\n\n\n# 对象用法\n\n当 meta 对象的 value 为对象时，会将该对象的 key: value 映射为 meta 标签的属性。\n\n这种情况下默认不会设置 name 和 content 属性。\n\n比如设置 http-equiv：\n\nexport default {\n  html: {\n    meta: {\n      'http-equiv': {\n        'http-equiv': 'x-ua-compatible',\n        content: 'ie=edge',\n      },\n    },\n  },\n};\n\n\n最终在 html 中生成的 meta 标签为：\n\n<meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\" />\n\n\n\n# 移除默认值\n\n将 meta 对象的 value 设置为 false，则表示不生成对应的 meta 标签。\n\n比如移除框架预设的 imagemode：\n\nexport default {\n  html: {\n    meta: {\n      imagemode: false,\n    },\n  },\n};\n\n\n\n# html.metabyentries\n\n * type: record<string, meta>\n * default: undefined\n\n用于在多页面的场景下，为不同的页面设置不同的 meta 标签。\n\n整体用法与 meta 一致，并且可以使用「入口名称」作为 key ，对各个页面进行单独设置。\n\nmetabyentries 的优先级高于 meta，因此会覆盖 meta 中设置的值。\n\n# 示例\n\nexport default {\n  html: {\n    meta: {\n      description: 'bytedance',\n    },\n    metabyentries: {\n      foo: {\n        description: 'tiktok',\n      },\n    },\n  },\n};\n\n\n编译后，可以看到页面 foo 的 meta 为：\n\n<meta name=\"description\" content=\"tiktok\" />\n\n\n其他页面的 meta 为：\n\n<meta name=\"description\" content=\"bytedance\" />\n\n\n\n# html.mountid\n\n * type: string\n * default: 'root'\n\n默认情况下，html 模板中包含了 root 节点用于组件挂载，通过 mountid 可以修改该节点的 id。\n\n<body>\n  <div id=\"root\"></div>\n</body>\n\n\n# 示例\n\n修改 dom 挂载节点 id 为 app：\n\nexport default {\n  html: {\n    mountid: 'app',\n  },\n};\n\n\n编译后：\n\n<body>\n  <div id=\"app\"></div>\n</body>\n\n\ntip\n\n如果自定义了 html 模板，请确保模板中包含 <div id=\"<%= mountid %>\"></div>，否则该配置项无法生效。\n\n\n# html.template\n\n * type: string\n * default:\n\n定义 html 模板的文件路径，对应 html-webpack-plugin 的 template 配置项。\n\n# 示例\n\n使用自定义的 html 模板文件替代默认模板，可以添加如下设置：\n\nexport default {\n  html: {\n    template: './static/index.html',\n  },\n};\n\n\n\n# html.templatebyentries\n\n * type: object\n * default: undefined\n\n用于在多页面的场景下，为不同的页面设置不同的 html 模板。\n\n整体用法与 template 一致，并且可以使用「入口名称」作为 key ，对各个页面进行单独设置。\n\ntemplatebyentries 的优先级高于 template，因此会覆盖 template 设置的值。\n\n# 示例\n\nexport default {\n  output: {\n    template: './static/index.html',\n    templatebyentries: {\n      foo: './src/pages/foo/index.html',\n      bar: './src/pages/bar/index.html',\n    },\n  },\n};\n\n\n\n# html.templateparameters\n\n * type: object | function\n * default:\n\ntype defaultparameters = {\n  meta: string; // 对应 html.meta 配置\n  title: string; // 对应 html.title 配置\n  mountid: string; // 对应 html.mountid 配置\n  entryname: string; // 入口名称\n  assetprefix: string; // 对应 output.assetprefix 配置\n  compilation: webpack.compilation; // 对应 webpack 的 compilation 对象\n  webpackconfig: configuration; // webpack 配置\n  // htmlwebpackplugin 内置的参数\n  // 详见 https://github.com/jantimon/html-webpack-plugin\n  htmlwebpackplugin: {\n    tags: object;\n    files: object;\n    options: object;\n  };\n};\n\n\n定义 html 模板中的参数，对应 html-webpack-plugin 的 templateparameters 配置项。你可以使用配置为对象或者函数。\n\n如果是对象，会和默认参数合并。比如：\n\nexport default {\n  html: {\n    templateparameters: {\n      title: 'my app',\n    },\n  },\n};\n\n\n如果是函数，会传入默认参数，你可以返回一个对象，用于覆盖默认参数。比如：\n\nexport default {\n  html: {\n    templateparameters: defaultparameters => {\n      console.log(defaultparameters.compilation);\n      console.log(defaultparameters.title);\n      return {\n        title: 'my app',\n      };\n    },\n  },\n};\n\n\n# 示例\n\n如果需要在 html 模板中使用 foo 参数，可以添加如下设置：\n\nexport default {\n  html: {\n    templateparameters: {\n      foo: 'bar',\n    },\n  },\n};\n\n\n或者使用函数配置：\n\nexport default {\n  html: {\n    templateparameters: defaultparameters => {\n      return {\n        foo: 'bar',\n      };\n    },\n  },\n};\n\n\n接下来，你可以在 html 模板中，通过 <%= foo %> 来读取参数：\n\n<script>window.foo = '<%= foo %>'<\/script>\n\n\n经过编译后的最终 html 代码如下：\n\n<script>window.foo = 'bar'<\/script>\n\n\n\n# html.templateparametersbyentries\n\n * type: object\n * default: undefined\n\n用于在多页面的场景下，为不同的页面设置不同的模板参数。\n\n整体用法与 templateparameters 一致，并且可以使用「入口名称」作为 key ，对各个页面进行单独设置。\n\ntemplateparametersbyentries 的优先级高于 templateparameters，因此会覆盖 templateparameters 中设置的值。\n\n# 示例\n\nexport default {\n  output: {\n    templateparametersbyentries: {\n      foo: {\n        type: 'a',\n      },\n      bar: {\n        type: 'b',\n      },\n    },\n  },\n};\n\n\n\n# html.title\n\n * type: string\n * default: undefined\n\n配置 html 页面的 title 标签，例如：\n\nexport default {\n  html: {\n    title: 'example',\n  },\n};\n\n\n\n# html.titlebyentries\n\n * type: record<string, string>\n * default: undefined\n\n用于在多页面的场景下，为不同的页面设置不同的 title。\n\n整体用法与 title 一致，并且可以使用「入口名称」作为 key ，对各个页面进行单独设置。\n\ntitlebyentries 的优先级高于 title，因此会覆盖 title 中设置的值。\n\n# 示例\n\nexport default {\n  html: {\n    title: 'bytedance',\n    titlebyentries: {\n      foo: 'tiktok',\n    },\n  },\n};\n\n\n重新编译后，可以看到:\n\n * 页面 foo 的 title 为 tiktok。\n * 其他页面的 title 为 bytedance。",charsets:{cjk:!0}},{title:"Output Config",frontmatter:{extractApiHeaders:[2]},regularPath:"/zh/api/config-output.html",relativePath:"zh/api/config-output.md",key:"v-7f5b896c",path:"/zh/api/config-output.html",headers:[{level:2,title:"output.assetPrefix",slug:"output-assetprefix",normalizedTitle:"output.assetprefix",charIndex:49},{level:4,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:303},{level:2,title:"output.assetsRetry",slug:"output-assetsretry",normalizedTitle:"output.assetsretry",charIndex:521},{level:3,title:"assetsRetry.max",slug:"assetsretry-max",normalizedTitle:"assetsretry.max",charIndex:1284},{level:3,title:"assetsRetry.domain",slug:"assetsretry-domain",normalizedTitle:"assetsretry.domain",charIndex:1431},{level:3,title:"assetsRetry.type",slug:"assetsretry-type",normalizedTitle:"assetsretry.type",charIndex:1660},{level:3,title:"assetsRetry.test",slug:"assetsretry-test",normalizedTitle:"assetsretry.test",charIndex:1849},{level:3,title:"assetsRetry.crossOrigin",slug:"assetsretry-crossorigin",normalizedTitle:"assetsretry.crossorigin",charIndex:2081},{level:3,title:"assetsRetry.onRetry",slug:"assetsretry-onretry",normalizedTitle:"assetsretry.onretry",charIndex:2314},{level:3,title:"assetsRetry.onSuccess",slug:"assetsretry-onsuccess",normalizedTitle:"assetsretry.onsuccess",charIndex:2665},{level:3,title:"assetsRetry.onFail",slug:"assetsretry-onfail",normalizedTitle:"assetsretry.onfail",charIndex:3022},{level:2,title:"output.charset",slug:"output-charset",normalizedTitle:"output.charset",charIndex:3379},{level:2,title:"output.cleanDistPath",slug:"output-cleandistpath",normalizedTitle:"output.cleandistpath",charIndex:3686},{level:2,title:"output.convertToRem",slug:"output-converttorem",normalizedTitle:"output.converttorem",charIndex:3908},{level:4,title:"Boolean 类型",slug:"boolean-类型",normalizedTitle:"boolean 类型",charIndex:4082},{level:4,title:"Object 类型",slug:"object-类型",normalizedTitle:"object 类型",charIndex:4517},{level:4,title:"示例",slug:"示例-2",normalizedTitle:"示例",charIndex:303},{level:2,title:"output.copy",slug:"output-copy",normalizedTitle:"output.copy",charIndex:5940},{level:2,title:"output.dataUriLimit",slug:"output-dataurilimit",normalizedTitle:"output.dataurilimit",charIndex:6217},{level:4,title:"示例",slug:"示例-3",normalizedTitle:"示例",charIndex:303},{level:2,title:"output.distPath",slug:"output-distpath",normalizedTitle:"output.distpath",charIndex:6837},{level:4,title:"示例",slug:"示例-4",normalizedTitle:"示例",charIndex:303},{level:2,title:"output.disableMinimize",slug:"output-disableminimize",normalizedTitle:"output.disableminimize",charIndex:7811},{level:2,title:"output.disableSourceMap",slug:"output-disablesourcemap",normalizedTitle:"output.disablesourcemap",charIndex:8034},{level:2,title:"output.disableFilenameHash",slug:"output-disablefilenamehash",normalizedTitle:"output.disablefilenamehash",charIndex:8279},{level:4,title:"示例",slug:"示例-5",normalizedTitle:"示例",charIndex:303},{level:2,title:"output.disableInlineRuntimeChunk",slug:"output-disableinlineruntimechunk",normalizedTitle:"output.disableinlineruntimechunk",charIndex:8939},{level:2,title:"output.enableAssetManifest",slug:"output-enableassetmanifest",normalizedTitle:"output.enableassetmanifest",charIndex:9161},{level:4,title:"示例",slug:"示例-6",normalizedTitle:"示例",charIndex:303},{level:2,title:"output.enableAssetFallback",slug:"output-enableassetfallback",normalizedTitle:"output.enableassetfallback",charIndex:9642},{level:4,title:"示例",slug:"示例-7",normalizedTitle:"示例",charIndex:303},{level:2,title:"output.enableLatestDecorators",slug:"output-enablelatestdecorators",normalizedTitle:"output.enablelatestdecorators",charIndex:9912},{level:2,title:"output.enableCssModuleTSDeclaration",slug:"output-enablecssmoduletsdeclaration",normalizedTitle:"output.enablecssmoduletsdeclaration",charIndex:10185},{level:4,title:"Example",slug:"example",normalizedTitle:"example",charIndex:10297},{level:2,title:"output.enableInlineScripts",slug:"output-enableinlinescripts",normalizedTitle:"output.enableinlinescripts",charIndex:10574},{level:4,title:"示例",slug:"示例-8",normalizedTitle:"示例",charIndex:303},{level:2,title:"output.enableInlineStyles",slug:"output-enableinlinestyles",normalizedTitle:"output.enableinlinestyles",charIndex:11203},{level:4,title:"示例",slug:"示例-9",normalizedTitle:"示例",charIndex:303},{level:2,title:"output.externals",slug:"output-externals",normalizedTitle:"output.externals",charIndex:11850},{level:4,title:"示例",slug:"示例-10",normalizedTitle:"示例",charIndex:303},{level:2,title:"output.filename",slug:"output-filename",normalizedTitle:"output.filename",charIndex:12199},{level:4,title:"示例",slug:"示例-11",normalizedTitle:"示例",charIndex:303},{level:2,title:"output.legalComments",slug:"output-legalcomments",normalizedTitle:"output.legalcomments",charIndex:13354},{level:4,title:"示例",slug:"示例-12",normalizedTitle:"示例",charIndex:303},{level:2,title:"output.overrideBrowserslist",slug:"output-overridebrowserslist",normalizedTitle:"output.overridebrowserslist",charIndex:13818},{level:4,title:"优先级",slug:"优先级",normalizedTitle:"优先级",charIndex:13987},{level:4,title:"默认值",slug:"默认值",normalizedTitle:"默认值",charIndex:1048},{level:4,title:"示例",slug:"示例-13",normalizedTitle:"示例",charIndex:303},{level:2,title:"output.polyfill",slug:"output-polyfill",normalizedTitle:"output.polyfill",charIndex:14564},{level:3,title:"配置项",slug:"配置项",normalizedTitle:"配置项",charIndex:186},{level:4,title:"entry",slug:"entry",normalizedTitle:"entry",charIndex:9558},{level:4,title:"usage",slug:"usage",normalizedTitle:"usage",charIndex:14601},{level:4,title:"ua",slug:"ua",normalizedTitle:"ua",charIndex:14611},{level:4,title:"off",slug:"off",normalizedTitle:"off",charIndex:14618},{level:2,title:"output.svgDefaultExport",slug:"output-svgdefaultexport",normalizedTitle:"output.svgdefaultexport",charIndex:15017}],lastUpdated:"2022/10/13 03:49:10",lastUpdatedTimestamp:166563295e4,headersStr:"output.assetPrefix 示例 output.assetsRetry assetsRetry.max assetsRetry.domain assetsRetry.type assetsRetry.test assetsRetry.crossOrigin assetsRetry.onRetry assetsRetry.onSuccess assetsRetry.onFail output.charset output.cleanDistPath output.convertToRem Boolean 类型 Object 类型 示例 output.copy output.dataUriLimit 示例 output.distPath 示例 output.disableMinimize output.disableSourceMap output.disableFilenameHash 示例 output.disableInlineRuntimeChunk output.enableAssetManifest 示例 output.enableAssetFallback 示例 output.enableLatestDecorators output.enableCssModuleTSDeclaration Example output.enableInlineScripts 示例 output.enableInlineStyles 示例 output.externals 示例 output.filename 示例 output.legalComments 示例 output.overrideBrowserslist 优先级 默认值 示例 output.polyfill 配置项 entry usage ua off output.svgDefaultExport",content:"# Output Config\n\n本章节描述了 Builder 中与编译产物有关的配置。\n\n\n# output.assetPrefix\n\n * Type: boolean | string\n * Default: '/'\n\n在生产环境使用 CDN 部署时，可使用该选项设置静态资源的 URL 前缀，对应 webpack 的 output.publicPath 配置。\n\n该配置项仅用于生产环境。在开发环境下，请使用 dev.assetPrefix 配置项进行设置。\n\n设置后，项目的 JavaScript、CSS、图片等静态资源的 URL 都会加上 output.assetPrefix 作为前缀：\n\n# 示例\n\nexport default {\n  output: {\n    assetPrefix: 'https://cdn.example.com/assets/',\n  },\n};\n\n\n构建之后，可以看到 JS 文件从以下地址加载：\n\n<script\n  defer\n  src=\"https://cdn.example.com/assets/static/js/main.ebc4ff4f.js\"\n><\/script>\n\n\n\n# output.assetsRetry\n\n * Type: Object\n\noutput.assetsRetry 用于配置资源加载失败时的重试逻辑。配置类型如下:\n\nexport type AssetsRetryHookContext = {\n  times: number;\n  domain: string;\n  url: string;\n  tagName: string;\n};\n\nexport type AssetsRetryOptions = {\n  type?: string[];\n  domain?: string[];\n  max?: number;\n  test?: string | ((url: string) => boolean);\n  crossOrigin?: boolean;\n  onRetry?: (options: AssetsRetryHookContext) => void;\n  onSuccess?: (options: AssetsRetryHookContext) => void;\n  onFail?: (options: AssetsRetryHookContext) => void;\n};\n\n\n默认值如下:\n\nexport const defaultAssetsRetryOptions: AssetsRetryOptions = {\n  type: ['script', 'link', 'img'],\n  domain: [],\n  max: 3,\n  test: '',\n  crossOrigin: false,\n  onRetry: () => {},\n  onSuccess: () => {},\n  onFail: () => {},\n};\n\n\n\n# assetsRetry.max\n\n * Type: number\n * Default: 3\n\n单个资源的最大重试次数。比如：\n\nexport default {\n  output: {\n    assetsRetry: {\n      max: 3,\n    },\n  },\n};\n\n\n\n# assetsRetry.domain\n\n * Type: string[]\n * Default: []\n\n指定资源加载失败时的重试域名，如果为空则使用当前页面的域名。比如：\n\nexport default {\n  output: {\n    assetsRetry: {\n      domain: ['https://cdn1.example.com', 'https://cdn2.example.com'],\n    },\n  },\n};\n\n\n\n# assetsRetry.type\n\n * Type: string[]\n * Default: ['script', 'link', 'img']\n\n可重试的资源类型。比如：\n\nexport default {\n  output: {\n    assetsRetry: {\n      type: ['script', 'link'],\n    },\n  },\n};\n\n\n\n# assetsRetry.test\n\n * Type: string | ((url: string) => boolean) | undefined\n * Default: undefined\n\n匹配资源 URL 的正则表达式或函数，默认匹配所有资源。比如：\n\nexport default {\n  output: {\n    assetsRetry: {\n      test: /cdn\\.example\\.com/,\n    },\n  },\n};\n\n\n\n# assetsRetry.crossOrigin\n\n * Type: undefined | boolean\n * Default: false\n\n用于向 <script> 资源标签中注入 crossorigin 属性，传入 true 则会启用默认值 anonymous。比如：\n\nexport default {\n  output: {\n    assetsRetry: {\n      crossOrigin: true,\n    },\n  },\n};\n\n\n\n# assetsRetry.onRetry\n\n * Type: undefined | (options: AssetsRetryHookContext) => void\n\n资源重试时的回调函数。比如：\n\nexport default {\n  output: {\n    assetsRetry: {\n      onRetry: ({ times, domain, url, tagName }) => {\n        console.log(\n          `Retry ${times} times, domain: ${domain}, url: ${url}, tagName: ${tagName}`,\n        );\n      },\n    },\n  },\n};\n\n\n\n# assetsRetry.onSuccess\n\n * Type: undefined | (options: AssetsRetryHookContext) => void\n\n资源重试成功时的回调函数。比如：\n\nexport default {\n  output: {\n    assetsRetry: {\n      onSuccess: ({ times, domain, url, tagName }) => {\n        console.log(\n          `Retry ${times} times, domain: ${domain}, url: ${url}, tagName: ${tagName}`,\n        );\n      },\n    },\n  },\n};\n\n\n\n# assetsRetry.onFail\n\n * Type: undefined | (options: AssetsRetryHookContext) => void\n\n资源重试超过最大重试次数时的回调函数。比如：\n\nexport default {\n  output: {\n    assetsRetry: {\n      onFail: ({ times, domain, url, tagName }) => {\n        console.log(\n          `Retry ${times} times, domain: ${domain}, url: ${url}, tagName: ${tagName}`,\n        );\n      },\n    },\n  },\n};\n\n\n\n# output.charset\n\n * Type: 'ascii' | 'utf8'\n * Default: 'ascii'\n\n默认情况下，Builder 的产物内容是纯 ASCII 的，并且会转义所有非 ASCII 字符。\n\n如果不希望进行转义，而是输出所有原始字符，可以将 output.charset 设置为 utf8。\n\nexport default {\n  output: {\n    charset: 'utf8',\n  },\n};\n\n\n当 output.charset 为 utf8 时，Builder 会自动将 <meta charset=\"utf-8\"> 添加到生成的 HTML 文件中。\n\n\n# output.cleanDistPath\n\n * Type: boolean\n * Default: true\n\n是否在构建开始前清理 dist 目录下的所有文件。\n\n默认情况下，Builder 会自动清理 dist 目录下的文件，你可以把 cleanDistPath 设置为 false 来禁用该行为。\n\nexport default {\n  output: {\n    cleanDistPath: false,\n  },\n};\n\n\n\n# output.convertToRem\n\n * Type: boolean | object\n * Default: false\n\n通过设置 output.convertToRem，Builder 可进行如下处理：\n\n * 将 CSS 中的 px 转成 rem\n * 在 HTML 模版中插入运行时代码，对根元素 fontSize 进行设置\n\n# Boolean 类型\n\n当设置 output.convertToRem 为 true，将开启 rem 处理能力。\n\nexport default {\n  output: {\n    convertToRem: true,\n  },\n};\n\n\n此时，rem 配置默认如下：\n\n{\n  enableRuntime: true,\n  rootFontSize: 50,\n  screenWidth: 375,\n  rootFontSize: 50,\n  maxRootFontSize: 64,\n  widthQueryKey: '',\n  excludeEntries: [],\n  supportLandscape: false,\n  useRootFontSizeBeyondMax: false,\n  pxtorem: {\n    rootValue: 50,\n    unitPrecision: 5,\n    propList: ['*'],\n  }\n}\n\n\n# Object 类型\n\n当 output.convertToRem 的值为 object 类型时，Builder 会根据当前配置进行 rem 处理。\n\n选项：\n\n名称                         类型         默认值                                描述\nenableRuntime              boolean    true                               开启 HTML 模版插入功能，注入运行时代码\nrootFontSize               number     50                                 根元素字体值\nmaxRootFontSize            number     64                                 最大根元素字体值\nwidthQueryKey              string     ''                                 根据 widthQueryKey 的值去 url query 中取 client width（默认从当前页面的\n                                                                         Document 中获取）\nscreenWidth                number     375                                屏幕宽度\nexcludeEntries             string[]   []                                 不进行调整的页面入口\nsupportLandscape           boolean    false                              横屏时使用 height 计算 rem\nuseRootFontSizeBeyondMax   boolean    false                              超过 maxRootFontSize 时，是否使用 rootFontSize\npxtorem                    object      * rootValue。默认与 rootFontSize 相同   postcss-pxtorem 插件属性\n                                       * unitPrecision: 5。精确位数\n                                       * propList: ['*']。支持转换的 CSS 属性\n\n# 示例\n\nexport default {\n  output: {\n    convertToRem: {\n      rootFontSize: 30,\n      excludeEntries: ['404', 'page2'],\n      pxtorem: {\n        propList: ['font-size'],\n      },\n    },\n  },\n};\n\n\n\n# output.copy\n\n * Type: CopyPluginOptions | CopyPluginOptions['patterns']\n * Default: undefined\n\n将指定的文件或目录拷贝到构建输出目录中。\n\n例如，将 src/assets 下的文件直接拷贝到 dist 目录：\n\nexport default {\n  output: {\n    copy: [{ from: './src/assets', to: '' }],\n  },\n};\n\n\n更详细的配置项请参考：copy-webpack-plugin 文档。\n\n\n# output.dataUriLimit\n\n * Type\n\ntype DataUriLimitConfig = {\n  svg?: number;\n  font?: number;\n  image?: number;\n  media?: number;\n};\n\n\n * Default\n\nconst defaultDatUriLimit = {\n  svg: 10000,\n  font: 10000,\n  image: 10000,\n  media: 10000,\n};\n\n\n设置图片、字体等静态资源被自动内联为 base64 的体积阈值。\n\n默认情况下，体积小于 10KB 的图片、字体等文件，会自动经过 Base64 编码，内联到页面中，不再会发送独立的 HTTP 请求。\n\n你可以通过修改 dataUriLimit 参数来调整这个阈值。\n\n其中：\n\n * svg：表示 SVG 图片的体积阈值。\n * font：表示字体文件的体积阈值。\n * image：表示非 SVG 图片的体积阈值。\n * media：表示视频等媒体资源的体积阈值。\n\n# 示例\n\n修改图片资源的阈值为 5000，设置视频资源不内联：\n\nexport default {\n  output: {\n    dataUriLimit: {\n      image: 5000,\n      media: Infinite,\n    },\n  },\n};\n\n\n\n# output.distPath\n\n * Type\n\ntype DistPathConfig = {\n  root?: string;\n  js?: string;\n  css?: string;\n  svg?: string;\n  font?: string;\n  html?: string;\n  image?: string;\n  media?: string;\n  server?: string;\n};\n\n\n * Default\n\nconst defaultDistPath = {\n  root: 'dist',\n  html: 'html',\n  js: 'static/js',\n  css: 'static/css',\n  svg: 'static/svg',\n  font: 'static/font',\n  image: 'static/image',\n  media: 'static/media',\n  server: 'bundles',\n};\n\n\n设置构建产物的输出目录，Builder 会根据产物的类型输出到对应的子目录下。\n\n其中：\n\n * root: 表示所有构建产物输出的根目录。\n * html：表示 HTML 文件的输出目录。\n * js：表示 JavaScript 文件的输出目录。\n * css：表示 CSS 样式文件的输出目录。\n * svg：表示 SVG 图片的输出目录。\n * font：表示字体文件的输出目录。\n * image：表示非 SVG 图片的输出目录。\n * media：表示视频等媒体资源的输出目录。\n * server: 表示服务端产物的输出目录，仅在 target 为 node 时有效。\n\n# 示例\n\n以 JavaScript 文件为例，会输出到 distPath.root + distPath.js 目录，即为 dist/static/js。\n\n如果需要将 JavaScript 文件输出到 build/resource/js 目录，可以这样设置：\n\nexport default {\n  output: {\n    distPath: {\n      root: 'build',\n      js: 'resource/js',\n    },\n  },\n};\n\n\n\n# output.disableMinimize\n\n * Type: boolean\n * Default: false\n\n是否禁用生产环境下的代码压缩。\n\n默认情况下，JS 代码和 CSS 代码会在生产环境构建时被自动压缩。如果不希望执行代码压缩，可以将 disableMinimize 设置为 true。\n\nexport default {\n  output: {\n    disableMinimize: true,\n  },\n};\n\n\n\n# output.disableSourceMap\n\n * Type: boolean\n * Default: false\n\n默认情况下，Builder 在生产环境构建时会生成 JS 和 CSS 资源的 SourceMap，用于调试和排查线上问题。\n\n如果项目在生产环境下不需要 SourceMap，可以关闭该功能，从而提升 build 构建的速度。\n\nexport default {\n  output: {\n    disableSourceMap: true,\n  },\n};\n\n\n\n# output.disableFilenameHash\n\n * Type: boolean\n * Default: false\n\n移除生产环境的构建产物名称中的 hash 值。\n\n在生产环境构建后，会自动在文件名中间添加 hash 值，如果不需要添加，可以通过 output.disableFilenameHash 配置来禁用该行为。\n\n# 示例\n\n默认情况下，构建后的产物名称为：\n\nFile                                     Size         Gzipped\ndist/static/css/187.7879e19d.css         126.99 KB    9.17 KB\ndist/static/js/main.18a568e5.js          2.24 KB      922 B\n\n\n添加 output.disableFilenameHash 配置：\n\nexport default {\n  output: {\n    disableFilenameHash: true,\n  },\n};\n\n\n重新构建，产物的名称变为：\n\nFile                            Size         Gzipped\ndist/static/css/187.css         126.99 KB    9.17 KB\ndist/static/js/main.js          2.24 KB      922 B\n\n\n\n# output.disableInlineRuntimeChunk\n\n * Type: boolean\n * Default: false\n\n默认情况下，runtimeChunk 文件将会被 inline 到 html 文件中，而不是写到产物目录中。\n\n这个选项用来关闭这个默认行为。\n\nexport default {\n  output: {\n    disableInlineRuntimeChunk: true,\n  },\n};\n\n\n\n# output.enableAssetManifest\n\n * Type: boolean\n * Default: false\n\n是否生成 manifest 文件，该文件包含所有构建产物的信息。\n\n# 示例\n\n添加以下配置来开启：\n\nexport default {\n  output: {\n    enableAssetManifest: true,\n  },\n};\n\n\n开启后，当编译完成时，会自动生成 dist/manifest.json 文件：\n\n{\n  \"files\": {\n    \"main.css\": \"/static/css/main.45b01211.css\",\n    \"main.js\": \"/static/js/main.52fd298f.js\",\n    \"html/main/index.html\": \"/html/main/index.html\"\n  },\n  \"entrypoints\": [\"static/css/main.45b01211.css\", \"static/js/main.52fd298f.js\"]\n}\n\n\n\n# output.enableAssetFallback\n\n * Type: boolean\n * Default: false\n\n开启该选项后，当编译过程中遇到无法识别的文件类型时，会直接将该文件直接输出到产物目录；否则会抛出一个异常。\n\n# 示例\n\nexport default {\n  output: {\n    enableAssetFallback: true,\n  },\n};\n\n\n注意：开启该配置会导致 webpack 配置中的 rules 结构变化，增加一层额外的 oneOf 嵌套结构。大多数情况下不推荐使用此配置。\n\n\n# output.enableLatestDecorators\n\n * Type: boolean\n * Default: false\n\n默认情况下，Builder 在编译装饰器时采用旧版 decorator 提案。\n\n将 output.enableLatestDecorators 设置为 true 时，Builder 会采用新版 decorator 提案(2018-09 版本) 进行编译。\n\nexport default {\n  output: {\n    enableLatestDecorators: true,\n  },\n};\n\n\n\n# output.enableCssModuleTSDeclaration\n\n * Type: boolean\n * Default: false\n\n是否生成 CSS Modules 的 TypeScript 声明文件。\n\n# Example\n\n启用 CSS Module TypeScript 声明，比如：\n\nexport default {\n  output: {\n    enableCssModuleTSDeclaration: true,\n  },\n};\n\n\n项目构建完成后，每个 CSS Module 文件都会生成一个 .d.ts 文件。例如：\n\ninterface CssExports {\n  title: string;\n}\nexport const cssExports: CssExports;\nexport default cssExports;\n\n\n\n# output.enableInlineScripts\n\n * Type: boolean\n * Default: false\n\n用来控制是否用 <script> 标签将产物中的 script 文件（.js 文件）inline 到 html 中。\n\n注意，如果开启了这个选项，那么 script 文件将不会被写入产物目录中，而只会以 inline 脚本的形式存在于 html 文件中。\n\n# 示例\n\n默认情况下，我们有这样的产物文件：\n\ndist/html/main/index.html\ndist/static/css/style.css\ndist/static/js/main.js\n\n\n开启 output.enableInlineScripts 选项后：\n\nexport default {\n  output: {\n    enableInlineScripts: true,\n  },\n};\n\n\n产物文件将变成：\n\ndist/html/main/index.html\ndist/static/css/style.css\n\n\n同时，dist/static/js/main.js 文件将被 inline 到 index.html 中：\n\n<html>\n  <body>\n    <script>\n      // content of dist/static/js/main.js\n    <\/script>\n  </body>\n</html>\n\n\n\n# output.enableInlineStyles\n\n * Type: boolean\n * Default: false\n\n用来控制是否用 <style> 标签将产物中的 style 文件（.css 文件）inline 到 html 中。\n\n注意，如果开启了这个选项，那么 style 文件将不会被写入产物目录中，而只会以 inline 样式的形式存在于 html 文件中。\n\n# 示例\n\n默认情况下，我们有这样的产物文件：\n\ndist/html/main/index.html\ndist/static/css/style.css\ndist/static/js/main.js\n\n\n开启 output.enableInlineStyles 选项后：\n\nexport default {\n  output: {\n    enableInlineStyles: true,\n  },\n};\n\n\n产物文件将变成：\n\ndist/html/main/index.html\ndist/static/js/main.js\n\n\n同时，dist/static/css/style.css 文件将被 inline 到 index.html 中：\n\n<html>\n  <head>\n    <style>\n      /* content of dist/static/css/style.css */\n    </style>\n  </head>\n  <body>\n  </body>\n</html>\n\n\n\n# output.externals\n\n * Type : string | object | function | RegExp\n\n * Default: undefined\n\n在构建时，防止将代码中某些 import 的依赖包打包到 bundle 中，而是在运行时再去从外部获取这些依赖。\n\n详情请见: webpack 外部扩展(Externals)\n\n# 示例\n\n将 react-dom 依赖从构建产物中剔除。为了在运行时获取这个模块, react-dom 的值将全局检索 ReactDOM 变量。\n\nexport default {\n  output: {\n    externals: {\n      'react-dom': 'ReactDOM',\n    },\n  },\n};\n\n\n\n# output.filename\n\n * Type\n\ntype FilenameConfig = {\n  js?: string;\n  css?: string;\n  svg?: string;\n  font?: string;\n  image?: string;\n  media?: string;\n};\n\n\n * Default\n\n// 开发环境\nconst devDefaultFilename = {\n  js: '[name].js',\n  css: '[name].css',\n  svg: '[name].[contenthash:8].svg',\n  font: '[name].[contenthash:8][ext]',\n  image: '[name].[contenthash:8][ext]',\n  media: '[name].[contenthash:8][ext]',\n};\n\n// 生产环境\nconst prodDefaultFilename = {\n  js: '[name].[contenthash:8].js',\n  css: '[name].[contenthash:8].css',\n  svg: '[name].[contenthash:8].svg',\n  font: '[name].[contenthash:8][ext]',\n  image: '[name].[contenthash:8][ext]',\n  media: '[name].[contenthash:8][ext]',\n};\n\n\n设置构建产物的名称。\n\n在生产环境构建后，会自动在文件名中间添加 hash 值，如果不需要添加，可以通过 output.disableFilenameHash 配置来禁用该行为。\n\n其中：\n\n * js：表示 JavaScript 文件的名称。\n * css：表示 CSS 样式文件的名称。\n * svg：表示 SVG 图片的名称。\n * font：表示字体文件的名称。\n * image：表示非 SVG 图片的名称。\n * media：表示视频等媒体资源的名称。\n\n# 示例\n\n修改 JavaScript 文件的名称为 [name]_script.js：\n\nexport default {\n  output: {\n    filename: {\n      js:\n        process.env.NODE_ENV === 'production'\n          ? '[name]_script.[contenthash:8].js'\n          : '[name]_script.js',\n    },\n  },\n};\n\n\n\n# output.legalComments\n\n * Type : 'linked' | 'inline' | 'none'\n * Default: 'linked'\n\n配置 legal comment 的处理方式。\n\nlegal comment 是 JS 或 CSS 文件中的一些特殊注释，这些注释包含 @license 或 @preserve，或是以 //! 开头。默认情况下，这些注释保留在输出文件中，因为这遵循了代码原作者的意图。\n\n你可以通过 legalComments 来配置相关行为：\n\n * linked：将所有 legal comments 移至 .LEGAL.txt 文件并通过注释链接到它们。\n * inline：保留所有 legal comments。\n * none：移除所有 legal comments。\n\n# 示例\n\n移除所有 legal comments。\n\nexport default {\n  output: {\n    legalComments: 'none',\n  },\n};\n\n\n\n# output.overrideBrowserslist\n\n * Type: string[]\n * Default: undefined\n\n指定项目兼容的目标浏览器范围。该值会被 @babel/preset-env 和 autoprefixer 用来确定需要转换的 JavaScript 语法特性和需要添加的 CSS 浏览器前缀。\n\n# 优先级\n\noverrideBrowserslist 配置的优先级高于项目中的 .browserslistrc 配置文件和 package.json 中的 browserslist 字段。\n\n大多数场景下，推荐优先使用 .browserslistrc 文件，而不是使用 overrideBrowserslist 配置。因为 .browserslistrc 文件是官方定义的配置文件，更加通用，可以被社区中的其他库识别。\n\n# 默认值\n\n如果项目中没有定义任何 browserslist 相关的配置，也没有定义 overrideBrowserslist，那么 Builder 会设置默认值为：\n\n['> 0.01%', 'not dead', 'not op_mini all'];\n\n\n# 示例\n\n下面是兼容移动端 H5 场景的示例：\n\nexport default {\n  output: {\n    overrideBrowserslist: [\n      'iOS 9',\n      'Android 4.4',\n      'last 2 versions',\n      '> 0.2%',\n      'not dead',\n    ],\n  },\n};\n\n\n可以查看 browserslist 文档 来了解如何自定义浏览器范围。\n\n\n# output.polyfill\n\n * Type: 'entry' | 'usage' | 'ua' | 'off'\n * Default: 'entry'\n\n通过 output.polyfill 你可以配置 Polyfill 的注入方式。\n\n\n# 配置项\n\n# entry\n\n当 output.polyfill 配置为 'entry' 时，会在每个入口文件中注入 Polyfill。\n\n等价于 @babel/preset-env 的 useBuiltIns: 'entry' 配置。\n\n# usage\n\n当 output.polyfill 配置为 'usage' 时，会在每个文件中根据代码中使用的 API 注入 Polyfill。\n\n等价于 @babel/preset-env 的 useBuiltIns: 'usage' 配置。\n\n# ua\n\n根据当前请求的 UA 信息，动态下发 Polyfill 代码。\n\n# off\n\n不注入 Polyfill。使用此选项时，需要自行保证代码的兼容性。\n\n\n# output.svgDefaultExport\n\n * Type: url | component\n * Default: url\n\noutput.svgDefaultExport 可以用来配置 Svg 文件的默认导出。\n\n当 output.svgDefaultExport 配置为 url 时，Svg 文件的默认导出是文件的 URL。例如：\n\nimport logo from './logo.svg';\n\nconsole.log(logo); // => 资源 url\n\n\n当 output.svgDefaultExport 配置为 component 时，Svg 文件的默认导出是文件的 React 组件。例如：\n\nimport Logo from './logo.svg';\n\nconsole.log(Logo); // => React 组件\n\n\n此时，你也可以通过指定 ?url 的 query 来导入 url，比如：\n\nimport logo from './logo.svg?url';\n\nconsole.log(logo); // => 资源 url\n",normalizedContent:"# output config\n\n本章节描述了 builder 中与编译产物有关的配置。\n\n\n# output.assetprefix\n\n * type: boolean | string\n * default: '/'\n\n在生产环境使用 cdn 部署时，可使用该选项设置静态资源的 url 前缀，对应 webpack 的 output.publicpath 配置。\n\n该配置项仅用于生产环境。在开发环境下，请使用 dev.assetprefix 配置项进行设置。\n\n设置后，项目的 javascript、css、图片等静态资源的 url 都会加上 output.assetprefix 作为前缀：\n\n# 示例\n\nexport default {\n  output: {\n    assetprefix: 'https://cdn.example.com/assets/',\n  },\n};\n\n\n构建之后，可以看到 js 文件从以下地址加载：\n\n<script\n  defer\n  src=\"https://cdn.example.com/assets/static/js/main.ebc4ff4f.js\"\n><\/script>\n\n\n\n# output.assetsretry\n\n * type: object\n\noutput.assetsretry 用于配置资源加载失败时的重试逻辑。配置类型如下:\n\nexport type assetsretryhookcontext = {\n  times: number;\n  domain: string;\n  url: string;\n  tagname: string;\n};\n\nexport type assetsretryoptions = {\n  type?: string[];\n  domain?: string[];\n  max?: number;\n  test?: string | ((url: string) => boolean);\n  crossorigin?: boolean;\n  onretry?: (options: assetsretryhookcontext) => void;\n  onsuccess?: (options: assetsretryhookcontext) => void;\n  onfail?: (options: assetsretryhookcontext) => void;\n};\n\n\n默认值如下:\n\nexport const defaultassetsretryoptions: assetsretryoptions = {\n  type: ['script', 'link', 'img'],\n  domain: [],\n  max: 3,\n  test: '',\n  crossorigin: false,\n  onretry: () => {},\n  onsuccess: () => {},\n  onfail: () => {},\n};\n\n\n\n# assetsretry.max\n\n * type: number\n * default: 3\n\n单个资源的最大重试次数。比如：\n\nexport default {\n  output: {\n    assetsretry: {\n      max: 3,\n    },\n  },\n};\n\n\n\n# assetsretry.domain\n\n * type: string[]\n * default: []\n\n指定资源加载失败时的重试域名，如果为空则使用当前页面的域名。比如：\n\nexport default {\n  output: {\n    assetsretry: {\n      domain: ['https://cdn1.example.com', 'https://cdn2.example.com'],\n    },\n  },\n};\n\n\n\n# assetsretry.type\n\n * type: string[]\n * default: ['script', 'link', 'img']\n\n可重试的资源类型。比如：\n\nexport default {\n  output: {\n    assetsretry: {\n      type: ['script', 'link'],\n    },\n  },\n};\n\n\n\n# assetsretry.test\n\n * type: string | ((url: string) => boolean) | undefined\n * default: undefined\n\n匹配资源 url 的正则表达式或函数，默认匹配所有资源。比如：\n\nexport default {\n  output: {\n    assetsretry: {\n      test: /cdn\\.example\\.com/,\n    },\n  },\n};\n\n\n\n# assetsretry.crossorigin\n\n * type: undefined | boolean\n * default: false\n\n用于向 <script> 资源标签中注入 crossorigin 属性，传入 true 则会启用默认值 anonymous。比如：\n\nexport default {\n  output: {\n    assetsretry: {\n      crossorigin: true,\n    },\n  },\n};\n\n\n\n# assetsretry.onretry\n\n * type: undefined | (options: assetsretryhookcontext) => void\n\n资源重试时的回调函数。比如：\n\nexport default {\n  output: {\n    assetsretry: {\n      onretry: ({ times, domain, url, tagname }) => {\n        console.log(\n          `retry ${times} times, domain: ${domain}, url: ${url}, tagname: ${tagname}`,\n        );\n      },\n    },\n  },\n};\n\n\n\n# assetsretry.onsuccess\n\n * type: undefined | (options: assetsretryhookcontext) => void\n\n资源重试成功时的回调函数。比如：\n\nexport default {\n  output: {\n    assetsretry: {\n      onsuccess: ({ times, domain, url, tagname }) => {\n        console.log(\n          `retry ${times} times, domain: ${domain}, url: ${url}, tagname: ${tagname}`,\n        );\n      },\n    },\n  },\n};\n\n\n\n# assetsretry.onfail\n\n * type: undefined | (options: assetsretryhookcontext) => void\n\n资源重试超过最大重试次数时的回调函数。比如：\n\nexport default {\n  output: {\n    assetsretry: {\n      onfail: ({ times, domain, url, tagname }) => {\n        console.log(\n          `retry ${times} times, domain: ${domain}, url: ${url}, tagname: ${tagname}`,\n        );\n      },\n    },\n  },\n};\n\n\n\n# output.charset\n\n * type: 'ascii' | 'utf8'\n * default: 'ascii'\n\n默认情况下，builder 的产物内容是纯 ascii 的，并且会转义所有非 ascii 字符。\n\n如果不希望进行转义，而是输出所有原始字符，可以将 output.charset 设置为 utf8。\n\nexport default {\n  output: {\n    charset: 'utf8',\n  },\n};\n\n\n当 output.charset 为 utf8 时，builder 会自动将 <meta charset=\"utf-8\"> 添加到生成的 html 文件中。\n\n\n# output.cleandistpath\n\n * type: boolean\n * default: true\n\n是否在构建开始前清理 dist 目录下的所有文件。\n\n默认情况下，builder 会自动清理 dist 目录下的文件，你可以把 cleandistpath 设置为 false 来禁用该行为。\n\nexport default {\n  output: {\n    cleandistpath: false,\n  },\n};\n\n\n\n# output.converttorem\n\n * type: boolean | object\n * default: false\n\n通过设置 output.converttorem，builder 可进行如下处理：\n\n * 将 css 中的 px 转成 rem\n * 在 html 模版中插入运行时代码，对根元素 fontsize 进行设置\n\n# boolean 类型\n\n当设置 output.converttorem 为 true，将开启 rem 处理能力。\n\nexport default {\n  output: {\n    converttorem: true,\n  },\n};\n\n\n此时，rem 配置默认如下：\n\n{\n  enableruntime: true,\n  rootfontsize: 50,\n  screenwidth: 375,\n  rootfontsize: 50,\n  maxrootfontsize: 64,\n  widthquerykey: '',\n  excludeentries: [],\n  supportlandscape: false,\n  userootfontsizebeyondmax: false,\n  pxtorem: {\n    rootvalue: 50,\n    unitprecision: 5,\n    proplist: ['*'],\n  }\n}\n\n\n# object 类型\n\n当 output.converttorem 的值为 object 类型时，builder 会根据当前配置进行 rem 处理。\n\n选项：\n\n名称                         类型         默认值                                描述\nenableruntime              boolean    true                               开启 html 模版插入功能，注入运行时代码\nrootfontsize               number     50                                 根元素字体值\nmaxrootfontsize            number     64                                 最大根元素字体值\nwidthquerykey              string     ''                                 根据 widthquerykey 的值去 url query 中取 client width（默认从当前页面的\n                                                                         document 中获取）\nscreenwidth                number     375                                屏幕宽度\nexcludeentries             string[]   []                                 不进行调整的页面入口\nsupportlandscape           boolean    false                              横屏时使用 height 计算 rem\nuserootfontsizebeyondmax   boolean    false                              超过 maxrootfontsize 时，是否使用 rootfontsize\npxtorem                    object      * rootvalue。默认与 rootfontsize 相同   postcss-pxtorem 插件属性\n                                       * unitprecision: 5。精确位数\n                                       * proplist: ['*']。支持转换的 css 属性\n\n# 示例\n\nexport default {\n  output: {\n    converttorem: {\n      rootfontsize: 30,\n      excludeentries: ['404', 'page2'],\n      pxtorem: {\n        proplist: ['font-size'],\n      },\n    },\n  },\n};\n\n\n\n# output.copy\n\n * type: copypluginoptions | copypluginoptions['patterns']\n * default: undefined\n\n将指定的文件或目录拷贝到构建输出目录中。\n\n例如，将 src/assets 下的文件直接拷贝到 dist 目录：\n\nexport default {\n  output: {\n    copy: [{ from: './src/assets', to: '' }],\n  },\n};\n\n\n更详细的配置项请参考：copy-webpack-plugin 文档。\n\n\n# output.dataurilimit\n\n * type\n\ntype dataurilimitconfig = {\n  svg?: number;\n  font?: number;\n  image?: number;\n  media?: number;\n};\n\n\n * default\n\nconst defaultdaturilimit = {\n  svg: 10000,\n  font: 10000,\n  image: 10000,\n  media: 10000,\n};\n\n\n设置图片、字体等静态资源被自动内联为 base64 的体积阈值。\n\n默认情况下，体积小于 10kb 的图片、字体等文件，会自动经过 base64 编码，内联到页面中，不再会发送独立的 http 请求。\n\n你可以通过修改 dataurilimit 参数来调整这个阈值。\n\n其中：\n\n * svg：表示 svg 图片的体积阈值。\n * font：表示字体文件的体积阈值。\n * image：表示非 svg 图片的体积阈值。\n * media：表示视频等媒体资源的体积阈值。\n\n# 示例\n\n修改图片资源的阈值为 5000，设置视频资源不内联：\n\nexport default {\n  output: {\n    dataurilimit: {\n      image: 5000,\n      media: infinite,\n    },\n  },\n};\n\n\n\n# output.distpath\n\n * type\n\ntype distpathconfig = {\n  root?: string;\n  js?: string;\n  css?: string;\n  svg?: string;\n  font?: string;\n  html?: string;\n  image?: string;\n  media?: string;\n  server?: string;\n};\n\n\n * default\n\nconst defaultdistpath = {\n  root: 'dist',\n  html: 'html',\n  js: 'static/js',\n  css: 'static/css',\n  svg: 'static/svg',\n  font: 'static/font',\n  image: 'static/image',\n  media: 'static/media',\n  server: 'bundles',\n};\n\n\n设置构建产物的输出目录，builder 会根据产物的类型输出到对应的子目录下。\n\n其中：\n\n * root: 表示所有构建产物输出的根目录。\n * html：表示 html 文件的输出目录。\n * js：表示 javascript 文件的输出目录。\n * css：表示 css 样式文件的输出目录。\n * svg：表示 svg 图片的输出目录。\n * font：表示字体文件的输出目录。\n * image：表示非 svg 图片的输出目录。\n * media：表示视频等媒体资源的输出目录。\n * server: 表示服务端产物的输出目录，仅在 target 为 node 时有效。\n\n# 示例\n\n以 javascript 文件为例，会输出到 distpath.root + distpath.js 目录，即为 dist/static/js。\n\n如果需要将 javascript 文件输出到 build/resource/js 目录，可以这样设置：\n\nexport default {\n  output: {\n    distpath: {\n      root: 'build',\n      js: 'resource/js',\n    },\n  },\n};\n\n\n\n# output.disableminimize\n\n * type: boolean\n * default: false\n\n是否禁用生产环境下的代码压缩。\n\n默认情况下，js 代码和 css 代码会在生产环境构建时被自动压缩。如果不希望执行代码压缩，可以将 disableminimize 设置为 true。\n\nexport default {\n  output: {\n    disableminimize: true,\n  },\n};\n\n\n\n# output.disablesourcemap\n\n * type: boolean\n * default: false\n\n默认情况下，builder 在生产环境构建时会生成 js 和 css 资源的 sourcemap，用于调试和排查线上问题。\n\n如果项目在生产环境下不需要 sourcemap，可以关闭该功能，从而提升 build 构建的速度。\n\nexport default {\n  output: {\n    disablesourcemap: true,\n  },\n};\n\n\n\n# output.disablefilenamehash\n\n * type: boolean\n * default: false\n\n移除生产环境的构建产物名称中的 hash 值。\n\n在生产环境构建后，会自动在文件名中间添加 hash 值，如果不需要添加，可以通过 output.disablefilenamehash 配置来禁用该行为。\n\n# 示例\n\n默认情况下，构建后的产物名称为：\n\nfile                                     size         gzipped\ndist/static/css/187.7879e19d.css         126.99 kb    9.17 kb\ndist/static/js/main.18a568e5.js          2.24 kb      922 b\n\n\n添加 output.disablefilenamehash 配置：\n\nexport default {\n  output: {\n    disablefilenamehash: true,\n  },\n};\n\n\n重新构建，产物的名称变为：\n\nfile                            size         gzipped\ndist/static/css/187.css         126.99 kb    9.17 kb\ndist/static/js/main.js          2.24 kb      922 b\n\n\n\n# output.disableinlineruntimechunk\n\n * type: boolean\n * default: false\n\n默认情况下，runtimechunk 文件将会被 inline 到 html 文件中，而不是写到产物目录中。\n\n这个选项用来关闭这个默认行为。\n\nexport default {\n  output: {\n    disableinlineruntimechunk: true,\n  },\n};\n\n\n\n# output.enableassetmanifest\n\n * type: boolean\n * default: false\n\n是否生成 manifest 文件，该文件包含所有构建产物的信息。\n\n# 示例\n\n添加以下配置来开启：\n\nexport default {\n  output: {\n    enableassetmanifest: true,\n  },\n};\n\n\n开启后，当编译完成时，会自动生成 dist/manifest.json 文件：\n\n{\n  \"files\": {\n    \"main.css\": \"/static/css/main.45b01211.css\",\n    \"main.js\": \"/static/js/main.52fd298f.js\",\n    \"html/main/index.html\": \"/html/main/index.html\"\n  },\n  \"entrypoints\": [\"static/css/main.45b01211.css\", \"static/js/main.52fd298f.js\"]\n}\n\n\n\n# output.enableassetfallback\n\n * type: boolean\n * default: false\n\n开启该选项后，当编译过程中遇到无法识别的文件类型时，会直接将该文件直接输出到产物目录；否则会抛出一个异常。\n\n# 示例\n\nexport default {\n  output: {\n    enableassetfallback: true,\n  },\n};\n\n\n注意：开启该配置会导致 webpack 配置中的 rules 结构变化，增加一层额外的 oneof 嵌套结构。大多数情况下不推荐使用此配置。\n\n\n# output.enablelatestdecorators\n\n * type: boolean\n * default: false\n\n默认情况下，builder 在编译装饰器时采用旧版 decorator 提案。\n\n将 output.enablelatestdecorators 设置为 true 时，builder 会采用新版 decorator 提案(2018-09 版本) 进行编译。\n\nexport default {\n  output: {\n    enablelatestdecorators: true,\n  },\n};\n\n\n\n# output.enablecssmoduletsdeclaration\n\n * type: boolean\n * default: false\n\n是否生成 css modules 的 typescript 声明文件。\n\n# example\n\n启用 css module typescript 声明，比如：\n\nexport default {\n  output: {\n    enablecssmoduletsdeclaration: true,\n  },\n};\n\n\n项目构建完成后，每个 css module 文件都会生成一个 .d.ts 文件。例如：\n\ninterface cssexports {\n  title: string;\n}\nexport const cssexports: cssexports;\nexport default cssexports;\n\n\n\n# output.enableinlinescripts\n\n * type: boolean\n * default: false\n\n用来控制是否用 <script> 标签将产物中的 script 文件（.js 文件）inline 到 html 中。\n\n注意，如果开启了这个选项，那么 script 文件将不会被写入产物目录中，而只会以 inline 脚本的形式存在于 html 文件中。\n\n# 示例\n\n默认情况下，我们有这样的产物文件：\n\ndist/html/main/index.html\ndist/static/css/style.css\ndist/static/js/main.js\n\n\n开启 output.enableinlinescripts 选项后：\n\nexport default {\n  output: {\n    enableinlinescripts: true,\n  },\n};\n\n\n产物文件将变成：\n\ndist/html/main/index.html\ndist/static/css/style.css\n\n\n同时，dist/static/js/main.js 文件将被 inline 到 index.html 中：\n\n<html>\n  <body>\n    <script>\n      // content of dist/static/js/main.js\n    <\/script>\n  </body>\n</html>\n\n\n\n# output.enableinlinestyles\n\n * type: boolean\n * default: false\n\n用来控制是否用 <style> 标签将产物中的 style 文件（.css 文件）inline 到 html 中。\n\n注意，如果开启了这个选项，那么 style 文件将不会被写入产物目录中，而只会以 inline 样式的形式存在于 html 文件中。\n\n# 示例\n\n默认情况下，我们有这样的产物文件：\n\ndist/html/main/index.html\ndist/static/css/style.css\ndist/static/js/main.js\n\n\n开启 output.enableinlinestyles 选项后：\n\nexport default {\n  output: {\n    enableinlinestyles: true,\n  },\n};\n\n\n产物文件将变成：\n\ndist/html/main/index.html\ndist/static/js/main.js\n\n\n同时，dist/static/css/style.css 文件将被 inline 到 index.html 中：\n\n<html>\n  <head>\n    <style>\n      /* content of dist/static/css/style.css */\n    </style>\n  </head>\n  <body>\n  </body>\n</html>\n\n\n\n# output.externals\n\n * type : string | object | function | regexp\n\n * default: undefined\n\n在构建时，防止将代码中某些 import 的依赖包打包到 bundle 中，而是在运行时再去从外部获取这些依赖。\n\n详情请见: webpack 外部扩展(externals)\n\n# 示例\n\n将 react-dom 依赖从构建产物中剔除。为了在运行时获取这个模块, react-dom 的值将全局检索 reactdom 变量。\n\nexport default {\n  output: {\n    externals: {\n      'react-dom': 'reactdom',\n    },\n  },\n};\n\n\n\n# output.filename\n\n * type\n\ntype filenameconfig = {\n  js?: string;\n  css?: string;\n  svg?: string;\n  font?: string;\n  image?: string;\n  media?: string;\n};\n\n\n * default\n\n// 开发环境\nconst devdefaultfilename = {\n  js: '[name].js',\n  css: '[name].css',\n  svg: '[name].[contenthash:8].svg',\n  font: '[name].[contenthash:8][ext]',\n  image: '[name].[contenthash:8][ext]',\n  media: '[name].[contenthash:8][ext]',\n};\n\n// 生产环境\nconst proddefaultfilename = {\n  js: '[name].[contenthash:8].js',\n  css: '[name].[contenthash:8].css',\n  svg: '[name].[contenthash:8].svg',\n  font: '[name].[contenthash:8][ext]',\n  image: '[name].[contenthash:8][ext]',\n  media: '[name].[contenthash:8][ext]',\n};\n\n\n设置构建产物的名称。\n\n在生产环境构建后，会自动在文件名中间添加 hash 值，如果不需要添加，可以通过 output.disablefilenamehash 配置来禁用该行为。\n\n其中：\n\n * js：表示 javascript 文件的名称。\n * css：表示 css 样式文件的名称。\n * svg：表示 svg 图片的名称。\n * font：表示字体文件的名称。\n * image：表示非 svg 图片的名称。\n * media：表示视频等媒体资源的名称。\n\n# 示例\n\n修改 javascript 文件的名称为 [name]_script.js：\n\nexport default {\n  output: {\n    filename: {\n      js:\n        process.env.node_env === 'production'\n          ? '[name]_script.[contenthash:8].js'\n          : '[name]_script.js',\n    },\n  },\n};\n\n\n\n# output.legalcomments\n\n * type : 'linked' | 'inline' | 'none'\n * default: 'linked'\n\n配置 legal comment 的处理方式。\n\nlegal comment 是 js 或 css 文件中的一些特殊注释，这些注释包含 @license 或 @preserve，或是以 //! 开头。默认情况下，这些注释保留在输出文件中，因为这遵循了代码原作者的意图。\n\n你可以通过 legalcomments 来配置相关行为：\n\n * linked：将所有 legal comments 移至 .legal.txt 文件并通过注释链接到它们。\n * inline：保留所有 legal comments。\n * none：移除所有 legal comments。\n\n# 示例\n\n移除所有 legal comments。\n\nexport default {\n  output: {\n    legalcomments: 'none',\n  },\n};\n\n\n\n# output.overridebrowserslist\n\n * type: string[]\n * default: undefined\n\n指定项目兼容的目标浏览器范围。该值会被 @babel/preset-env 和 autoprefixer 用来确定需要转换的 javascript 语法特性和需要添加的 css 浏览器前缀。\n\n# 优先级\n\noverridebrowserslist 配置的优先级高于项目中的 .browserslistrc 配置文件和 package.json 中的 browserslist 字段。\n\n大多数场景下，推荐优先使用 .browserslistrc 文件，而不是使用 overridebrowserslist 配置。因为 .browserslistrc 文件是官方定义的配置文件，更加通用，可以被社区中的其他库识别。\n\n# 默认值\n\n如果项目中没有定义任何 browserslist 相关的配置，也没有定义 overridebrowserslist，那么 builder 会设置默认值为：\n\n['> 0.01%', 'not dead', 'not op_mini all'];\n\n\n# 示例\n\n下面是兼容移动端 h5 场景的示例：\n\nexport default {\n  output: {\n    overridebrowserslist: [\n      'ios 9',\n      'android 4.4',\n      'last 2 versions',\n      '> 0.2%',\n      'not dead',\n    ],\n  },\n};\n\n\n可以查看 browserslist 文档 来了解如何自定义浏览器范围。\n\n\n# output.polyfill\n\n * type: 'entry' | 'usage' | 'ua' | 'off'\n * default: 'entry'\n\n通过 output.polyfill 你可以配置 polyfill 的注入方式。\n\n\n# 配置项\n\n# entry\n\n当 output.polyfill 配置为 'entry' 时，会在每个入口文件中注入 polyfill。\n\n等价于 @babel/preset-env 的 usebuiltins: 'entry' 配置。\n\n# usage\n\n当 output.polyfill 配置为 'usage' 时，会在每个文件中根据代码中使用的 api 注入 polyfill。\n\n等价于 @babel/preset-env 的 usebuiltins: 'usage' 配置。\n\n# ua\n\n根据当前请求的 ua 信息，动态下发 polyfill 代码。\n\n# off\n\n不注入 polyfill。使用此选项时，需要自行保证代码的兼容性。\n\n\n# output.svgdefaultexport\n\n * type: url | component\n * default: url\n\noutput.svgdefaultexport 可以用来配置 svg 文件的默认导出。\n\n当 output.svgdefaultexport 配置为 url 时，svg 文件的默认导出是文件的 url。例如：\n\nimport logo from './logo.svg';\n\nconsole.log(logo); // => 资源 url\n\n\n当 output.svgdefaultexport 配置为 component 时，svg 文件的默认导出是文件的 react 组件。例如：\n\nimport logo from './logo.svg';\n\nconsole.log(logo); // => react 组件\n\n\n此时，你也可以通过指定 ?url 的 query 来导入 url，比如：\n\nimport logo from './logo.svg?url';\n\nconsole.log(logo); // => 资源 url\n",charsets:{cjk:!0}},{title:"Performance Config",frontmatter:{extractApiHeaders:[2]},regularPath:"/zh/api/config-performance.html",relativePath:"zh/api/config-performance.md",key:"v-5908a168",path:"/zh/api/config-performance.html",headers:[{level:2,title:"performance.buildCache",slug:"performance-buildcache",normalizedTitle:"performance.buildcache",charIndex:54},{level:2,title:"performance.bundleAnalyze",slug:"performance-bundleanalyze",normalizedTitle:"performance.bundleanalyze",charIndex:708},{level:2,title:"performance.chunkSplit",slug:"performance-chunksplit",normalizedTitle:"performance.chunksplit",charIndex:1229},{level:3,title:"chunkSplit.strategy",slug:"chunksplit-strategy",normalizedTitle:"chunksplit.strategy",charIndex:1922},{level:3,title:"chunkSplit.minSize",slug:"chunksplit-minsize",normalizedTitle:"chunksplit.minsize",charIndex:2520},{level:3,title:"chunkSplit.maxSize",slug:"chunksplit-maxsize",normalizedTitle:"chunksplit.maxsize",charIndex:2831},{level:3,title:"chunkSplit.forceSplitting",slug:"chunksplit-forcesplitting",normalizedTitle:"chunksplit.forcesplitting",charIndex:3148},{level:3,title:"chunkSplit.splitChunks",slug:"chunksplit-splitchunks",normalizedTitle:"chunksplit.splitchunks",charIndex:3446},{level:3,title:"chunkSplit.override",slug:"chunksplit-override",normalizedTitle:"chunksplit.override",charIndex:3953},{level:2,title:"performance.profile",slug:"performance-profile",normalizedTitle:"performance.profile",charIndex:4518},{level:4,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:4618},{level:2,title:"performance.removeConsole",slug:"performance-removeconsole",normalizedTitle:"performance.removeconsole",charIndex:4741},{level:4,title:"移除所有 console",slug:"移除所有-console",normalizedTitle:"移除所有 console",charIndex:4855},{level:4,title:"移除特定的 console",slug:"移除特定的-console",normalizedTitle:"移除特定的 console",charIndex:4990},{level:2,title:"performance.removeMomentLocale",slug:"performance-removemomentlocale",normalizedTitle:"performance.removemomentlocale",charIndex:5246}],lastUpdated:"2022/10/13 03:49:10",lastUpdatedTimestamp:166563295e4,headersStr:"performance.buildCache performance.bundleAnalyze performance.chunkSplit chunkSplit.strategy chunkSplit.minSize chunkSplit.maxSize chunkSplit.forceSplitting chunkSplit.splitChunks chunkSplit.override performance.profile 示例 performance.removeConsole 移除所有 console 移除特定的 console performance.removeMomentLocale",content:"# Performance Config\n\n本章节描述了 Builder 中与产物性能有关的配置。\n\n\n# performance.buildCache\n\n * Type\n\ntype BuildCacheConfig =\n  | {\n      /**\n       * webpack 文件缓存系统的缓存目录\n       */\n      cacheDirectory?: string;\n    }\n  | boolean;\n\n\n * Default:\n\nconst defaultBuildCacheConfig = {\n  cacheDirectory: './node_modules/.cache/webapck',\n};\n\n\n缓存 webpack 打包过程中生成的 module 和 chunk, 以此来提升构建速度。\n\n默认情况，Builder 会开启缓存功能，将目录 ./node_modules/.cache/webpack 作为打包的缓存目录。\n\n你可以通过 buildCache 配置缓存路径，比如：\n\nexport default {\n  performance: {\n    buildCache: {\n      cacheDirectory: './node_modules/.custom_cache/webpack',\n    },\n  },\n};\n\n\n如果不希望缓存，你也可以将 buildCache 置为 false 将其禁用掉：\n\nexport default {\n  performance: {\n    buildCache: false,\n  },\n};\n\n\n\n# performance.bundleAnalyze\n\n * Type: Object | undefined\n\n你有两种方式开启 webpack-bundle-analyzer 来分析打包结果:\n\n * 添加环境变量BUNDLE_ANALYZE=true；\n * 配置 performance.bundleAnalyze。\n\n默认情况下，不会开启 webpack-bundle-analyzer，当开启之后它的配置如下:\n\n{\n  analyzerMode: 'static',\n  openAnalyzer: false,\n  // target 为编译目标，如 `web`、`node` 等\n  reportFilename: `report-${target}.html`,\n}\n\n\n你可以通过 performance.bundleAnalyze 来覆盖默认配置，比如：\n\nexport default {\n  performance: {\n    bundleAnalyze: {\n      analyzerMode: 'server',\n      openAnalyzer: true,\n    },\n  },\n};\n\n\n\n# performance.chunkSplit\n\n * Type: Object\n * Default: { strategy: 'split-by-experience' }\n\nperformance.chunkSplit 用于配置 Builder 的拆包策略。配置项的类型ChunkSplit如下:\n\ninterface BaseChunkSplit {\n  strategy?:\n    | 'split-by-module'\n    | 'split-by-experience'\n    | 'all-in-one'\n    | 'single-vendor';\n  override?: SplitChunks;\n  forceSplitting?: Array<RegExp>;\n}\n\ninterface SplitBySize {\n  strategy?: 'split-by-size';\n  minSize?: number;\n  maxSize?: number;\n  override?: SplitChunks;\n  forceSplitting?: Array<RegExp>;\n}\n\ninterface SplitCustom {\n  strategy?: 'custom';\n  splitChunks?: SplitChunks;\n  forceSplitting?: Array<RegExp>;\n}\n\nexport type ChunkSplit = BaseChunkSplit | SplitBySize | SplitCustom;\n\n\n\n# chunkSplit.strategy\n\nBuilder 支持六种类型的拆包策略:\n\n * split-by-experience: 根据经验内置拆分策略\n * split-by-module: 根据 NPM 包拆分，每个 NPM 包一个 chunk\n * split-by-size: 根据 chunk 大小拆分\n * all-in-one: 所有代码打包到一个 chunk\n * single-vendor: node_modules 中的代码打包到一个单独的 chunk\n * custom: 自定义拆包配置\n\nBuilder 默认采用 split-by-experience 策略，具体来说，以下的 NPM 包分组会被拆分为单独的 chunk:\n\n * react 和 react-dom\n * react-router、history 和 react-router-dom\n * antd 组件库\n * semi 组件库\n * arco 组件库\n * @babel/runtime 的代码(也包括 @babel/runtime-corejs2、 @babel/runtime-corejs3)\n * lodash 和 lodash-es\n * core-js\n\n如果你想使用其他拆包策略，可以通过 performance.chunkSplit.strategy 配置项来指定。\n\n\n# chunkSplit.minSize\n\n * Type: number\n * Default: 10000\n\n当 performance.chunkSplit.strategy 为 split-by-size 时，可以通过 performance.chunkSplit.minSize 配置项来指定 chunk 的最小大小，单位为字节。默认值为 10000。比如:\n\nexport default {\n  performance: {\n    chunkSplit: {\n      strategy: 'split-by-size',\n      minSize: 20000,\n    },\n  },\n};\n\n\n\n# chunkSplit.maxSize\n\n * Type: number\n * Default: Infinity\n\n当 performance.chunkSplit.strategy 为 split-by-size 时，可以通过 performance.chunkSplit.maxSize 配置项来指定 chunk 的最大大小，单位为字节。默认值为 Infinity。比如:\n\nexport default {\n  performance: {\n    chunkSplit: {\n      strategy: 'split-by-size',\n      maxSize: 50000,\n    },\n  },\n};\n\n\n\n# chunkSplit.forceSplitting\n\n * Type: Array<RegExp>\n * Default: []\n\n通过 performance.chunkSplit.forceSplitting 配置项可以指定强制拆包的 NPM 包。比如:\n\nexport default {\n  performance: {\n    chunkSplit: {\n      forceSplitting: [/^@arco-design\\/web-react/],\n    },\n  },\n};\n\n\n相比直接配置 webpack 的 splitChunks，这是一个更加简便的方式。\n\n\n# chunkSplit.splitChunks\n\n当 performance.chunkSplit.strategy 为 custom 时，可以通过 performance.chunkSplit.splitChunks 配置项来指定自定义的 webpack 拆包配置。此配置会和 webpack 的 splitChunks 配置进行合并（cacheGroups 配置也会合并）。比如:\n\nexport default {\n  performance: {\n    chunkSplit: {\n      strategy: 'custom',\n      splitChunks: {\n        cacheGroups: {\n          react: {\n            test: /[\\\\/]node_modules[\\\\/](react|react-dom)[\\\\/]/,\n            name: 'react',\n            chunks: 'all',\n          },\n        },\n      },\n    },\n  },\n};\n\n\n\n# chunkSplit.override\n\n当 performance.chunkSplit.strategy 为 split-by-experience、split-by-module、split-by-size 或 single-vendor 时，可以通过 performance.chunkSplit.override 配置项来自定义 webpack 拆包配置，此配置会和 webpack 的 splitChunks 配置进行合并（cacheGroups 配置也会合并）。比如:\n\nexport default {\n  performance: {\n    strategy: 'split-by-experience',\n    chunkSplit: {\n      override: {\n        cacheGroups: {\n          react: {\n            test: /[\\\\/]node_modules[\\\\/](react|react-dom)[\\\\/]/,\n            name: 'react',\n            chunks: 'all',\n          },\n        },\n      },\n    },\n  },\n};\n\n\n\n# performance.profile\n\n * Type: boolean\n\n * Default: false\n\n是否捕获每个模块的耗时信息，对应 webpack 的 profile 配置。\n\n# 示例\n\nexport default {\n  performance: {\n    profile: true,\n  },\n};\n\n\n开启后，Webpack 生成一些有关模块的统计数据的 JSON 文件会将模块构建的耗时信息也包含进去。\n\n\n# performance.removeConsole\n\n * Type: boolean | ConsoleType[]\n * Default: false\n\n在生产环境构建时，是否自动移除代码中的 console.xx。\n\n# 移除所有 console\n\n当 removeConsole 被设置为 true 时，会移除所有类型的 console.xx：\n\nexport default {\n  performance: {\n    removeConsole: true,\n  },\n};\n\n\n# 移除特定的 console\n\n你也可以指定仅移除特定类型的 console.xx，比如移除 console.log 和 console.warn：\n\nexport default {\n  performance: {\n    removeConsole: ['log', 'warn'],\n  },\n};\n\n\n目前支持配置以下类型的 console：\n\ntype ConsoleType = 'log' | 'info' | 'warn' | 'error' | 'table' | 'group';\n\n\n\n# performance.removeMomentLocale\n\n * Type: boolean\n * Default: false\n\nmoment.js 默认包含了大量的语言包文件，会导致打包后的包体积增大。\n\n当项目中使用了 moment.js 时，推荐开启此选项，自动排除所有的语言包文件：\n\nexport default {\n  performance: {\n    removeMomentLocale: true,\n  },\n};\n\n\n开启后，可以通过以下方式来加载语言包文件：\n\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\n\nmoment.locale('zh-cn');\n",normalizedContent:"# performance config\n\n本章节描述了 builder 中与产物性能有关的配置。\n\n\n# performance.buildcache\n\n * type\n\ntype buildcacheconfig =\n  | {\n      /**\n       * webpack 文件缓存系统的缓存目录\n       */\n      cachedirectory?: string;\n    }\n  | boolean;\n\n\n * default:\n\nconst defaultbuildcacheconfig = {\n  cachedirectory: './node_modules/.cache/webapck',\n};\n\n\n缓存 webpack 打包过程中生成的 module 和 chunk, 以此来提升构建速度。\n\n默认情况，builder 会开启缓存功能，将目录 ./node_modules/.cache/webpack 作为打包的缓存目录。\n\n你可以通过 buildcache 配置缓存路径，比如：\n\nexport default {\n  performance: {\n    buildcache: {\n      cachedirectory: './node_modules/.custom_cache/webpack',\n    },\n  },\n};\n\n\n如果不希望缓存，你也可以将 buildcache 置为 false 将其禁用掉：\n\nexport default {\n  performance: {\n    buildcache: false,\n  },\n};\n\n\n\n# performance.bundleanalyze\n\n * type: object | undefined\n\n你有两种方式开启 webpack-bundle-analyzer 来分析打包结果:\n\n * 添加环境变量bundle_analyze=true；\n * 配置 performance.bundleanalyze。\n\n默认情况下，不会开启 webpack-bundle-analyzer，当开启之后它的配置如下:\n\n{\n  analyzermode: 'static',\n  openanalyzer: false,\n  // target 为编译目标，如 `web`、`node` 等\n  reportfilename: `report-${target}.html`,\n}\n\n\n你可以通过 performance.bundleanalyze 来覆盖默认配置，比如：\n\nexport default {\n  performance: {\n    bundleanalyze: {\n      analyzermode: 'server',\n      openanalyzer: true,\n    },\n  },\n};\n\n\n\n# performance.chunksplit\n\n * type: object\n * default: { strategy: 'split-by-experience' }\n\nperformance.chunksplit 用于配置 builder 的拆包策略。配置项的类型chunksplit如下:\n\ninterface basechunksplit {\n  strategy?:\n    | 'split-by-module'\n    | 'split-by-experience'\n    | 'all-in-one'\n    | 'single-vendor';\n  override?: splitchunks;\n  forcesplitting?: array<regexp>;\n}\n\ninterface splitbysize {\n  strategy?: 'split-by-size';\n  minsize?: number;\n  maxsize?: number;\n  override?: splitchunks;\n  forcesplitting?: array<regexp>;\n}\n\ninterface splitcustom {\n  strategy?: 'custom';\n  splitchunks?: splitchunks;\n  forcesplitting?: array<regexp>;\n}\n\nexport type chunksplit = basechunksplit | splitbysize | splitcustom;\n\n\n\n# chunksplit.strategy\n\nbuilder 支持六种类型的拆包策略:\n\n * split-by-experience: 根据经验内置拆分策略\n * split-by-module: 根据 npm 包拆分，每个 npm 包一个 chunk\n * split-by-size: 根据 chunk 大小拆分\n * all-in-one: 所有代码打包到一个 chunk\n * single-vendor: node_modules 中的代码打包到一个单独的 chunk\n * custom: 自定义拆包配置\n\nbuilder 默认采用 split-by-experience 策略，具体来说，以下的 npm 包分组会被拆分为单独的 chunk:\n\n * react 和 react-dom\n * react-router、history 和 react-router-dom\n * antd 组件库\n * semi 组件库\n * arco 组件库\n * @babel/runtime 的代码(也包括 @babel/runtime-corejs2、 @babel/runtime-corejs3)\n * lodash 和 lodash-es\n * core-js\n\n如果你想使用其他拆包策略，可以通过 performance.chunksplit.strategy 配置项来指定。\n\n\n# chunksplit.minsize\n\n * type: number\n * default: 10000\n\n当 performance.chunksplit.strategy 为 split-by-size 时，可以通过 performance.chunksplit.minsize 配置项来指定 chunk 的最小大小，单位为字节。默认值为 10000。比如:\n\nexport default {\n  performance: {\n    chunksplit: {\n      strategy: 'split-by-size',\n      minsize: 20000,\n    },\n  },\n};\n\n\n\n# chunksplit.maxsize\n\n * type: number\n * default: infinity\n\n当 performance.chunksplit.strategy 为 split-by-size 时，可以通过 performance.chunksplit.maxsize 配置项来指定 chunk 的最大大小，单位为字节。默认值为 infinity。比如:\n\nexport default {\n  performance: {\n    chunksplit: {\n      strategy: 'split-by-size',\n      maxsize: 50000,\n    },\n  },\n};\n\n\n\n# chunksplit.forcesplitting\n\n * type: array<regexp>\n * default: []\n\n通过 performance.chunksplit.forcesplitting 配置项可以指定强制拆包的 npm 包。比如:\n\nexport default {\n  performance: {\n    chunksplit: {\n      forcesplitting: [/^@arco-design\\/web-react/],\n    },\n  },\n};\n\n\n相比直接配置 webpack 的 splitchunks，这是一个更加简便的方式。\n\n\n# chunksplit.splitchunks\n\n当 performance.chunksplit.strategy 为 custom 时，可以通过 performance.chunksplit.splitchunks 配置项来指定自定义的 webpack 拆包配置。此配置会和 webpack 的 splitchunks 配置进行合并（cachegroups 配置也会合并）。比如:\n\nexport default {\n  performance: {\n    chunksplit: {\n      strategy: 'custom',\n      splitchunks: {\n        cachegroups: {\n          react: {\n            test: /[\\\\/]node_modules[\\\\/](react|react-dom)[\\\\/]/,\n            name: 'react',\n            chunks: 'all',\n          },\n        },\n      },\n    },\n  },\n};\n\n\n\n# chunksplit.override\n\n当 performance.chunksplit.strategy 为 split-by-experience、split-by-module、split-by-size 或 single-vendor 时，可以通过 performance.chunksplit.override 配置项来自定义 webpack 拆包配置，此配置会和 webpack 的 splitchunks 配置进行合并（cachegroups 配置也会合并）。比如:\n\nexport default {\n  performance: {\n    strategy: 'split-by-experience',\n    chunksplit: {\n      override: {\n        cachegroups: {\n          react: {\n            test: /[\\\\/]node_modules[\\\\/](react|react-dom)[\\\\/]/,\n            name: 'react',\n            chunks: 'all',\n          },\n        },\n      },\n    },\n  },\n};\n\n\n\n# performance.profile\n\n * type: boolean\n\n * default: false\n\n是否捕获每个模块的耗时信息，对应 webpack 的 profile 配置。\n\n# 示例\n\nexport default {\n  performance: {\n    profile: true,\n  },\n};\n\n\n开启后，webpack 生成一些有关模块的统计数据的 json 文件会将模块构建的耗时信息也包含进去。\n\n\n# performance.removeconsole\n\n * type: boolean | consoletype[]\n * default: false\n\n在生产环境构建时，是否自动移除代码中的 console.xx。\n\n# 移除所有 console\n\n当 removeconsole 被设置为 true 时，会移除所有类型的 console.xx：\n\nexport default {\n  performance: {\n    removeconsole: true,\n  },\n};\n\n\n# 移除特定的 console\n\n你也可以指定仅移除特定类型的 console.xx，比如移除 console.log 和 console.warn：\n\nexport default {\n  performance: {\n    removeconsole: ['log', 'warn'],\n  },\n};\n\n\n目前支持配置以下类型的 console：\n\ntype consoletype = 'log' | 'info' | 'warn' | 'error' | 'table' | 'group';\n\n\n\n# performance.removemomentlocale\n\n * type: boolean\n * default: false\n\nmoment.js 默认包含了大量的语言包文件，会导致打包后的包体积增大。\n\n当项目中使用了 moment.js 时，推荐开启此选项，自动排除所有的语言包文件：\n\nexport default {\n  performance: {\n    removemomentlocale: true,\n  },\n};\n\n\n开启后，可以通过以下方式来加载语言包文件：\n\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\n\nmoment.locale('zh-cn');\n",charsets:{cjk:!0}},{title:"Security Config",frontmatter:{extractApiHeaders:[2]},regularPath:"/zh/api/config-security.html",relativePath:"zh/api/config-security.md",key:"v-2564926e",path:"/zh/api/config-security.html",headers:[{level:2,title:"security.sri",slug:"security-sri",normalizedTitle:"security.sri",charIndex:49},{level:4,title:"SRI 介绍",slug:"sri-介绍",normalizedTitle:"sri 介绍",charIndex:361},{level:4,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:598}],lastUpdated:"2022/10/13 03:49:10",lastUpdatedTimestamp:166563295e4,headersStr:"security.sri SRI 介绍 示例",content:'# Security Config\n\n本章节描述了 Builder 中与安全有关的配置。\n\n\n# security.sri\n\n * Type:\n\ntype SRIOptions = {\n  hashFuncNames?: []string;\n  enabled?: "auto" | true | false;\n  hashLoading?: "eager" | "lazy";\n} | boolean;\n\n\n * Default: undefined\n\n为 HTML 所引入的子资源添加完整性属性 —— integrity，使浏览器能够验证引入资源的完整性，以此防止下载的资源被篡改。\n\n启动该选项后会将 webpack 的 output.crossOriginLoading 配置项设置为 anonymous。\n\n# SRI 介绍\n\n子资源完整性 Subresource Integrity（SRI）是专门用来校验资源的一种方案，它读取资源标签中的 integrity 属性，将其中的信息摘要值，和资源实际的信息摘要值进行对比，如果发现无法匹配，那么浏览器就会拒绝执行资源。\n\n对于 script 标签来说，结果为拒绝执行其中的代码；对于 CSS link 来说，结果为不加载其中的样式。\n\n关于 SRI 的更多内容，可以查看 Subresource Integrity - MDN。\n\n# 示例\n\n默认情况下，不会开启 SRI，当开启之后它的默认配置如下：\n\n{\n  hashFuncNames: [\'sha384\'];\n  enabled: "auto",\n  hashLoading: "eager",\n}\n\n\n你可以按照你自己的需求自定义配置项:\n\nexport default {\n  security: {\n    sri: {\n      hashFuncNames: [\'sha-256\'],\n      enabled: true,\n      hashLoading: \'lazy\',\n    },\n  },\n};\n',normalizedContent:'# security config\n\n本章节描述了 builder 中与安全有关的配置。\n\n\n# security.sri\n\n * type:\n\ntype srioptions = {\n  hashfuncnames?: []string;\n  enabled?: "auto" | true | false;\n  hashloading?: "eager" | "lazy";\n} | boolean;\n\n\n * default: undefined\n\n为 html 所引入的子资源添加完整性属性 —— integrity，使浏览器能够验证引入资源的完整性，以此防止下载的资源被篡改。\n\n启动该选项后会将 webpack 的 output.crossoriginloading 配置项设置为 anonymous。\n\n# sri 介绍\n\n子资源完整性 subresource integrity（sri）是专门用来校验资源的一种方案，它读取资源标签中的 integrity 属性，将其中的信息摘要值，和资源实际的信息摘要值进行对比，如果发现无法匹配，那么浏览器就会拒绝执行资源。\n\n对于 script 标签来说，结果为拒绝执行其中的代码；对于 css link 来说，结果为不加载其中的样式。\n\n关于 sri 的更多内容，可以查看 subresource integrity - mdn。\n\n# 示例\n\n默认情况下，不会开启 sri，当开启之后它的默认配置如下：\n\n{\n  hashfuncnames: [\'sha384\'];\n  enabled: "auto",\n  hashloading: "eager",\n}\n\n\n你可以按照你自己的需求自定义配置项:\n\nexport default {\n  security: {\n    sri: {\n      hashfuncnames: [\'sha-256\'],\n      enabled: true,\n      hashloading: \'lazy\',\n    },\n  },\n};\n',charsets:{cjk:!0}},{title:"Source Config",frontmatter:{extractApiHeaders:[2]},regularPath:"/zh/api/config-source.html",relativePath:"zh/api/config-source.md",key:"v-3857cc90",path:"/zh/api/config-source.html",headers:[{level:2,title:"source.alias",slug:"source-alias",normalizedTitle:"source.alias",charIndex:48},{level:4,title:"Object 类型",slug:"object-类型",normalizedTitle:"object 类型",charIndex:296},{level:4,title:"Function 类型",slug:"function-类型",normalizedTitle:"function 类型",charIndex:527},{level:2,title:"source.include",slug:"source-include",normalizedTitle:"source.include",charIndex:863},{level:4,title:"场景示例",slug:"场景示例",normalizedTitle:"场景示例",charIndex:1138},{level:4,title:"Monorepo 项目",slug:"monorepo-项目",normalizedTitle:"monorepo 项目",charIndex:1693},{level:2,title:"source.compileJsDataURI",slug:"source-compilejsdatauri",normalizedTitle:"source.compilejsdatauri",charIndex:2105},{level:4,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:1140},{level:2,title:"source.define",slug:"source-define",normalizedTitle:"source.define",charIndex:2457},{level:4,title:"示例",slug:"示例-2",normalizedTitle:"示例",charIndex:1140},{level:2,title:"source.globalVars",slug:"source-globalvars",normalizedTitle:"source.globalvars",charIndex:3236},{level:4,title:"示例",slug:"示例-3",normalizedTitle:"示例",charIndex:1140},{level:2,title:"source.moduleScopes",slug:"source-modulescopes",normalizedTitle:"source.modulescopes",charIndex:4045},{level:4,title:"示例",slug:"示例-4",normalizedTitle:"示例",charIndex:1140},{level:4,title:"Array 类型",slug:"array-类型",normalizedTitle:"array 类型",charIndex:4506},{level:4,title:"Function 类型",slug:"function-类型-2",normalizedTitle:"function 类型",charIndex:527},{level:2,title:"source.preEntry",slug:"source-preentry",normalizedTitle:"source.preentry",charIndex:4825},{level:4,title:"添加单个脚本",slug:"添加单个脚本",normalizedTitle:"添加单个脚本",charIndex:4967},{level:4,title:"添加多个脚本",slug:"添加多个脚本",normalizedTitle:"添加多个脚本",charIndex:5224},{level:2,title:"source.resolveExtensionPrefix",slug:"source-resolveextensionprefix",normalizedTitle:"source.resolveextensionprefix",charIndex:5364},{level:4,title:"示例",slug:"示例-5",normalizedTitle:"示例",charIndex:1140},{level:2,title:"source.resolveMainFields",slug:"source-resolvemainfields",normalizedTitle:"source.resolvemainfields",charIndex:5862},{level:4,title:"示例",slug:"示例-6",normalizedTitle:"示例",charIndex:1140}],lastUpdated:"2022/10/13 03:49:10",lastUpdatedTimestamp:166563295e4,headersStr:"source.alias Object 类型 Function 类型 source.include 场景示例 Monorepo 项目 source.compileJsDataURI 示例 source.define 示例 source.globalVars 示例 source.moduleScopes 示例 Array 类型 Function 类型 source.preEntry 添加单个脚本 添加多个脚本 source.resolveExtensionPrefix 示例 source.resolveMainFields 示例",content:"# Source Config\n\n本章节描述了 Builder 中与源代码有关的配置。\n\n\n# source.alias\n\n * Type: Record<string, string> | Function\n * Default: undefined\n\n设置文件引用的别名，对应 webpack 的 resolve.alias 配置。\n\nTIP\n\n对于 TypeScript 项目，只需要在 tsconfig.json 中配置 compilerOptions.paths 即可，Builder 会自动识别 tsconfig.json 里的别名，因此不需要额外配置 alias 字段。\n\n# Object 类型\n\nalias 的值可以定义为 Object 类型，其中的相对路径会自动被 Builder 转换为绝对路径。\n\nexport default {\n  source: {\n    alias: {\n      '@common': './src/common',\n    },\n  },\n};\n\n\n以上配置完成后，如果在代码中引用 @common/Foo.tsx, 则会映射到 <root>/src/common/Foo.tsx 路径上。\n\n# Function 类型\n\nalias 的值定义为函数时，可以接受预设的 alias 对象，并对其进行修改。\n\nexport default {\n  source: {\n    alias: alias => {\n      alias['@common'] = './src/common';\n    },\n  },\n};\n\n\n也可以在函数中返回一个新对象作为最终结果，新对象会覆盖预设的 alias 对象。\n\nexport default {\n  source: {\n    alias: alias => {\n      return {\n        '@common': './src/common',\n      };\n    },\n  },\n};\n\n\n\n# source.include\n\n * Type: Array<string | RegExp>\n * Default: []\n\n出于编译性能的考虑，默认情况下，Builder 不会通过 babel-loader 或 ts-loader 来编译 node_modules 下的文件，也不会编译当前工程目录外部的文件。\n\n通过 source.include 配置项，可以指定需要额外进行编译的目录或模块。比如:\n\nexport default {\n  source: {\n    include: ['foo', /bar/],\n  },\n};\n\n\n# 场景示例\n\n比较典型的使用场景是编译 node_modules 下的文件，因为某些第三方依赖存在 ES6+ 的语法，这可能导致在低版本浏览器上无法运行，你可以通过该选项指定需要编译的依赖，从而解决此类问题。以 query-string 为例，你可以做如下的配置：\n\nexport default {\n  source: {\n    include: [\n      // 方法一:\n      // 先通过 require.resolve 来获取模块的路径\n      // 再通过 path.dirname 来指向对应的目录\n      path.dirname(require.resolve('query-string')),\n      // 方法二:\n      // 通过正则表达式进行匹配\n      // 所有包含 `/query-string/` 的路径都会被匹配到\n      /\\/query-string\\//,\n    ],\n  },\n};\n\n\n> 注意，该配置只会编译 query-string 自身的代码，不会编译 query-string 的子依赖。如果需要编译 query-string 的子依赖，则需要将对应的 npm 包也加入到 source.include 中。\n\n# Monorepo 项目\n\n使用 Monorepo 时，如果需要引用 Monorepo 中其他库的源代码，也可以直接在 source.include 进行配置:\n\nexport default {\n  source: {\n    source: {\n    include: [\n      // 方法一:\n      // 编译 Monorepo 的 package 目录下的所有文件\n      path.resolve(__dirname, '../../packages'),\n\n      // 方法二:\n      // 编译 Monorepo 的 package 目录里某个包的源代码\n      // 这种写法匹配的范围更加精准，对整体编译性能的影响更小\n      path.resolve(__dirname, '../../packages/xxx/src'),\n    ],\n  },\n};\n\n\n\n# source.compileJsDataURI\n\n * Type: boolean\n * Default: false\n\n对于使用 Data URI 引入的 JavaScript 代码，是否采用 babel 进行编译。\n\n比如以下代码：\n\nimport x from 'data:text/javascript,export default 1;';\n\nimport 'data:text/javascript;charset=utf-8;base64,Y29uc29sZS5sb2coJ2lubGluZSAxJyk7';\n\n\n# 示例\n\n添加以下配置来开启：\n\nexport default {\n  source: {\n    compileJsDataURI: true,\n  },\n};\n\n\n\n# source.define\n\n * Type: Record<string, unknown>\n * Default: {}\n\n构建时将代码中的变量替换成其它值或者表达式，可以用于在代码逻辑中区分开发环境与生产环境等场景。\n\n传入的配置对象的键名是需要替换变量的名称，或者是用 . 连接的多个标识符，配置项的值则根据类型进行不同的处理：\n\n * 字符串会被当作代码片段。\n * 包括函数在内的其他类型会被转换成字符串。\n * 嵌套对象的父子键名之间会用 . 连接作为需要替换的变量名。\n * 以 typeof 开头的键名会用来替换 typeof 调用。\n\n更多细节参考 https://webpack.js.org/plugins/define-plugin/。\n\n# 示例\n\nexport default {\n  source: {\n    define: {\n      PRODUCTION: JSON.stringify(true),\n      VERSION: JSON.stringify('5fa3b9'),\n      BROWSER_SUPPORTS_HTML5: true,\n      TWO: '1 + 1',\n      'typeof window': JSON.stringify('object'),\n      'process.env.NODE_ENV': JSON.stringify(process.env.NODE_ENV),\n      'import.meta': { test: undefined },\n    },\n  },\n};\n\n\n表达式会被替换为对应的代码段：\n\nconst foo = TWO;\n\n// ⬇️ Turn into being...\nconst foo = 1 + 1;\n\n\n\n# source.globalVars\n\n * 类型: Record<string, JSONValue>\n * 默认值: {}\n\n构建时将类似 process.env.FOO 的全局变量表达式替换为用户定义的值：\n\nconsole.log(process.env.NODE_ENV);\n\n// ⬇️ Turn into being...\nconsole.log('development');\n\n\n选项上每项的值都需要是可以序列化成 JSON 的类型，键名会自动加上 process.env 前缀来替换全局变量。\n\n插件会自动添加环境变量 NODE_ENV 到配置。\n\n使用解构赋值时，构建器无法判断变量 NODE_ENV 是否与要替换的表达式 process.env.NODE_ENV 存在关联，所以这样的使用方式是无效的：\n\nconst { NODE_ENV } = process.env;\nconsole.log(NODE_ENV);\n// ❌ Won't get a string.\n\n\nglobalVars 可以当作是 define 的语法糖，专门用于简化配置全局变量的流程：\n\nexport default {\n  source: {\n    globalVars: {\n      NODE_ENV: 'development',\n    },\n    define: {\n      'process.env.NODE_ENV': JSON.stringify('development'),\n    },\n  },\n};\n\n\n# 示例\n\nexport default {\n  source: {\n    globalVars: {\n      ENABLE_VCONSOLE: true,\n      APP_CONTEXT: { answer: 42 },\n    },\n  },\n};\n\n\n\n# source.moduleScopes\n\n * Type: Array<string | Regexp> | Function\n * Default: undefined\n\n限制源代码的引用路径。配置该选项后，所有源文件只能从约定的目录下引用代码，从其他目录引用代码会产生对应的报错提示。\n\n# 示例\n\n首先我们配置 moduleScopes 仅包含 src 目录：\n\nexport default {\n  source: {\n    moduleScopes: ['./src'],\n  },\n};\n\n\n然后在 src/App.tsx 中导入 src 目录外部的 utils/a 模块:\n\nimport a from '../utils/a';\n\n\n在编译时，会提示引用路径错误:\n\n\n\n通过该选项配置 utils 目录，再进行编译，则不会出现错误提示。\n\nexport default {\n  source: {\n    moduleScopes: ['./src', './utils'],\n  },\n};\n\n\n# Array 类型\n\n当 moduleScopes 的值为 Array 类型时，可以直接设置若干个代码路径，比如添加以下配置：\n\nexport default {\n  source: {\n    moduleScopes: ['./src', './shared', './utils'],\n  },\n};\n\n\n# Function 类型\n\nmoduleScopes 也支持通过函数的形式来进行修改，避免覆盖默认值：\n\nexport default {\n  source: {\n    moduleScopes: scopes => {\n      scopes.push('./shared');\n    },\n  },\n};\n\n\n\n# source.preEntry\n\n * Type: string | string[]\n * Default: undefined\n\n在每个页面的入口文件前添加一段脚本，这段脚本会早于页面的代码执行，在这个脚本中可以进行执行一些全局的代码配置，比如注入 polyfill 等。\n\n# 添加单个脚本\n\n首先创建一个 src/polyfill.ts 文件：\n\nconsole.log('I am a polyfill');\n\n\n然后将 src/polyfill.ts 配置到 source.preEntry 上：\n\nexport default {\n  source: {\n    preEntry: './src/polyfill.ts',\n  },\n};\n\n\n重新运行编译并访问任意页面，可以看到 src/polyfill.ts 中的代码已经执行，并在 console 中输出了对应的内容。\n\n# 添加多个脚本\n\n可以将 preEntry 设置为数组来添加多个脚本：\n\nexport default {\n  source: {\n    preEntry: ['./src/polyfill-a.ts', './src/polyfill-b.ts'],\n  },\n};\n\n\n\n# source.resolveExtensionPrefix\n\n * Type: string\n * Default: undefined\n\n用于为 resolve 的 extensions 添加统一的前缀。\n\n如果多个文件拥有相同的名称，但具有不同的文件后缀，Builder 会根据 extensions 数组的顺序进行识别，解析数组中第一个被识别的文件，并跳过其余文件。\n\n# 示例\n\n下面是配置 .web 前缀的例子。\n\nexport default {\n  source: {\n    resolveExtensionPrefix: '.web',\n  },\n};\n\n\n配置完成后，extensions 数组会发生以下变化：\n\n// 配置前\nconst extensions = ['.js', '.ts', ...];\n\n// 配置后\nconst extensions = ['.web.js', '.js', '.web.ts' , '.ts', ...];\n\n\n在代码中 import './foo' 时，会优先识别 foo.web.js 文件，再识别 foo.js 文件。\n\n\n# source.resolveMainFields\n\n * Type: (string | string[])[]\n\n * Default: undefined\n\n该配置项将决定你使用 package.json 哪个字段导入 npm 模块。对应 webpack 的 resolve.mainFields 配置。\n\n# 示例\n\nexport default {\n  source: {\n    resolveMainFields: ['main', 'browser', 'exports'],\n  },\n};\n",normalizedContent:"# source config\n\n本章节描述了 builder 中与源代码有关的配置。\n\n\n# source.alias\n\n * type: record<string, string> | function\n * default: undefined\n\n设置文件引用的别名，对应 webpack 的 resolve.alias 配置。\n\ntip\n\n对于 typescript 项目，只需要在 tsconfig.json 中配置 compileroptions.paths 即可，builder 会自动识别 tsconfig.json 里的别名，因此不需要额外配置 alias 字段。\n\n# object 类型\n\nalias 的值可以定义为 object 类型，其中的相对路径会自动被 builder 转换为绝对路径。\n\nexport default {\n  source: {\n    alias: {\n      '@common': './src/common',\n    },\n  },\n};\n\n\n以上配置完成后，如果在代码中引用 @common/foo.tsx, 则会映射到 <root>/src/common/foo.tsx 路径上。\n\n# function 类型\n\nalias 的值定义为函数时，可以接受预设的 alias 对象，并对其进行修改。\n\nexport default {\n  source: {\n    alias: alias => {\n      alias['@common'] = './src/common';\n    },\n  },\n};\n\n\n也可以在函数中返回一个新对象作为最终结果，新对象会覆盖预设的 alias 对象。\n\nexport default {\n  source: {\n    alias: alias => {\n      return {\n        '@common': './src/common',\n      };\n    },\n  },\n};\n\n\n\n# source.include\n\n * type: array<string | regexp>\n * default: []\n\n出于编译性能的考虑，默认情况下，builder 不会通过 babel-loader 或 ts-loader 来编译 node_modules 下的文件，也不会编译当前工程目录外部的文件。\n\n通过 source.include 配置项，可以指定需要额外进行编译的目录或模块。比如:\n\nexport default {\n  source: {\n    include: ['foo', /bar/],\n  },\n};\n\n\n# 场景示例\n\n比较典型的使用场景是编译 node_modules 下的文件，因为某些第三方依赖存在 es6+ 的语法，这可能导致在低版本浏览器上无法运行，你可以通过该选项指定需要编译的依赖，从而解决此类问题。以 query-string 为例，你可以做如下的配置：\n\nexport default {\n  source: {\n    include: [\n      // 方法一:\n      // 先通过 require.resolve 来获取模块的路径\n      // 再通过 path.dirname 来指向对应的目录\n      path.dirname(require.resolve('query-string')),\n      // 方法二:\n      // 通过正则表达式进行匹配\n      // 所有包含 `/query-string/` 的路径都会被匹配到\n      /\\/query-string\\//,\n    ],\n  },\n};\n\n\n> 注意，该配置只会编译 query-string 自身的代码，不会编译 query-string 的子依赖。如果需要编译 query-string 的子依赖，则需要将对应的 npm 包也加入到 source.include 中。\n\n# monorepo 项目\n\n使用 monorepo 时，如果需要引用 monorepo 中其他库的源代码，也可以直接在 source.include 进行配置:\n\nexport default {\n  source: {\n    source: {\n    include: [\n      // 方法一:\n      // 编译 monorepo 的 package 目录下的所有文件\n      path.resolve(__dirname, '../../packages'),\n\n      // 方法二:\n      // 编译 monorepo 的 package 目录里某个包的源代码\n      // 这种写法匹配的范围更加精准，对整体编译性能的影响更小\n      path.resolve(__dirname, '../../packages/xxx/src'),\n    ],\n  },\n};\n\n\n\n# source.compilejsdatauri\n\n * type: boolean\n * default: false\n\n对于使用 data uri 引入的 javascript 代码，是否采用 babel 进行编译。\n\n比如以下代码：\n\nimport x from 'data:text/javascript,export default 1;';\n\nimport 'data:text/javascript;charset=utf-8;base64,y29uc29szs5sb2coj2lubgluzsaxjyk7';\n\n\n# 示例\n\n添加以下配置来开启：\n\nexport default {\n  source: {\n    compilejsdatauri: true,\n  },\n};\n\n\n\n# source.define\n\n * type: record<string, unknown>\n * default: {}\n\n构建时将代码中的变量替换成其它值或者表达式，可以用于在代码逻辑中区分开发环境与生产环境等场景。\n\n传入的配置对象的键名是需要替换变量的名称，或者是用 . 连接的多个标识符，配置项的值则根据类型进行不同的处理：\n\n * 字符串会被当作代码片段。\n * 包括函数在内的其他类型会被转换成字符串。\n * 嵌套对象的父子键名之间会用 . 连接作为需要替换的变量名。\n * 以 typeof 开头的键名会用来替换 typeof 调用。\n\n更多细节参考 https://webpack.js.org/plugins/define-plugin/。\n\n# 示例\n\nexport default {\n  source: {\n    define: {\n      production: json.stringify(true),\n      version: json.stringify('5fa3b9'),\n      browser_supports_html5: true,\n      two: '1 + 1',\n      'typeof window': json.stringify('object'),\n      'process.env.node_env': json.stringify(process.env.node_env),\n      'import.meta': { test: undefined },\n    },\n  },\n};\n\n\n表达式会被替换为对应的代码段：\n\nconst foo = two;\n\n// ⬇️ turn into being...\nconst foo = 1 + 1;\n\n\n\n# source.globalvars\n\n * 类型: record<string, jsonvalue>\n * 默认值: {}\n\n构建时将类似 process.env.foo 的全局变量表达式替换为用户定义的值：\n\nconsole.log(process.env.node_env);\n\n// ⬇️ turn into being...\nconsole.log('development');\n\n\n选项上每项的值都需要是可以序列化成 json 的类型，键名会自动加上 process.env 前缀来替换全局变量。\n\n插件会自动添加环境变量 node_env 到配置。\n\n使用解构赋值时，构建器无法判断变量 node_env 是否与要替换的表达式 process.env.node_env 存在关联，所以这样的使用方式是无效的：\n\nconst { node_env } = process.env;\nconsole.log(node_env);\n// ❌ won't get a string.\n\n\nglobalvars 可以当作是 define 的语法糖，专门用于简化配置全局变量的流程：\n\nexport default {\n  source: {\n    globalvars: {\n      node_env: 'development',\n    },\n    define: {\n      'process.env.node_env': json.stringify('development'),\n    },\n  },\n};\n\n\n# 示例\n\nexport default {\n  source: {\n    globalvars: {\n      enable_vconsole: true,\n      app_context: { answer: 42 },\n    },\n  },\n};\n\n\n\n# source.modulescopes\n\n * type: array<string | regexp> | function\n * default: undefined\n\n限制源代码的引用路径。配置该选项后，所有源文件只能从约定的目录下引用代码，从其他目录引用代码会产生对应的报错提示。\n\n# 示例\n\n首先我们配置 modulescopes 仅包含 src 目录：\n\nexport default {\n  source: {\n    modulescopes: ['./src'],\n  },\n};\n\n\n然后在 src/app.tsx 中导入 src 目录外部的 utils/a 模块:\n\nimport a from '../utils/a';\n\n\n在编译时，会提示引用路径错误:\n\n\n\n通过该选项配置 utils 目录，再进行编译，则不会出现错误提示。\n\nexport default {\n  source: {\n    modulescopes: ['./src', './utils'],\n  },\n};\n\n\n# array 类型\n\n当 modulescopes 的值为 array 类型时，可以直接设置若干个代码路径，比如添加以下配置：\n\nexport default {\n  source: {\n    modulescopes: ['./src', './shared', './utils'],\n  },\n};\n\n\n# function 类型\n\nmodulescopes 也支持通过函数的形式来进行修改，避免覆盖默认值：\n\nexport default {\n  source: {\n    modulescopes: scopes => {\n      scopes.push('./shared');\n    },\n  },\n};\n\n\n\n# source.preentry\n\n * type: string | string[]\n * default: undefined\n\n在每个页面的入口文件前添加一段脚本，这段脚本会早于页面的代码执行，在这个脚本中可以进行执行一些全局的代码配置，比如注入 polyfill 等。\n\n# 添加单个脚本\n\n首先创建一个 src/polyfill.ts 文件：\n\nconsole.log('i am a polyfill');\n\n\n然后将 src/polyfill.ts 配置到 source.preentry 上：\n\nexport default {\n  source: {\n    preentry: './src/polyfill.ts',\n  },\n};\n\n\n重新运行编译并访问任意页面，可以看到 src/polyfill.ts 中的代码已经执行，并在 console 中输出了对应的内容。\n\n# 添加多个脚本\n\n可以将 preentry 设置为数组来添加多个脚本：\n\nexport default {\n  source: {\n    preentry: ['./src/polyfill-a.ts', './src/polyfill-b.ts'],\n  },\n};\n\n\n\n# source.resolveextensionprefix\n\n * type: string\n * default: undefined\n\n用于为 resolve 的 extensions 添加统一的前缀。\n\n如果多个文件拥有相同的名称，但具有不同的文件后缀，builder 会根据 extensions 数组的顺序进行识别，解析数组中第一个被识别的文件，并跳过其余文件。\n\n# 示例\n\n下面是配置 .web 前缀的例子。\n\nexport default {\n  source: {\n    resolveextensionprefix: '.web',\n  },\n};\n\n\n配置完成后，extensions 数组会发生以下变化：\n\n// 配置前\nconst extensions = ['.js', '.ts', ...];\n\n// 配置后\nconst extensions = ['.web.js', '.js', '.web.ts' , '.ts', ...];\n\n\n在代码中 import './foo' 时，会优先识别 foo.web.js 文件，再识别 foo.js 文件。\n\n\n# source.resolvemainfields\n\n * type: (string | string[])[]\n\n * default: undefined\n\n该配置项将决定你使用 package.json 哪个字段导入 npm 模块。对应 webpack 的 resolve.mainfields 配置。\n\n# 示例\n\nexport default {\n  source: {\n    resolvemainfields: ['main', 'browser', 'exports'],\n  },\n};\n",charsets:{cjk:!0}},{title:"Tools Config",frontmatter:{extractApiHeaders:[2]},regularPath:"/zh/api/config-tools.html",relativePath:"zh/api/config-tools.md",key:"v-843d4e28",path:"/zh/api/config-tools.html",headers:[{level:2,title:"tools.autoprefixer",slug:"tools-autoprefixer",normalizedTitle:"tools.autoprefixer",charIndex:48},{level:3,title:"Object 类型",slug:"object-类型",normalizedTitle:"object 类型",charIndex:312},{level:3,title:"Function 类型",slug:"function-类型",normalizedTitle:"function 类型",charIndex:484},{level:2,title:"tools.babel",slug:"tools-babel",normalizedTitle:"tools.babel",charIndex:711},{level:3,title:"Object 类型",slug:"object-类型-2",normalizedTitle:"object 类型",charIndex:312},{level:3,title:"Function 类型",slug:"function-类型-2",normalizedTitle:"function 类型",charIndex:484},{level:3,title:"工具函数",slug:"工具函数",normalizedTitle:"工具函数",charIndex:1254},{level:4,title:"addPlugins",slug:"addplugins",normalizedTitle:"addplugins",charIndex:1628},{level:4,title:"addPresets",slug:"addpresets",normalizedTitle:"addpresets",charIndex:1949},{level:4,title:"removePlugins",slug:"removeplugins",normalizedTitle:"removeplugins",charIndex:2116},{level:4,title:"removePresets",slug:"removepresets",normalizedTitle:"removepresets",charIndex:2289},{level:4,title:"addIncludes",slug:"addincludes",normalizedTitle:"addincludes",charIndex:2462},{level:4,title:"addExcludes",slug:"addexcludes",normalizedTitle:"addexcludes",charIndex:2694},{level:4,title:"modifyPresetEnvOptions",slug:"modifypresetenvoptions",normalizedTitle:"modifypresetenvoptions",charIndex:2890},{level:4,title:"modifyPresetReactOptions",slug:"modifypresetreactoptions",normalizedTitle:"modifypresetreactoptions",charIndex:3170},{level:2,title:"tools.cssExtract",slug:"tools-cssextract",normalizedTitle:"tools.cssextract",charIndex:3427},{level:3,title:"Object 类型",slug:"object-类型-3",normalizedTitle:"object 类型",charIndex:312},{level:3,title:"Function 类型",slug:"function-类型-3",normalizedTitle:"function 类型",charIndex:484},{level:3,title:"Boolean 类型",slug:"boolean-类型",normalizedTitle:"boolean 类型",charIndex:4328},{level:2,title:"tools.cssLoader",slug:"tools-cssloader",normalizedTitle:"tools.cssloader",charIndex:4469},{level:3,title:"Object 类型",slug:"object-类型-4",normalizedTitle:"object 类型",charIndex:312},{level:3,title:"Function 类型",slug:"function-类型-4",normalizedTitle:"function 类型",charIndex:484},{level:2,title:"tools.devServer",slug:"tools-devserver",normalizedTitle:"tools.devserver",charIndex:5407},{level:3,title:"选项",slug:"选项",normalizedTitle:"选项",charIndex:5495},{level:4,title:"after",slug:"after",normalizedTitle:"after",charIndex:5501},{level:4,title:"before",slug:"before",normalizedTitle:"before",charIndex:5764},{level:4,title:"client",slug:"client",normalizedTitle:"client",charIndex:6030},{level:4,title:"devMiddleware",slug:"devmiddleware",normalizedTitle:"devmiddleware",charIndex:6296},{level:4,title:"headers",slug:"headers",normalizedTitle:"headers",charIndex:6553},{level:4,title:"historyApiFallback",slug:"historyapifallback",normalizedTitle:"historyapifallback",charIndex:6749},{level:4,title:"hot",slug:"hot",normalizedTitle:"hot",charIndex:6450},{level:4,title:"https",slug:"https",normalizedTitle:"https",charIndex:7129},{level:4,title:"liveReload",slug:"livereload",normalizedTitle:"livereload",charIndex:7530},{level:4,title:"setupMiddlewares",slug:"setupmiddlewares",normalizedTitle:"setupmiddlewares",charIndex:7698},{level:4,title:"proxy",slug:"proxy",normalizedTitle:"proxy",charIndex:8882},{level:4,title:"watch",slug:"watch",normalizedTitle:"watch",charIndex:8714},{level:2,title:"tools.htmlPlugin",slug:"tools-htmlplugin",normalizedTitle:"tools.htmlplugin",charIndex:10863},{level:3,title:"Object 类型",slug:"object-类型-5",normalizedTitle:"object 类型",charIndex:312},{level:3,title:"Function 类型",slug:"function-类型-5",normalizedTitle:"function 类型",charIndex:484},{level:3,title:"Boolean 类型",slug:"boolean-类型-2",normalizedTitle:"boolean 类型",charIndex:4328},{level:2,title:"tools.inspector",slug:"tools-inspector",normalizedTitle:"tools.inspector",charIndex:12138},{level:3,title:"Object 类型",slug:"object-类型-6",normalizedTitle:"object 类型",charIndex:312},{level:3,title:"Function 类型",slug:"function-类型-6",normalizedTitle:"function 类型",charIndex:484},{level:2,title:"tools.less",slug:"tools-less",normalizedTitle:"tools.less",charIndex:12754},{level:3,title:"Object 类型",slug:"object-类型-7",normalizedTitle:"object 类型",charIndex:312},{level:3,title:"Function 类型",slug:"function-类型-7",normalizedTitle:"function 类型",charIndex:484},{level:3,title:"工具函数",slug:"工具函数-2",normalizedTitle:"工具函数",charIndex:1254},{level:4,title:"addExcludes",slug:"addexcludes-2",normalizedTitle:"addexcludes",charIndex:2694},{level:2,title:"tools.minifyCss",slug:"tools-minifycss",normalizedTitle:"tools.minifycss",charIndex:13554},{level:3,title:"Object 类型",slug:"object-类型-8",normalizedTitle:"object 类型",charIndex:312},{level:3,title:"Function 类型",slug:"function-类型-8",normalizedTitle:"function 类型",charIndex:484},{level:2,title:"tools.postcss",slug:"tools-postcss",normalizedTitle:"tools.postcss",charIndex:14279},{level:3,title:"Object 类型",slug:"object-类型-9",normalizedTitle:"object 类型",charIndex:312},{level:3,title:"Function 类型",slug:"function-类型-9",normalizedTitle:"function 类型",charIndex:484},{level:3,title:"工具函数",slug:"工具函数-3",normalizedTitle:"工具函数",charIndex:1254},{level:4,title:"addPlugins",slug:"addplugins-2",normalizedTitle:"addplugins",charIndex:1628},{level:2,title:"tools.pug",slug:"tools-pug",normalizedTitle:"tools.pug",charIndex:16272},{level:3,title:"Boolean 类型",slug:"boolean-类型-3",normalizedTitle:"boolean 类型",charIndex:4328},{level:3,title:"Object 类型",slug:"object-类型-10",normalizedTitle:"object 类型",charIndex:312},{level:3,title:"Function 类型",slug:"function-类型-10",normalizedTitle:"function 类型",charIndex:484},{level:2,title:"tools.sass",slug:"tools-sass",normalizedTitle:"tools.sass",charIndex:16884},{level:3,title:"Object 类型",slug:"object-类型-11",normalizedTitle:"object 类型",charIndex:312},{level:3,title:"Function 类型",slug:"function-类型-11",normalizedTitle:"function 类型",charIndex:484},{level:3,title:"工具函数",slug:"工具函数-4",normalizedTitle:"工具函数",charIndex:1254},{level:4,title:"addExcludes",slug:"addexcludes-3",normalizedTitle:"addexcludes",charIndex:2694},{level:2,title:"tools.styleLoader",slug:"tools-styleloader",normalizedTitle:"tools.styleloader",charIndex:17609},{level:3,title:"Object 类型",slug:"object-类型-12",normalizedTitle:"object 类型",charIndex:312},{level:3,title:"Function 类型",slug:"function-类型-12",normalizedTitle:"function 类型",charIndex:484},{level:2,title:"tools.styledComponents",slug:"tools-styledcomponents",normalizedTitle:"tools.styledcomponents",charIndex:18222},{level:2,title:"tools.terser",slug:"tools-terser",normalizedTitle:"tools.terser",charIndex:16548},{level:3,title:"Object 类型",slug:"object-类型-13",normalizedTitle:"object 类型",charIndex:312},{level:3,title:"Function 类型",slug:"function-类型-13",normalizedTitle:"function 类型",charIndex:484},{level:2,title:"tools.tsLoader",slug:"tools-tsloader",normalizedTitle:"tools.tsloader",charIndex:19416},{level:3,title:"Object 类型",slug:"object-类型-14",normalizedTitle:"object 类型",charIndex:312},{level:3,title:"Function 类型",slug:"function-类型-14",normalizedTitle:"function 类型",charIndex:484},{level:3,title:"工具函数",slug:"工具函数-5",normalizedTitle:"工具函数",charIndex:1254},{level:4,title:"addIncludes",slug:"addincludes-2",normalizedTitle:"addincludes",charIndex:2462},{level:4,title:"addExcludes",slug:"addexcludes-4",normalizedTitle:"addexcludes",charIndex:2694},{level:2,title:"tools.tsChecker",slug:"tools-tschecker",normalizedTitle:"tools.tschecker",charIndex:20776},{level:3,title:"Object 类型",slug:"object-类型-15",normalizedTitle:"object 类型",charIndex:312},{level:3,title:"Function 类型",slug:"function-类型-15",normalizedTitle:"function 类型",charIndex:484},{level:2,title:"tools.webpack",slug:"tools-webpack",normalizedTitle:"tools.webpack",charIndex:21791},{level:3,title:"Object 类型",slug:"object-类型-16",normalizedTitle:"object 类型",charIndex:312},{level:3,title:"Function 类型",slug:"function-类型-16",normalizedTitle:"function 类型",charIndex:484},{level:3,title:"工具集合",slug:"工具集合",normalizedTitle:"工具集合",charIndex:22442},{level:4,title:"env",slug:"env",normalizedTitle:"env",charIndex:2089},{level:4,title:"isProd",slug:"isprod",normalizedTitle:"isprod",charIndex:4684},{level:4,title:"target",slug:"target",normalizedTitle:"target",charIndex:3078},{level:4,title:"webpack",slug:"webpack",normalizedTitle:"webpack",charIndex:6200},{level:2,title:"tools.webpackChain",slug:"tools-webpackchain",normalizedTitle:"tools.webpackchain",charIndex:21904},{level:3,title:"工具集合",slug:"工具集合-2",normalizedTitle:"工具集合",charIndex:22442},{level:4,title:"env",slug:"env-2",normalizedTitle:"env",charIndex:2089},{level:4,title:"isProd",slug:"isprod-2",normalizedTitle:"isprod",charIndex:4684},{level:4,title:"target",slug:"target-2",normalizedTitle:"target",charIndex:3078},{level:4,title:"webpack",slug:"webpack-2",normalizedTitle:"webpack",charIndex:6200},{level:4,title:"CHAIN_ID",slug:"chain-id",normalizedTitle:"chain_id",charIndex:23709},{level:3,title:"CHAINID.ONEOF",slug:"chain-id-one-of",normalizedTitle:"chainid.oneof",charIndex:null},{level:3,title:"CHAIN_ID.USE",slug:"chain-id-use",normalizedTitle:"chain_id.use",charIndex:25622},{level:3,title:"CHAIN_ID.PLUGIN",slug:"chain-id-plugin",normalizedTitle:"chain_id.plugin",charIndex:26346},{level:3,title:"CHAIN_ID.MINIMIZER",slug:"chain-id-minimizer",normalizedTitle:"chain_id.minimizer",charIndex:27725},{level:3,title:"常用 WebpackChain 使用示例",slug:"常用-webpackchain-使用示例",normalizedTitle:"常用 webpackchain 使用示例",charIndex:27933},{level:4,title:"新增/修改/删除 loader",slug:"新增-修改-删除-loader",normalizedTitle:"新增/修改/删除 loader",charIndex:28014},{level:4,title:"新增/修改/删除 plugin",slug:"新增-修改-删除-plugin",normalizedTitle:"新增/修改/删除 plugin",charIndex:28557}],lastUpdated:"2022/10/13 03:49:10",lastUpdatedTimestamp:166563295e4,headersStr:"tools.autoprefixer Object 类型 Function 类型 tools.babel Object 类型 Function 类型 工具函数 addPlugins addPresets removePlugins removePresets addIncludes addExcludes modifyPresetEnvOptions modifyPresetReactOptions tools.cssExtract Object 类型 Function 类型 Boolean 类型 tools.cssLoader Object 类型 Function 类型 tools.devServer 选项 after before client devMiddleware headers historyApiFallback hot https liveReload setupMiddlewares proxy watch tools.htmlPlugin Object 类型 Function 类型 Boolean 类型 tools.inspector Object 类型 Function 类型 tools.less Object 类型 Function 类型 工具函数 addExcludes tools.minifyCss Object 类型 Function 类型 tools.postcss Object 类型 Function 类型 工具函数 addPlugins tools.pug Boolean 类型 Object 类型 Function 类型 tools.sass Object 类型 Function 类型 工具函数 addExcludes tools.styleLoader Object 类型 Function 类型 tools.styledComponents tools.terser Object 类型 Function 类型 tools.tsLoader Object 类型 Function 类型 工具函数 addIncludes addExcludes tools.tsChecker Object 类型 Function 类型 tools.webpack Object 类型 Function 类型 工具集合 env isProd target webpack tools.webpackChain 工具集合 env isProd target webpack CHAIN_ID CHAINID.ONEOF CHAIN_ID.USE CHAIN_ID.PLUGIN CHAIN_ID.MINIMIZER 常用 WebpackChain 使用示例 新增/修改/删除 loader 新增/修改/删除 plugin",content:"# Tools Config\n\n本章节描述了 Builder 中与底层工具有关的配置。\n\n\n# tools.autoprefixer\n\n * Type: Object | Function\n * Default\n\n{\n  flexbox: 'no-2009',\n  // browserslist 取决于项目中的 browserslist 配置\n  // 以及 `output.overrideBrowserslist`(优先级更高) 配置\n  overrideBrowserslist: browserslist,\n}\n\n\n通过 tools.autoprefixer 可以修改 autoprefixer 的配置。\n\n\n# Object 类型\n\n当 tools.autoprefixer 的值为 Object 类型时，会与默认配置通过 Object.assign 合并。比如：\n\nexport default {\n  tools: {\n    autoprefixer: {\n      flexbox: 'no-2009',\n    },\n  },\n};\n\n\n\n# Function 类型\n\n当 tools.autoprefixer 为 Function 类型时，默认配置作为第一个参数传入，可以直接修改配置对象，也可以返回一个值作为最终结果。比如：\n\nexport default {\n  tools: {\n    autoprefixer(config) {\n      // 修改 flexbox 的配置\n      config.flexbox = 'no-2009';\n    },\n  },\n};\n\n\n\n# tools.babel\n\n * Type: Object | Function\n * Default: undefined\n\n通过 tools.babel 可以修改 babel-loader 的配置项。\n\n\n# Object 类型\n\n当 tools.babel 的值为 Object 类型时，会与默认配置通过 Object.assign 合并。\n\nexport default {\n  tools: {\n    babel: {\n      plugins: [\n        [\n          'babel-plugin-import',\n          {\n            libraryName: 'xxx-components',\n            libraryDirectory: 'es',\n            style: true,\n          },\n        ],\n      ],\n    },\n  },\n};\n\n\n\n# Function 类型\n\n当 tools.babel 为 Function 类型时，默认配置作为第一个参数传入，可以直接修改配置对象，也可以返回一个值作为最终结果，第二个参数提供了一些可以直接调用的工具函数：\n\nexport default {\n  tools: {\n    babel(config) {\n      // 添加一个插件，比如配置某个组件库的按需引入\n      // 目前内置了 antd 的按需引入规则\n      config.plugins.push([\n        'babel-plugin-import',\n        {\n          libraryName: 'xxx-components',\n          libraryDirectory: 'es',\n          style: true,\n        },\n      ]);\n    },\n  },\n};\n\n\n\n# 工具函数\n\ntools.babel 为 Function 类型时，第二个参数可用的工具函数如下:\n\n# addPlugins\n\n添加 Babel 插件。\n\nexport default {\n  tools: {\n    babel(config, { addPlugins }) {\n      addPlugins([\n        [\n          'babel-plugin-import',\n          {\n            libraryName: 'xxx-components',\n            libraryDirectory: 'es',\n            style: true,\n          },\n        ],\n      ]);\n    },\n  },\n};\n\n\n# addPresets\n\n添加 Babel 预设配置。(大多数情况下不需要增加预设)\n\nexport default {\n  tools: {\n    babel(config, { addPresets }) {\n      addPresets(['@babel/preset-env']);\n    },\n  },\n};\n\n\n# removePlugins\n\n移除 Babel 插件，传入需要移除的插件名称即可。\n\nexport default {\n  tools: {\n    babel(config, { removePlugins }) {\n      removePlugins('babel-plugin-import');\n    },\n  },\n};\n\n\n# removePresets\n\n移除 Babel 预设配置，传入需要移除的预设名称即可。\n\nexport default {\n  tools: {\n    babel(config, { removePresets }) {\n      removePresets('@babel/preset-env');\n    },\n  },\n};\n\n\n# addIncludes\n\n默认情况下 Babel 只会编译 src 目录下的业务代码，使用 addIncludes 你可以指定 Babel 编译 node_modules 下的一些文件。比如:\n\nexport default {\n  tools: {\n    babel(config, { addIncludes }) {\n      addIncludes('node_modules/xxx-components');\n    },\n  },\n};\n\n\n# addExcludes\n\n和 addIncludes 相反，指定 Babel 编译时排除某些文件。\n\n比如不编译 src/example 目录下的文件:\n\nexport default {\n  tools: {\n    babel(config, { addExcludes }) {\n      addExcludes('src/example');\n    },\n  },\n};\n\n\n# modifyPresetEnvOptions\n\n修改 @babel/preset-env 的配置项，传入的配置会与默认配置进行浅层合并，比如:\n\nexport default {\n  tools: {\n    babel(config, { modifyPresetEnvOptions }) {\n      modifyPresetEnvOptions({\n        targets: {\n          browsers: ['last 2 versions'],\n        },\n      });\n    },\n  },\n};\n\n\n# modifyPresetReactOptions\n\n修改 @babel/preset-react 的配置项，传入的配置会与默认配置进行浅层合并，比如:\n\nexport default {\n  tools: {\n    babel(config, { modifyPresetReactOptions }) {\n      modifyPresetReactOptions({\n        pragma: 'React.createElement',\n      });\n    },\n  },\n};\n\n\n\n# tools.cssExtract\n\n * Type: false | Object | Function\n * Default\n\n{\n  // Loader 配置\n  loaderOptions: {},\n  // Plugin 配置\n  pluginOptions: {\n    // cssPath 默认为 static/css, cssFilename 默认为 [name].[contenthash:8].css\n    filename: `${cssPath}/${cssFilename}`,\n    chunkFilename: `${cssPath}/async/${cssFilename}`,\n    ignoreOrder: true,\n  }\n}\n\n\n通过 tools.cssExtract 可以更改 mini-css-extract-plugin 的配置。\n\n\n# Object 类型\n\n当此值为 Object 类型时，与默认配置通过 Object.assign 合并。比如：\n\nexport default {\n  tools: {\n    cssExtract: {\n      pluginOptions: {\n        filename: 'static/css/[name].[contenthash:8].css',\n      },\n    },\n  },\n};\n\n\n\n# Function 类型\n\n当此值为 Function 类型时，默认配置作为第一个参数传入，你可以直接修改配置对象，也可以返回一个对象作为最终配置。比如：\n\nexport default {\n  tools: {\n    cssExtract: config => {\n      config.pluginOptions.filename = 'static/css/[name].[contenthash:8].css';\n      return config;\n    },\n  },\n};\n\n\n更多配置细节可参考 mini-css-extract-plugin。\n\n\n# Boolean 类型\n\n将 tools.cssExtract 配置为 false，可以禁用默认的 mini-css-extract-plugin 插件。\n\nexport default {\n  tools: {\n    cssExtract: false,\n  },\n}\n\n\n\n# tools.cssLoader\n\n * Type: Object | Function\n * Default: undefined\n\n通过 tools.cssLoader 可以修改 css-loader 的配置项。默认配置如下:\n\n{\n  importLoaders: 1,\n  modules: {\n    auto: true,\n    exportLocalsConvention: 'camelCase',\n    // isProd 表示生产环境构建\n    localIdentName: isProd\n      ? '[hash:base64]'\n      : '[path][name]__[local]--[hash:base64:5]',\n    // isServer 表示 SSR 构建\n    exportOnlyLocals: isServer,\n  },\n  // 默认在生产环境中的 enableSourceMap 为 true\n  sourceMap: enableSourceMap,\n}\n\n\n\n# Object 类型\n\n当此值为 Object 类型时，与默认配置通过 Object.assign 合并。比如：\n\nexport default {\n  tools: {\n    cssLoader: {\n      modules: {\n        localIdentName: '[path][name]__[local]--[hash:base64:5]',\n      },\n    },\n  },\n};\n\n\n\n# Function 类型\n\n当此值为 Function 类型时，默认配置作为第一个参数传入，你可以直接修改配置对象，也可以返回一个对象作为最终配置。比如：\n\nexport default {\n  tools: {\n    cssLoader: config => {\n      config.modules.localIdentName = '[path][name]__[local]--[hash:base64:5]';\n      return config;\n    },\n  },\n};\n\n\n\n# tools.devServer\n\n * Type: Object\n * Default: {}\n\n通过 tools.devServer 可以修改开发环境服务器的配置。\n\n\n# 选项\n\n# after\n\n * Type: Array\n * Default: []\n\n添加自定义中间件，在所有开发环境中间件后执行。\n\nexport default {\n  tools: {\n    devServer: {\n      after: [\n        async (req, res, next) => {\n          console.log('after dev middleware');\n          next();\n        },\n      ],\n    },\n  },\n};\n\n\n# before\n\n * Type: Array\n * Default: []\n\n添加自定义中间件，在所有开发环境中间件前执行。\n\nexport default {\n  tools: {\n    devServer: {\n      before: [\n        async (req, res, next) => {\n          console.log('before dev middleware');\n          next();\n        },\n      ],\n    },\n  },\n};\n\n\n# client\n\n * Type:\n\n{\n    /** 事件流路径 */\n    path?: string;\n    /** 指定监听请求的端口号 */\n    port?: string;\n    /** 指定要使用的 host */\n    host?: string;\n}\n\n\n * Default:\n\n{\n    path: '/webpack-hmr',\n    port: '8080',\n    host: networkAddress || 'localhost',\n}\n\n\n配置 hmr 客户端相关功能。\n\n# devMiddleware\n\n * Type:\n\n{\n  writeToDisk: boolean | ((filename: string) => boolean);\n}\n\n\n * Default:\n\n{\n  writeToDisk: (file: string) => !file.includes('.hot-update.') && !file.endsWith('.map'),\n}\n\n\ndevMiddleware 配置项。当前配置是 webpack-dev-middleware 配置项的子集.\n\n# headers\n\n * Type: Record<string, string>\n * Default: undefined\n\n设置自定义响应头。\n\nexport default {\n  tools: {\n    devServer: {\n      headers: {\n        'X-Custom-Foo': 'bar',\n      },\n    },\n  },\n};\n\n\n# historyApiFallback\n\n * Type: boolean | ConnectHistoryApiFallbackOptions\n * Default: false\n\n在需要对一些 404 响应或其他请求提供替代页面的场景，可通过 devServer.historyApiFallback 进行设置：\n\nexport default {\n  tools: {\n    devServer: {\n      historyApiFallback: true,\n    },\n  },\n};\n\n\n更多选项和详细信息可参考 connect-history-api-fallback 文档。\n\n# hot\n\n * Type: boolean\n * Default: true\n\n是否开启 Hot Module Replacement 热更新能力。\n\n# https\n\n * Type: boolean | { key: string; cert: string }\n * Default: false\n\n默认情况下，DevServer 会启用 HTTP 服务器。通过设置 devServer.https 为 true 将开启对 HTTPS 的支持，同时会禁用 HTTP 服务器。\n\n你也可以手动传入 HTTPS 服务器所需要的证书和对应的私钥：\n\nexport default {\n  tools: {\n    devServer: {\n      https: {\n        key: fs.readFileSync('certificates/private.pem'),\n        cert: fs.readFileSync('certificates/public.pem'),\n      },\n    },\n  },\n};\n\n\n# liveReload\n\n * Type: boolean\n * Default: true\n\n默认情况下，当监听到文件变化时，DevServer 将会刷新页面（为使 liveReload 能够生效，devServer.hot 配置项应当禁用）。通过设置 devServer.liveReload 为 false 可以关闭该行为。\n\n# setupMiddlewares\n\n * Type:\n\nArray<\n  (\n    middlewares: {\n      unshift: (...handlers: RequestHandler[]) => void;\n      push: (...handlers: RequestHandler[]) => void;\n    },\n    server: {\n      sockWrite: (\n        type: string,\n        data?: string | boolean | Record<string, any>,\n      ) => void;\n    },\n  ) => void\n>;\n\n\n * Default: undefined\n\n提供执行自定义函数和应用自定义中间件的能力。\n\n几种不同中间件之间的执行顺序是: devServer.before => unshift => 内置中间件 => push => devServer.after。\n\nexport default {\n  tools: {\n    devServer: {\n      setupMiddlewares: [\n        (middlewares, server) => {\n          middlewares.unshift((req, res, next) => {\n            next();\n          });\n\n          middlewares.push((req, res, next) => {\n            next();\n          });\n        },\n      ],\n    },\n  },\n};\n\n\n一些特殊场景需求可能需要使用服务器 API：\n\n * sockWrite。允许向 hmr 客户端传递一些消息，hmr 客户端将根据接收到的消息类型进行不同的处理。如果你发送一个 \"content-changed \" 的消息，页面将会重新加载。\n\nexport default {\n  tools: {\n    devServer: {\n      setupMiddlewares: [\n        (middlewares, server) => {\n          // 添加自定义 watcher 并在文件更新时触发页面刷新\n          watcher.on('change', changed => {\n            server.sockWrite('content-changed');\n          });\n        },\n      ],\n    },\n  },\n};\n\n\n# proxy\n\n * Type: Record<string, string> | Record<string, ProxyDetail>\n * Default: undefined\n\n代理请求到指定的服务上。\n\nexport default {\n  tools: {\n    devServer: {\n      proxy: {\n        '/api': 'http://localhost:3000',\n      },\n    },\n  },\n};\n\n\n此时，/api/users 请求将会代理到 http://localhost:3000/api/users。\n\n如果你不想传递 /api，可以通过 pathRewrite 重写请求路径：\n\nexport default {\n  tools: {\n    devServer: {\n      proxy: {\n        '/api': {\n          target: 'http://localhost:3000',\n          pathRewrite: { '^/api': '' },\n        },\n      },\n    },\n  },\n};\n\n\nDevServer Proxy 基于 http-proxy-middleware 实现。你可以使用 http-proxy-middleware 的所有配置项，具体可以查看文档。\n\nDevServer Proxy 完整类型定义为：\n\nimport type { Options as HttpProxyOptions } from 'http-proxy-middleware';\n\ntype ProxyDetail = HttpProxyOptions & {\n  bypass?: (\n    req: IncomingMessage,\n    res: ServerResponse,\n    proxyOptions: ProxyOptions,\n  ) => string | undefined | null | false;\n  context?: string | string[];\n};\n\ntype ProxyOptions =\n  | Record<string, string>\n  | Record<string, ProxyDetail>\n  | ProxyDetail[]\n  | ProxyDetail;\n\n\n除了 http-proxy-middleware 的选项外，还支持 bypass 和 context 两个配置项：\n\n * bypass：根据函数的返回值绕过代理。\n   * 返回 null 或 undefined 会继续用代理处理请求。\n   * 返回 false 会返回 404 错误。\n   * 返回一个具体的服务路径，将会使用此路径替代原请求路径。\n * context：如果你想代理多个特定的路径到同一个目标，你可以使用 context 配置项。\n\n// 自定义 bypass 方法\nexport default {\n  tools: {\n    devServer: {\n      proxy: {\n        '/api': {\n          target: 'http://localhost:3000',\n          bypass: function (req, res, proxyOptions) {\n            if (req.headers.accept.indexOf('html') !== -1) {\n              console.log('Skipping proxy for browser request.');\n              return '/index.html';\n            }\n          },\n        },\n      },\n    },\n  },\n};\n\n\n// 代理多个路径到同一个目标\nexport default {\n  tools: {\n    devServer: {\n      proxy: [\n        {\n          context: ['/auth', '/api'],\n          target: 'http://localhost:3000',\n        },\n      ],\n    },\n  },\n};\n\n\n# watch\n\n * Type: boolean\n * Default: true\n\n是否监听 mock/、server/、api/ 等目录的文件变化。\n\n\n# tools.htmlPlugin\n\n * Type: false | Object | Function\n * Default:\n\nconst defaultHtmlPluginOptions = {\n  inject, // 对应 html.inject 配置项\n  favicon, // 对应 html.favicon 配置项\n  filename, // 基于 output.distPath 和 entryName 生成\n  template, // 默认为内置的 HTML 模板路径\n  templateParameters, // 对应 html.templateParameters 配置项\n  chunks: [entryName],\n  minify: {\n    removeComments: true,\n    useShortDoctype: true,\n    keepClosingSlash: true,\n    collapseWhitespace: true,\n    removeRedundantAttributes: true,\n    removeScriptTypeAttributes: true,\n    removeStyleLinkTypeAttributes: true,\n  },\n};\n\n\n通过 tools.htmlPlugin 可以修改 html-webpack-plugin 的配置项。\n\n\n# Object 类型\n\n当 tools.htmlPlugin 的值为 Object 类型时，会与默认配置通过 Object.assign 合并。\n\nexport default {\n  tools: {\n    htmlPlugin: {\n      scriptLoading: 'blocking',\n    },\n  },\n};\n\n\n\n# Function 类型\n\n当 tools.htmlPlugin 为 Function 类型时：\n\n * 第一个参数是默认配置的对象，可以直接修改该对象。\n * 第二个参数是也是一个对象，包含了 entry 的名称和 entry 的值。\n * 函数可以 return 一个新的对象作为最终的配置。\n\nexport default {\n  tools: {\n    htmlPlugin(config, { entryName, entryValue }) {\n      if (entryName === 'main') {\n        config.scriptLoading = 'blocking';\n      }\n    },\n  },\n};\n\n\n\n# Boolean 类型\n\n将 tools.htmlPlugin 配置为 false，可以禁用默认的 html-webpack-plugin 插件。\n\nexport default {\n  tools: {\n    htmlPlugin: false,\n  },\n};\n\n\n\n# tools.inspector\n\n * Type: Object | Function | undefined\n * Default: undefined\n\n你可以通过 tools.inspector 开启或者配置 webpack 调试工具 webpack-inspector。\n\n当配置不为 undefined 时，则表示开启了 webpack-inspector，此时 tools.inspector 的类型可以为 Object 或者 Function。\n\n\n# Object 类型\n\n当 tools.inspector 的值为 Object 类型时，会与默认配置通过 Object.assign 合并。比如：\n\nexport default {\n  tools: {\n    inspector: {\n      // 默认端口为 3333\n      port: 3334,\n    },\n  },\n};\n\n\n\n# Function 类型\n\n当 tools.inspector 为 Function 类型时，默认配置作为第一个参数传入，可以直接修改配置对象，也可以返回一个值作为最终结果。比如：\n\nexport default {\n  tools: {\n    inspector(config) {\n      // 修改端口号\n      config.port = 3333;\n    },\n  },\n};\n\n\n\n# tools.less\n\n * Type: Object | Function\n * Default\n\n{\n  lessOptions: {\n    javascriptEnabled: true\n  },\n  sourceMap: false,\n}\n\n\n你可以通过 tools.less 修改 less-loader 的配置。\n\n\n# Object 类型\n\n当 tools.less 的值为 Object 类型时，会与默认配置通过 Object.assign 合并。\n\nexport default {\n  tools: {\n    less: {\n      lessOptions: {\n        javascriptEnabled: false,\n      },\n    },\n  },\n};\n\n\n\n# Function 类型\n\n当 tools.less 为 Function 类型时，默认配置作为第一个参数传入，可以直接修改配置对象，也可以返回一个值作为最终结果，第二个参数提供了一些可以直接调用的工具函数：\n\nexport default {\n  tools: {\n    less(config) {\n      // 修改 lessOptions 配置\n      config.lessOptions = {\n        javascriptEnabled: false,\n      };\n    },\n  },\n};\n\n\n\n# 工具函数\n\n# addExcludes\n\n用来指定 less-loader 不编译哪些文件，例如：\n\nexport default {\n  tools: {\n    less(config, { addExcludes }) {\n      addExcludes(/node_modules/);\n    },\n  },\n};\n\n\n\n# tools.minifyCss\n\n * Type: Object | Function | undefined\n * Default: {}\n\n在生产环境构建时，Builder 会通过 css-minimizer-webpack-plugin 对 CSS 代码进行压缩优化。可以通过 tools.minifyCss 修改 css-minimizer-webpack-plugin 的配置。\n\n\n# Object 类型\n\n当 tools.minifyCss 的值为 Object 类型时，会与默认配置通过 Object.assign 合并。\n\n例如下面修改 cssnano 的 preset 配置：\n\nexport default {\n  tools: {\n    minifyCss: {\n      minimizerOptions: {\n        preset: require.resolve('cssnano-preset-simple'),\n      },\n    },\n  },\n};\n\n\n\n# Function 类型\n\n当 tools.minifyCss 配置为 Function 类型时，默认配置作为第一个参数传入，可以直接修改配置对象，也可以返回一个值作为最终结果。\n\nexport default {\n   tools: {\n    minifyCss: options => {\n      options.minimizerOptions = {\n        preset: require.resolve('cssnano-preset-simple'),\n      },\n    }\n  }\n};\n\n\n\n# tools.postcss\n\n * Type: Object | Function\n * Default:\n\nconst defaultOptions = {\n  postcssOptions: {\n    plugins: [\n      require('postcss-flexbugs-fixes'),\n      require('postcss-custom-properties'),\n      require('postcss-initial'),\n      require('postcss-page-break'),\n      require('postcss-font-variant'),\n      require('postcss-media-minmax'),\n      require('postcss-nesting'),\n      require('autoprefixer')({\n        flexbox: 'no-2009',\n      }),\n    ],\n    // 取决于生产环境，以及是否设置 `output.disableSourceMap`\n    sourceMap: enableSourceMap,\n  },\n};\n\n\nBuilder 默认集成 PostCSS，你可以通过 tools.postcss 对 postcss-loader 进行配置。\n\n\n# Object 类型\n\n当此值为 Object 类型时，与默认配置通过 Object.assign 合并。比如:\n\nexport default {\n  tools: {\n    postcss: {\n      // 由于使用 `Object.assign` 合并，因此默认的 postcssOptions 会被覆盖。\n      postcssOptions: {\n        plugins: [require('postcss-px-to-viewport')],\n      },\n    },\n  },\n};\n\n\n\n# Function 类型\n\n值为 Function 类型时，内部默认配置作为第一参数传入，可以直接修改配置对象不做返回，也可以返回一个对象作为最终结果；第二个参数为修改 postcss-loader 配置的工具函数集合。\n\n例如，需要在原有插件的基础上新增一个 PostCSS 插件，在 postcssOptions.plugins 数组中 push 一个新的插件即可：\n\nexport default {\n  tools: {\n    postcss: opts => {\n      opts.postcssOptions.plugins.push(require('postcss-px-to-viewport'));\n    },\n  },\n};\n\n\n需要给 PostCSS 插件传递参数时，可以通过函数参数的形式进行传入：\n\nexport default {\n  tools: {\n    postcss: opts => {\n      const viewportPlugin = require('postcss-px-to-viewport')({\n        viewportWidth: 375,\n      });\n      opts.postcssOptions.plugins.push(viewportPlugin);\n    },\n  },\n};\n\n\ntools.postcss 可以返回一个配置对象，并完全替换默认配置：\n\nexport default {\n  tools: {\n    postcss: () => {\n      return {\n        postcssOptions: {\n          plugins: [require('postcss-px-to-viewport')],\n        },\n      };\n    },\n  },\n};\n\n\n\n# 工具函数\n\n# addPlugins\n\n用于添加额外的 PostCSS 插件。\n\nexport default {\n  tools: {\n    postcss: (config, { addPlugins }) => {\n      // 添加一个插件\n      addPlugins(require('postcss-preset-env'));\n      // 批量添加插件\n      addPlugins([require('postcss-preset-env'), require('postcss-import')]);\n    },\n  },\n};\n\n\n\n# tools.pug\n\n * Type: true | Object | Function | undefined\n * Default: false\n\n配置 Pug 模板引擎。\n\n\n# Boolean 类型\n\nBuilder 默认不启用 Pug 模板引擎，你可以将 tools.pug 设置为 true 来启用它。\n\nexport default {\n  tools: {\n    pug: true,\n  },\n};\n\n\n启用后，你可以在 html.template 中指定使用 index.pug 作为模板文件。\n\n\n# Object 类型\n\n当 tools.terser 的值为 Object 类型时，可以配置 Pug 模板引擎的选项：\n\nexport default {\n  tools: {\n    pug: {\n      doctype: 'xml',\n    },\n  },\n};\n\n\n详细参数请查看 Pug API Reference。\n\n\n# Function 类型\n\n当 tools.pug 配置为 Function 类型时，默认配置作为第一个参数传入，可以直接修改配置对象，也可以返回一个值作为最终结果。\n\nexport default {\n  tools: {\n    pug(config) {\n      config.doctype = 'xml';\n    },\n  },\n};\n\n\n\n# tools.sass\n\n * Type: Object | Function\n * Default\n\n{\n  sourceMap: false,\n}\n\n\n你可以通过 tools.sass 修改 sass-loader 的配置。\n\n\n# Object 类型\n\n当 tools.sass 的值为 Object 类型时，会与默认配置通过 Object.assign 合并。\n\nexport default {\n  tools: {\n    sass: {\n      sourceMap: true,\n    },\n  },\n};\n\n\n\n# Function 类型\n\n当 tools.sass 为 Function 类型时，默认配置作为第一个参数传入，可以直接修改配置对象，也可以返回一个值作为最终结果，第二个参数提供了一些可以直接调用的工具函数：\n\nexport default {\n  tools: {\n    sass(config) {\n      // 修改 sourceMap 配置\n      config.additionalData = async (content, loaderContext) => {\n        // ...\n      };\n    },\n  },\n};\n\n\n\n# 工具函数\n\n# addExcludes\n\n用来指定 sass-loader 不编译哪些文件，例如：\n\nexport default {\n  tools: {\n    sass(config, { addExcludes }) {\n      addExcludes(/node_modules/);\n    },\n  },\n};\n\n\n\n# tools.styleLoader\n\n * Type: Object | Function\n * Default: undefined\n\n通过 tools.styleLoader 可以设置 style-loader 的配置项，默认的配置为一个空对象。\n\n值得注意的是，builder 默认不会开启 style-loader，如果配置为 Obejct/Function 类型，则会在开发环境开启 style-loader。在生产环境，我们仍然会使用 mini-css-extract-plugin 来提取 CSS。\n\n\n# Object 类型\n\n当此值为 Object 类型时，与默认配置通过 Object.assign 合并。比如：\n\nexport default {\n  tools: {\n    styleLoader: {\n      insert: 'head',\n    },\n  },\n};\n\n\n\n# Function 类型\n\n当此值为 Function 类型时，默认配置作为第一个参数传入，你可以直接修改配置对象，也可以返回一个对象作为最终配置。比如：\n\nexport default {\n  tools: {\n    styleLoader: config => {\n      config.insert = 'head';\n      return config;\n    },\n  },\n};\n\n\n\n# tools.styledComponents\n\n * Type: Object | Function\n * Default\n\n{\n  pure: true,\n  displayName: true,\n  // 在 SSR 构建中 isSSR 为 true\n  ssr: isSSR,\n  transpileTemplateLiterals: true,\n}\n\n\n对应 babel-plugin-styled-components 的配置。 值为 Object 类型时，利用 Object.assign 函数与默认配置合并。比如:\n\nexport default {\n  tools: {\n    styledComponents: {\n      pure: false,\n    },\n  },\n};\n\n\n值为 Function 类型时，第一个参数为默认配置，第二个参数提供了一些可以直接调用的工具函数：\n\nexport default {\n  tools: {\n    styledComponents(config) {\n      // 修改 pure 配置\n      config.pure = false;\n    },\n  },\n};\n\n\n\n# tools.terser\n\n * Type: Object | Function | undefined\n * Default:\n\nconst defaultTerserOptions = {\n  terserOptions: {\n    mangle: {\n      safari10: true,\n    },\n  },\n};\n\n\n在生产环境构建时，Builder 会通过 terser-webpack-plugin 对 JavaScript 代码进行压缩优化。可以通过 tools.terser 修改 terser-webpack-plugin 的配置。\n\n\n# Object 类型\n\n当 tools.terser 的值为 Object 类型时，会与默认配置通过 Object.assign 合并。\n\n例如通过 exclude 排除部分文件的压缩：\n\nexport default {\n  tools: {\n    terser: {\n      exclude: /\\/excludes/,\n    },\n  },\n};\n\n\n\n# Function 类型\n\n当 tools.terser 配置为 Function 类型时，默认配置作为第一个参数传入，可以直接修改配置对象，也可以返回一个值作为最终结果。\n\nexport default {\n  tools: {\n    terser: opts => {\n      opts.exclude = /\\/excludes/;\n    },\n  },\n};\n\n\n\n# tools.tsLoader\n\n * Type: Object | Function | undefined\n * Default: undefined\n\n项目中默认不开启 ts-loader，当 tools.tsLoader 不为 undefined 则表示开启 ts-loader，同时禁用 babel-loader 对 TypeScript 的编译。\n\n\n# Object 类型\n\n当此值为 Object 类型时，与默认配置通过 Object.assign 合并。\n\n默认配置如下:\n\n{\n  \"compilerOptions\": {\n    \"target\": \"es5\",\n    \"module\": \"ESNext\"\n  },\n  \"transpileOnly\": true,\n  \"allowTsInNodeModules\": true\n}\n\n\n你可以通过 tools.tsLoader 配置项来覆盖默认配置:\n\nexport default {\n  tools: {\n    tsLoader: {\n      allowTsInNodeModules: false,\n    },\n  },\n};\n\n\n\n# Function 类型\n\n当此值为 Function 类型时，默认配置作为第一参数传入，可以直接修改配置对象，也可以返回一个对象作为最终配置；第二个参数为修改 ts-loader 配置工具函数集合：\n\nexport default {\n  tools: {\n    tsLoader: opts => {\n      opts.allowTsInNodeModules = false;\n    },\n  },\n};\n\n\n\n# 工具函数\n\ntools.tsLoader 的值为 Function 类型时，第二个参数可用的工具函数如下：\n\n# addIncludes\n\n类型: (includes: string | RegExp | Array<string | RegExp>) => void\n\n默认情况下只会编译 src 目录下的业务代码，使用 addIncludes 可以指定 ts-loader 编译 node_modules 下的一些文件。比如:\n\nexport default {\n  tools: {\n    tsLoader: (config, { addIncludes }) => {\n      addIncludes([/node_modules\\/react/]);\n    },\n  },\n};\n\n\n# addExcludes\n\n类型: (excludes: string | RegExp | Array<string | RegExp>) => void\n\n和 addIncludes 相反，指定 ts-loader 编译时排除某些文件。\n\n例如不编译 src/example 目录下的文件：\n\nexport default {\n  tools: {\n    tsLoader: (config, { addExcludes }) => {\n      addExcludes([/src\\/example\\//]);\n    },\n  },\n};\n\n\n\n# tools.tsChecker\n\n * Type: boolean | Object | Function\n * Default: true\n\n默认情况下，Builder 会开启 fork-ts-checker-webpack-plugin 进行类型检查。\n\n你可以通过:\n\n * 配置为 true 以开启 fork-ts-checker-webpack-plugin 的类型检查。\n * 配置为 false 以关闭 fork-ts-checker-webpack-plugin 的类型检查。\n * 配置为 Object 或者 Function 修改默认配置；\n\n默认配置如下:\n\n> 大多数情况下你不需要修改 tools.tsChecker 默认配置。\n\n{\n  typescript: {\n    // avoid OOM issue\n    memoryLimit: 8192,\n    // use tsconfig of user project\n    configFile: tsconfigPath,\n    // use typescript of user project\n    typescriptPath: require.resolve('typescript'),\n  },\n  issue: {\n    exclude: [\n      { file: '**/*.(spec|test).ts' },\n      { file: '**/node_modules/**/*' },\n    ],\n  },\n  logger: {\n    log() {\n      // do nothing\n      // we only want to display error messages\n    },\n    error(message: string) {\n      console.error(message.replace(/ERROR/g, 'Type Error'));\n    },\n  },\n},\n\n\n\n# Object 类型\n\n当此值为 Object 类型时，与默认配置通过 Object.assign 合并。\n\n\n# Function 类型\n\n当此值为 Function 类型时，默认配置作为第一个参数传入，你可以直接修改配置对象，也可以返回一个对象作为最终配置。\n\n\n# tools.webpack\n\n * Type: Object | Function | undefined\n * Default: undefined\n\ntools.webpack 选项用于配置原生的 webpack。\n\n> tools.webpackChain 同样可以修改 webpack 配置，并且功能更加强大，建议优先使用 tools.webpackChain。\n\n\n# Object 类型\n\n你可以配置为一个对象，这个对象将会和原始的 webpack 配置通过 webpack-merge 进行合并。比如：\n\nexport default {\n  tools: {\n    webpack: {\n      resolve: {\n        alias: {\n          '@util': 'src/util',\n        },\n      },\n    },\n  },\n};\n\n\n\n# Function 类型\n\n你也可以配置为一个函数，这个函数接收一个参数，即原始的 webpack 配置，你可以对这个配置进行修改，然后返回一个新的配置。比如：\n\nexport default {\n  tools: {\n    webpack: config => {\n      config.resolve.alias['@util'] = 'src/util';\n      return config;\n    },\n  },\n};\n\n\n这个函数的第二个参数是一个对象，包含了一些工具集合的信息。详情如下：\n\n\n# 工具集合\n\n# env\n\n * Type: 'development' | 'production' | 'test'\n\n通过 env 参数可以判断当前环境为 development、production 还是 test。比如：\n\nexport default {\n  tools: {\n    webpack: (config, { env }) => {\n      if (env === 'development') {\n        config.devtool = 'cheap-module-eval-source-map';\n      }\n      return config;\n    },\n  },\n};\n\n\n# isProd\n\n * Type: boolean\n\n通过 isProd 参数可以判断当前环境是否为 production。比如：\n\nexport default {\n  tools: {\n    webpack: (config, { isProd }) => {\n      if (isProd) {\n        config.devtool = 'source-map';\n      }\n      return config;\n    },\n  },\n};\n\n\n# target\n\n * Type: 'web' | 'node' | 'modern-web'\n\n通过 target 参数可以判断当前构建的目标运行时环境。比如：\n\nexport default {\n  tools: {\n    webpack: (config, { target }) => {\n      if (target === 'node') {\n        // ...\n      }\n      return config;\n    },\n  },\n};\n\n\n# webpack\n\n * Type: Object\n\n通过这个参数你可以拿到 webpack 实例。比如：\n\nexport default {\n  tools: {\n    webpack: (config, { webpack }) => {\n      config.plugins.push(new webpack.ProgressPlugin());\n      return config;\n    },\n  },\n};\n\n\n\n# tools.webpackChain\n\n * Type: Function | undefined\n * Default: undefined\n\n你可以通过 tools.webpackChain 来修改默认的 webpack 配置，值为 Function 类型，接收两个参数：\n\n * 第一个参数为 webpack-chain 对象实例，你可以通过这个实例来修改默认的 webpack 配置。\n * 第二个参数为一个工具集合，包括env、isProd、CHAIN_ID 等。\n\n相比于 tools.webpack，webpack-chain 不仅支持链式调用，而且能够基于别名来定位到内置的 Rule 或 Plugin，从而实现精准的配置修改。我们推荐使用 tools.webpackChain 来代替 tools.webpack。\n\n> tools.webpackChain 的执行时机早于 tools.webpack，因此会被 tools.webpack 中的修改所覆盖。\n\n\n# 工具集合\n\n# env\n\n * Type: 'development' | 'production' | 'test'\n\n通过 env 参数可以判断当前环境为 development、production 还是 test。比如：\n\nexport default {\n  tools: {\n    webpack: (config, { env }) => {\n      if (env === 'development') {\n        config.devtool = 'cheap-module-eval-source-map';\n      }\n      return config;\n    },\n  },\n};\n\n\n# isProd\n\n * Type: boolean\n\n通过 isProd 参数可以判断当前环境是否为 production。比如：\n\nexport default {\n  tools: {\n    webpack: (config, { isProd }) => {\n      if (isProd) {\n        config.devtool = 'source-map';\n      }\n      return config;\n    },\n  },\n};\n\n\n# target\n\n * Type: 'web' | 'node' | 'modern-web'\n\n通过 target 参数可以判断当前构建的目标运行时环境。比如：\n\nexport default {\n  tools: {\n    webpack: (config, { target }) => {\n      if (target === 'node') {\n        // ...\n      }\n      return config;\n    },\n  },\n};\n\n\n# webpack\n\n * Type: Object\n\n通过这个参数你可以拿到 webpack 实例。比如：\n\nexport default {\n  tools: {\n    webpack: (config, { webpack }) => {\n      config.plugins.push(new webpack.ProgressPlugin());\n      return config;\n    },\n  },\n};\n\n\n# CHAIN_ID\n\nbuilder 中预先定义了一些常用的 Chain ID，你可以通过这些 ID 来定位到内置的 Rule 或 Plugin。\n\n# CHAIN_ID.RULE\n\nID           描述\nRULE.MJS     处理 mjs 的规则\nRULE.JS      处理 js 的规则\nRULE.TS      处理 ts 的规则\nRULE.CSS     处理 css 的规则\nRULE.LESS    处理 less 的规则\nRULE.SASS    处理 sass 的规则\nRULE.PUG     处理 pug 的规则\nRULE.TOML    处理 toml 的规则\nRULE.YAML    处理 yaml 的规则\nRULE.FONT    处理字体的规则\nRULE.IMAGE   处理图片的规则\nRULE.MEDIA   处理媒体资源的规则\n\n\n# CHAIN_ID.ONE_OF\n\n通过 ONE_OF.XXX 可以匹配到规则数组中的某一类规则。\n\nID                  描述\nONE_OF.SVG          处理 SVG 的规则，在 data URI 和单独文件之间自动选择\nONE_OF.SVG_URL      处理 SVG 的规则，输出为单独文件\nONE_OF.SVG_INLINE   处理 SVG 的规则，作为 data URI 内联到 bundle 中\nONE_OF.SVG_ASSETS   处理 SVG 的规则，在 data URI 和单独文件之间自动选择\n\n\n# CHAIN_ID.USE\n\n通过 USE.XXX 可以匹配到对应的 loader。\n\nID                     描述\nUSE.TS                 对应 ts-loader\nUSE.CSS                对应 css-loader\nUSE.LESS               对应 less-loader\nUSE.SASS               对应 sass-loader\nUSE.PUG                对应 pug-loader\nUSE.TOML               对应 toml-loader\nUSE.YAML               对应 yaml-loader\nUSE.FILE               对应 file-loader\nUSE.URL                对应 url-loader\nUSE.SVGR               对应 @svgr/webpack\nUSE.BABEL              对应 babel-loader\nUSE.STYLE              对应 style-loader\nUSE.POSTCSS            对应 postcss-loader\nUSE.MARKDOWN           对应 markdown-loader\nUSE.CSS_MODULES_TS     对应 css-modules-typescript-loader\nUSE.MINI_CSS_EXTRACT   对应 mini-css-extract-plugin.loader\n\n\n# CHAIN_ID.PLUGIN\n\n通过 PLUGIN.XXX 可以匹配到对应的 plugin。\n\nID                             描述\nPLUGIN.HMR                     对应 HotModuleReplacementPlugin\nPLUGIN.COPY                    对应 CopyWebpackPlugin\nPLUGIN.HTML                    对应 HtmlWebpackPlugin，使用时需要拼接 entry\n                               名称：${PLUGIN.HTML}-${entryName}\nPLUGIN.DEFINE                  对应 DefinePlugin\nPLUGIN.IGNORE                  对应 IgnorePlugin\nPLUGIN.BANNER                  对应 BannerPlugin\nPLUGIN.PROGRESS                对应 Webpackbar\nPLUGIN.APP_ICON                对应 AppIconPlugin\nPLUGIN.LOADABLE                对应 LoadableWebpackPlugin\nPLUGIN.MANIFEST                对应 WebpackManifestPlugin\nPLUGIN.TS_CHECKER              对应 ForkTsCheckerWebpackPlugin\nPLUGIN.INLINE_HTML             对应 InlineChunkHtmlPlugin\nPLUGIN.BUNDLE_ANALYZER         对应 WebpackBundleAnalyzer\nPLUGIN.BOTTOM_TEMPLATE         对应 BottomTemplatePlugin\nPLUGIN.MINI_CSS_EXTRACT        对应 MiniCssExtractPlugin\nPLUGIN.REACT_FAST_REFRESH      对应 ReactFastRefreshPlugin\nPLUGIN.NODE_POLYFILL_PROVIDE   对应处理 node polyfill 的 ProvidePlugin\nPLUGIN.INSPECTOR               对应 @modern-js/inspector-webpack-plugin\nPLUGIN.SUBRESOURCE_INTEGRITY   对应 webpack-subresource-integrity\nPLUGIN.ASSETS_RETRY            对应 Builder 中的 webpack 静态资源重试插件 WebpackAssetsRetryPlugin\nAUTO_SET_ROOT_SIZE             对应 Builder 中的自动设置根字体大小插件 AutoSetRootSizePlugin\n\n\n# CHAIN_ID.MINIMIZER\n\n通过 MINIMIZER.XXX 可以匹配到对应的压缩工具。\n\nID                  描述\nMINIMIZER.JS        对应 TerserWebpackPlugin\nMINIMIZER.CSS       对应 CssMinimizerWebpackPlugin\nMINIMIZER.ESBUILD   对应 ESBuildPlugin\n\n\n# 常用 WebpackChain 使用示例\n\n以下是一些常见的配置示例，完整的 webpack-chain API 请见 webpack-chain 文档。\n\n# 新增/修改/删除 loader\n\nexport default {\n  tools: {\n    webpackChain: chain => {\n      // 新增 loader\n      chain.module\n        .rule('md')\n        .test(/\\.md$/)\n        .use('md-loader')\n        .loader('md-loader');\n      // 修改 loader\n      chain.module\n        .rule(CHAIN_ID.RULE.JS)\n        .use(CHAIN_ID.USE.BABEL)\n        .tap(options => {\n          options.plugins.push('babel-plugin-xxx');\n          return options;\n        });\n      // 删除 loader\n      chain.module.rule(CHAIN_ID.RULE.JS).uses.delete(CHAIN_ID.USE.BABEL);\n    },\n  },\n};\n\n\n# 新增/修改/删除 plugin\n\nexport default {\n  tools: {\n    webpackChain: chain => {\n      // 新增插件\n      chain.plugin('define').use(webpack.DefinePlugin, [\n        {\n          'process.env': {\n            NODE_ENV: JSON.stringify(process.env.NODE_ENV),\n          },\n        },\n      ]);\n      // 修改插件\n      chain.plugin(CHAIN_ID.PLUGIN.HMR).tap(options => {\n        options[0].fullBuildTimeout = 200;\n        return options;\n      });\n      // 删除插件\n      chain.plugins.delete(CHAIN_ID.PLUGIN.HMR);\n    },\n  },\n};\n",normalizedContent:"# tools config\n\n本章节描述了 builder 中与底层工具有关的配置。\n\n\n# tools.autoprefixer\n\n * type: object | function\n * default\n\n{\n  flexbox: 'no-2009',\n  // browserslist 取决于项目中的 browserslist 配置\n  // 以及 `output.overridebrowserslist`(优先级更高) 配置\n  overridebrowserslist: browserslist,\n}\n\n\n通过 tools.autoprefixer 可以修改 autoprefixer 的配置。\n\n\n# object 类型\n\n当 tools.autoprefixer 的值为 object 类型时，会与默认配置通过 object.assign 合并。比如：\n\nexport default {\n  tools: {\n    autoprefixer: {\n      flexbox: 'no-2009',\n    },\n  },\n};\n\n\n\n# function 类型\n\n当 tools.autoprefixer 为 function 类型时，默认配置作为第一个参数传入，可以直接修改配置对象，也可以返回一个值作为最终结果。比如：\n\nexport default {\n  tools: {\n    autoprefixer(config) {\n      // 修改 flexbox 的配置\n      config.flexbox = 'no-2009';\n    },\n  },\n};\n\n\n\n# tools.babel\n\n * type: object | function\n * default: undefined\n\n通过 tools.babel 可以修改 babel-loader 的配置项。\n\n\n# object 类型\n\n当 tools.babel 的值为 object 类型时，会与默认配置通过 object.assign 合并。\n\nexport default {\n  tools: {\n    babel: {\n      plugins: [\n        [\n          'babel-plugin-import',\n          {\n            libraryname: 'xxx-components',\n            librarydirectory: 'es',\n            style: true,\n          },\n        ],\n      ],\n    },\n  },\n};\n\n\n\n# function 类型\n\n当 tools.babel 为 function 类型时，默认配置作为第一个参数传入，可以直接修改配置对象，也可以返回一个值作为最终结果，第二个参数提供了一些可以直接调用的工具函数：\n\nexport default {\n  tools: {\n    babel(config) {\n      // 添加一个插件，比如配置某个组件库的按需引入\n      // 目前内置了 antd 的按需引入规则\n      config.plugins.push([\n        'babel-plugin-import',\n        {\n          libraryname: 'xxx-components',\n          librarydirectory: 'es',\n          style: true,\n        },\n      ]);\n    },\n  },\n};\n\n\n\n# 工具函数\n\ntools.babel 为 function 类型时，第二个参数可用的工具函数如下:\n\n# addplugins\n\n添加 babel 插件。\n\nexport default {\n  tools: {\n    babel(config, { addplugins }) {\n      addplugins([\n        [\n          'babel-plugin-import',\n          {\n            libraryname: 'xxx-components',\n            librarydirectory: 'es',\n            style: true,\n          },\n        ],\n      ]);\n    },\n  },\n};\n\n\n# addpresets\n\n添加 babel 预设配置。(大多数情况下不需要增加预设)\n\nexport default {\n  tools: {\n    babel(config, { addpresets }) {\n      addpresets(['@babel/preset-env']);\n    },\n  },\n};\n\n\n# removeplugins\n\n移除 babel 插件，传入需要移除的插件名称即可。\n\nexport default {\n  tools: {\n    babel(config, { removeplugins }) {\n      removeplugins('babel-plugin-import');\n    },\n  },\n};\n\n\n# removepresets\n\n移除 babel 预设配置，传入需要移除的预设名称即可。\n\nexport default {\n  tools: {\n    babel(config, { removepresets }) {\n      removepresets('@babel/preset-env');\n    },\n  },\n};\n\n\n# addincludes\n\n默认情况下 babel 只会编译 src 目录下的业务代码，使用 addincludes 你可以指定 babel 编译 node_modules 下的一些文件。比如:\n\nexport default {\n  tools: {\n    babel(config, { addincludes }) {\n      addincludes('node_modules/xxx-components');\n    },\n  },\n};\n\n\n# addexcludes\n\n和 addincludes 相反，指定 babel 编译时排除某些文件。\n\n比如不编译 src/example 目录下的文件:\n\nexport default {\n  tools: {\n    babel(config, { addexcludes }) {\n      addexcludes('src/example');\n    },\n  },\n};\n\n\n# modifypresetenvoptions\n\n修改 @babel/preset-env 的配置项，传入的配置会与默认配置进行浅层合并，比如:\n\nexport default {\n  tools: {\n    babel(config, { modifypresetenvoptions }) {\n      modifypresetenvoptions({\n        targets: {\n          browsers: ['last 2 versions'],\n        },\n      });\n    },\n  },\n};\n\n\n# modifypresetreactoptions\n\n修改 @babel/preset-react 的配置项，传入的配置会与默认配置进行浅层合并，比如:\n\nexport default {\n  tools: {\n    babel(config, { modifypresetreactoptions }) {\n      modifypresetreactoptions({\n        pragma: 'react.createelement',\n      });\n    },\n  },\n};\n\n\n\n# tools.cssextract\n\n * type: false | object | function\n * default\n\n{\n  // loader 配置\n  loaderoptions: {},\n  // plugin 配置\n  pluginoptions: {\n    // csspath 默认为 static/css, cssfilename 默认为 [name].[contenthash:8].css\n    filename: `${csspath}/${cssfilename}`,\n    chunkfilename: `${csspath}/async/${cssfilename}`,\n    ignoreorder: true,\n  }\n}\n\n\n通过 tools.cssextract 可以更改 mini-css-extract-plugin 的配置。\n\n\n# object 类型\n\n当此值为 object 类型时，与默认配置通过 object.assign 合并。比如：\n\nexport default {\n  tools: {\n    cssextract: {\n      pluginoptions: {\n        filename: 'static/css/[name].[contenthash:8].css',\n      },\n    },\n  },\n};\n\n\n\n# function 类型\n\n当此值为 function 类型时，默认配置作为第一个参数传入，你可以直接修改配置对象，也可以返回一个对象作为最终配置。比如：\n\nexport default {\n  tools: {\n    cssextract: config => {\n      config.pluginoptions.filename = 'static/css/[name].[contenthash:8].css';\n      return config;\n    },\n  },\n};\n\n\n更多配置细节可参考 mini-css-extract-plugin。\n\n\n# boolean 类型\n\n将 tools.cssextract 配置为 false，可以禁用默认的 mini-css-extract-plugin 插件。\n\nexport default {\n  tools: {\n    cssextract: false,\n  },\n}\n\n\n\n# tools.cssloader\n\n * type: object | function\n * default: undefined\n\n通过 tools.cssloader 可以修改 css-loader 的配置项。默认配置如下:\n\n{\n  importloaders: 1,\n  modules: {\n    auto: true,\n    exportlocalsconvention: 'camelcase',\n    // isprod 表示生产环境构建\n    localidentname: isprod\n      ? '[hash:base64]'\n      : '[path][name]__[local]--[hash:base64:5]',\n    // isserver 表示 ssr 构建\n    exportonlylocals: isserver,\n  },\n  // 默认在生产环境中的 enablesourcemap 为 true\n  sourcemap: enablesourcemap,\n}\n\n\n\n# object 类型\n\n当此值为 object 类型时，与默认配置通过 object.assign 合并。比如：\n\nexport default {\n  tools: {\n    cssloader: {\n      modules: {\n        localidentname: '[path][name]__[local]--[hash:base64:5]',\n      },\n    },\n  },\n};\n\n\n\n# function 类型\n\n当此值为 function 类型时，默认配置作为第一个参数传入，你可以直接修改配置对象，也可以返回一个对象作为最终配置。比如：\n\nexport default {\n  tools: {\n    cssloader: config => {\n      config.modules.localidentname = '[path][name]__[local]--[hash:base64:5]';\n      return config;\n    },\n  },\n};\n\n\n\n# tools.devserver\n\n * type: object\n * default: {}\n\n通过 tools.devserver 可以修改开发环境服务器的配置。\n\n\n# 选项\n\n# after\n\n * type: array\n * default: []\n\n添加自定义中间件，在所有开发环境中间件后执行。\n\nexport default {\n  tools: {\n    devserver: {\n      after: [\n        async (req, res, next) => {\n          console.log('after dev middleware');\n          next();\n        },\n      ],\n    },\n  },\n};\n\n\n# before\n\n * type: array\n * default: []\n\n添加自定义中间件，在所有开发环境中间件前执行。\n\nexport default {\n  tools: {\n    devserver: {\n      before: [\n        async (req, res, next) => {\n          console.log('before dev middleware');\n          next();\n        },\n      ],\n    },\n  },\n};\n\n\n# client\n\n * type:\n\n{\n    /** 事件流路径 */\n    path?: string;\n    /** 指定监听请求的端口号 */\n    port?: string;\n    /** 指定要使用的 host */\n    host?: string;\n}\n\n\n * default:\n\n{\n    path: '/webpack-hmr',\n    port: '8080',\n    host: networkaddress || 'localhost',\n}\n\n\n配置 hmr 客户端相关功能。\n\n# devmiddleware\n\n * type:\n\n{\n  writetodisk: boolean | ((filename: string) => boolean);\n}\n\n\n * default:\n\n{\n  writetodisk: (file: string) => !file.includes('.hot-update.') && !file.endswith('.map'),\n}\n\n\ndevmiddleware 配置项。当前配置是 webpack-dev-middleware 配置项的子集.\n\n# headers\n\n * type: record<string, string>\n * default: undefined\n\n设置自定义响应头。\n\nexport default {\n  tools: {\n    devserver: {\n      headers: {\n        'x-custom-foo': 'bar',\n      },\n    },\n  },\n};\n\n\n# historyapifallback\n\n * type: boolean | connecthistoryapifallbackoptions\n * default: false\n\n在需要对一些 404 响应或其他请求提供替代页面的场景，可通过 devserver.historyapifallback 进行设置：\n\nexport default {\n  tools: {\n    devserver: {\n      historyapifallback: true,\n    },\n  },\n};\n\n\n更多选项和详细信息可参考 connect-history-api-fallback 文档。\n\n# hot\n\n * type: boolean\n * default: true\n\n是否开启 hot module replacement 热更新能力。\n\n# https\n\n * type: boolean | { key: string; cert: string }\n * default: false\n\n默认情况下，devserver 会启用 http 服务器。通过设置 devserver.https 为 true 将开启对 https 的支持，同时会禁用 http 服务器。\n\n你也可以手动传入 https 服务器所需要的证书和对应的私钥：\n\nexport default {\n  tools: {\n    devserver: {\n      https: {\n        key: fs.readfilesync('certificates/private.pem'),\n        cert: fs.readfilesync('certificates/public.pem'),\n      },\n    },\n  },\n};\n\n\n# livereload\n\n * type: boolean\n * default: true\n\n默认情况下，当监听到文件变化时，devserver 将会刷新页面（为使 livereload 能够生效，devserver.hot 配置项应当禁用）。通过设置 devserver.livereload 为 false 可以关闭该行为。\n\n# setupmiddlewares\n\n * type:\n\narray<\n  (\n    middlewares: {\n      unshift: (...handlers: requesthandler[]) => void;\n      push: (...handlers: requesthandler[]) => void;\n    },\n    server: {\n      sockwrite: (\n        type: string,\n        data?: string | boolean | record<string, any>,\n      ) => void;\n    },\n  ) => void\n>;\n\n\n * default: undefined\n\n提供执行自定义函数和应用自定义中间件的能力。\n\n几种不同中间件之间的执行顺序是: devserver.before => unshift => 内置中间件 => push => devserver.after。\n\nexport default {\n  tools: {\n    devserver: {\n      setupmiddlewares: [\n        (middlewares, server) => {\n          middlewares.unshift((req, res, next) => {\n            next();\n          });\n\n          middlewares.push((req, res, next) => {\n            next();\n          });\n        },\n      ],\n    },\n  },\n};\n\n\n一些特殊场景需求可能需要使用服务器 api：\n\n * sockwrite。允许向 hmr 客户端传递一些消息，hmr 客户端将根据接收到的消息类型进行不同的处理。如果你发送一个 \"content-changed \" 的消息，页面将会重新加载。\n\nexport default {\n  tools: {\n    devserver: {\n      setupmiddlewares: [\n        (middlewares, server) => {\n          // 添加自定义 watcher 并在文件更新时触发页面刷新\n          watcher.on('change', changed => {\n            server.sockwrite('content-changed');\n          });\n        },\n      ],\n    },\n  },\n};\n\n\n# proxy\n\n * type: record<string, string> | record<string, proxydetail>\n * default: undefined\n\n代理请求到指定的服务上。\n\nexport default {\n  tools: {\n    devserver: {\n      proxy: {\n        '/api': 'http://localhost:3000',\n      },\n    },\n  },\n};\n\n\n此时，/api/users 请求将会代理到 http://localhost:3000/api/users。\n\n如果你不想传递 /api，可以通过 pathrewrite 重写请求路径：\n\nexport default {\n  tools: {\n    devserver: {\n      proxy: {\n        '/api': {\n          target: 'http://localhost:3000',\n          pathrewrite: { '^/api': '' },\n        },\n      },\n    },\n  },\n};\n\n\ndevserver proxy 基于 http-proxy-middleware 实现。你可以使用 http-proxy-middleware 的所有配置项，具体可以查看文档。\n\ndevserver proxy 完整类型定义为：\n\nimport type { options as httpproxyoptions } from 'http-proxy-middleware';\n\ntype proxydetail = httpproxyoptions & {\n  bypass?: (\n    req: incomingmessage,\n    res: serverresponse,\n    proxyoptions: proxyoptions,\n  ) => string | undefined | null | false;\n  context?: string | string[];\n};\n\ntype proxyoptions =\n  | record<string, string>\n  | record<string, proxydetail>\n  | proxydetail[]\n  | proxydetail;\n\n\n除了 http-proxy-middleware 的选项外，还支持 bypass 和 context 两个配置项：\n\n * bypass：根据函数的返回值绕过代理。\n   * 返回 null 或 undefined 会继续用代理处理请求。\n   * 返回 false 会返回 404 错误。\n   * 返回一个具体的服务路径，将会使用此路径替代原请求路径。\n * context：如果你想代理多个特定的路径到同一个目标，你可以使用 context 配置项。\n\n// 自定义 bypass 方法\nexport default {\n  tools: {\n    devserver: {\n      proxy: {\n        '/api': {\n          target: 'http://localhost:3000',\n          bypass: function (req, res, proxyoptions) {\n            if (req.headers.accept.indexof('html') !== -1) {\n              console.log('skipping proxy for browser request.');\n              return '/index.html';\n            }\n          },\n        },\n      },\n    },\n  },\n};\n\n\n// 代理多个路径到同一个目标\nexport default {\n  tools: {\n    devserver: {\n      proxy: [\n        {\n          context: ['/auth', '/api'],\n          target: 'http://localhost:3000',\n        },\n      ],\n    },\n  },\n};\n\n\n# watch\n\n * type: boolean\n * default: true\n\n是否监听 mock/、server/、api/ 等目录的文件变化。\n\n\n# tools.htmlplugin\n\n * type: false | object | function\n * default:\n\nconst defaulthtmlpluginoptions = {\n  inject, // 对应 html.inject 配置项\n  favicon, // 对应 html.favicon 配置项\n  filename, // 基于 output.distpath 和 entryname 生成\n  template, // 默认为内置的 html 模板路径\n  templateparameters, // 对应 html.templateparameters 配置项\n  chunks: [entryname],\n  minify: {\n    removecomments: true,\n    useshortdoctype: true,\n    keepclosingslash: true,\n    collapsewhitespace: true,\n    removeredundantattributes: true,\n    removescripttypeattributes: true,\n    removestylelinktypeattributes: true,\n  },\n};\n\n\n通过 tools.htmlplugin 可以修改 html-webpack-plugin 的配置项。\n\n\n# object 类型\n\n当 tools.htmlplugin 的值为 object 类型时，会与默认配置通过 object.assign 合并。\n\nexport default {\n  tools: {\n    htmlplugin: {\n      scriptloading: 'blocking',\n    },\n  },\n};\n\n\n\n# function 类型\n\n当 tools.htmlplugin 为 function 类型时：\n\n * 第一个参数是默认配置的对象，可以直接修改该对象。\n * 第二个参数是也是一个对象，包含了 entry 的名称和 entry 的值。\n * 函数可以 return 一个新的对象作为最终的配置。\n\nexport default {\n  tools: {\n    htmlplugin(config, { entryname, entryvalue }) {\n      if (entryname === 'main') {\n        config.scriptloading = 'blocking';\n      }\n    },\n  },\n};\n\n\n\n# boolean 类型\n\n将 tools.htmlplugin 配置为 false，可以禁用默认的 html-webpack-plugin 插件。\n\nexport default {\n  tools: {\n    htmlplugin: false,\n  },\n};\n\n\n\n# tools.inspector\n\n * type: object | function | undefined\n * default: undefined\n\n你可以通过 tools.inspector 开启或者配置 webpack 调试工具 webpack-inspector。\n\n当配置不为 undefined 时，则表示开启了 webpack-inspector，此时 tools.inspector 的类型可以为 object 或者 function。\n\n\n# object 类型\n\n当 tools.inspector 的值为 object 类型时，会与默认配置通过 object.assign 合并。比如：\n\nexport default {\n  tools: {\n    inspector: {\n      // 默认端口为 3333\n      port: 3334,\n    },\n  },\n};\n\n\n\n# function 类型\n\n当 tools.inspector 为 function 类型时，默认配置作为第一个参数传入，可以直接修改配置对象，也可以返回一个值作为最终结果。比如：\n\nexport default {\n  tools: {\n    inspector(config) {\n      // 修改端口号\n      config.port = 3333;\n    },\n  },\n};\n\n\n\n# tools.less\n\n * type: object | function\n * default\n\n{\n  lessoptions: {\n    javascriptenabled: true\n  },\n  sourcemap: false,\n}\n\n\n你可以通过 tools.less 修改 less-loader 的配置。\n\n\n# object 类型\n\n当 tools.less 的值为 object 类型时，会与默认配置通过 object.assign 合并。\n\nexport default {\n  tools: {\n    less: {\n      lessoptions: {\n        javascriptenabled: false,\n      },\n    },\n  },\n};\n\n\n\n# function 类型\n\n当 tools.less 为 function 类型时，默认配置作为第一个参数传入，可以直接修改配置对象，也可以返回一个值作为最终结果，第二个参数提供了一些可以直接调用的工具函数：\n\nexport default {\n  tools: {\n    less(config) {\n      // 修改 lessoptions 配置\n      config.lessoptions = {\n        javascriptenabled: false,\n      };\n    },\n  },\n};\n\n\n\n# 工具函数\n\n# addexcludes\n\n用来指定 less-loader 不编译哪些文件，例如：\n\nexport default {\n  tools: {\n    less(config, { addexcludes }) {\n      addexcludes(/node_modules/);\n    },\n  },\n};\n\n\n\n# tools.minifycss\n\n * type: object | function | undefined\n * default: {}\n\n在生产环境构建时，builder 会通过 css-minimizer-webpack-plugin 对 css 代码进行压缩优化。可以通过 tools.minifycss 修改 css-minimizer-webpack-plugin 的配置。\n\n\n# object 类型\n\n当 tools.minifycss 的值为 object 类型时，会与默认配置通过 object.assign 合并。\n\n例如下面修改 cssnano 的 preset 配置：\n\nexport default {\n  tools: {\n    minifycss: {\n      minimizeroptions: {\n        preset: require.resolve('cssnano-preset-simple'),\n      },\n    },\n  },\n};\n\n\n\n# function 类型\n\n当 tools.minifycss 配置为 function 类型时，默认配置作为第一个参数传入，可以直接修改配置对象，也可以返回一个值作为最终结果。\n\nexport default {\n   tools: {\n    minifycss: options => {\n      options.minimizeroptions = {\n        preset: require.resolve('cssnano-preset-simple'),\n      },\n    }\n  }\n};\n\n\n\n# tools.postcss\n\n * type: object | function\n * default:\n\nconst defaultoptions = {\n  postcssoptions: {\n    plugins: [\n      require('postcss-flexbugs-fixes'),\n      require('postcss-custom-properties'),\n      require('postcss-initial'),\n      require('postcss-page-break'),\n      require('postcss-font-variant'),\n      require('postcss-media-minmax'),\n      require('postcss-nesting'),\n      require('autoprefixer')({\n        flexbox: 'no-2009',\n      }),\n    ],\n    // 取决于生产环境，以及是否设置 `output.disablesourcemap`\n    sourcemap: enablesourcemap,\n  },\n};\n\n\nbuilder 默认集成 postcss，你可以通过 tools.postcss 对 postcss-loader 进行配置。\n\n\n# object 类型\n\n当此值为 object 类型时，与默认配置通过 object.assign 合并。比如:\n\nexport default {\n  tools: {\n    postcss: {\n      // 由于使用 `object.assign` 合并，因此默认的 postcssoptions 会被覆盖。\n      postcssoptions: {\n        plugins: [require('postcss-px-to-viewport')],\n      },\n    },\n  },\n};\n\n\n\n# function 类型\n\n值为 function 类型时，内部默认配置作为第一参数传入，可以直接修改配置对象不做返回，也可以返回一个对象作为最终结果；第二个参数为修改 postcss-loader 配置的工具函数集合。\n\n例如，需要在原有插件的基础上新增一个 postcss 插件，在 postcssoptions.plugins 数组中 push 一个新的插件即可：\n\nexport default {\n  tools: {\n    postcss: opts => {\n      opts.postcssoptions.plugins.push(require('postcss-px-to-viewport'));\n    },\n  },\n};\n\n\n需要给 postcss 插件传递参数时，可以通过函数参数的形式进行传入：\n\nexport default {\n  tools: {\n    postcss: opts => {\n      const viewportplugin = require('postcss-px-to-viewport')({\n        viewportwidth: 375,\n      });\n      opts.postcssoptions.plugins.push(viewportplugin);\n    },\n  },\n};\n\n\ntools.postcss 可以返回一个配置对象，并完全替换默认配置：\n\nexport default {\n  tools: {\n    postcss: () => {\n      return {\n        postcssoptions: {\n          plugins: [require('postcss-px-to-viewport')],\n        },\n      };\n    },\n  },\n};\n\n\n\n# 工具函数\n\n# addplugins\n\n用于添加额外的 postcss 插件。\n\nexport default {\n  tools: {\n    postcss: (config, { addplugins }) => {\n      // 添加一个插件\n      addplugins(require('postcss-preset-env'));\n      // 批量添加插件\n      addplugins([require('postcss-preset-env'), require('postcss-import')]);\n    },\n  },\n};\n\n\n\n# tools.pug\n\n * type: true | object | function | undefined\n * default: false\n\n配置 pug 模板引擎。\n\n\n# boolean 类型\n\nbuilder 默认不启用 pug 模板引擎，你可以将 tools.pug 设置为 true 来启用它。\n\nexport default {\n  tools: {\n    pug: true,\n  },\n};\n\n\n启用后，你可以在 html.template 中指定使用 index.pug 作为模板文件。\n\n\n# object 类型\n\n当 tools.terser 的值为 object 类型时，可以配置 pug 模板引擎的选项：\n\nexport default {\n  tools: {\n    pug: {\n      doctype: 'xml',\n    },\n  },\n};\n\n\n详细参数请查看 pug api reference。\n\n\n# function 类型\n\n当 tools.pug 配置为 function 类型时，默认配置作为第一个参数传入，可以直接修改配置对象，也可以返回一个值作为最终结果。\n\nexport default {\n  tools: {\n    pug(config) {\n      config.doctype = 'xml';\n    },\n  },\n};\n\n\n\n# tools.sass\n\n * type: object | function\n * default\n\n{\n  sourcemap: false,\n}\n\n\n你可以通过 tools.sass 修改 sass-loader 的配置。\n\n\n# object 类型\n\n当 tools.sass 的值为 object 类型时，会与默认配置通过 object.assign 合并。\n\nexport default {\n  tools: {\n    sass: {\n      sourcemap: true,\n    },\n  },\n};\n\n\n\n# function 类型\n\n当 tools.sass 为 function 类型时，默认配置作为第一个参数传入，可以直接修改配置对象，也可以返回一个值作为最终结果，第二个参数提供了一些可以直接调用的工具函数：\n\nexport default {\n  tools: {\n    sass(config) {\n      // 修改 sourcemap 配置\n      config.additionaldata = async (content, loadercontext) => {\n        // ...\n      };\n    },\n  },\n};\n\n\n\n# 工具函数\n\n# addexcludes\n\n用来指定 sass-loader 不编译哪些文件，例如：\n\nexport default {\n  tools: {\n    sass(config, { addexcludes }) {\n      addexcludes(/node_modules/);\n    },\n  },\n};\n\n\n\n# tools.styleloader\n\n * type: object | function\n * default: undefined\n\n通过 tools.styleloader 可以设置 style-loader 的配置项，默认的配置为一个空对象。\n\n值得注意的是，builder 默认不会开启 style-loader，如果配置为 obejct/function 类型，则会在开发环境开启 style-loader。在生产环境，我们仍然会使用 mini-css-extract-plugin 来提取 css。\n\n\n# object 类型\n\n当此值为 object 类型时，与默认配置通过 object.assign 合并。比如：\n\nexport default {\n  tools: {\n    styleloader: {\n      insert: 'head',\n    },\n  },\n};\n\n\n\n# function 类型\n\n当此值为 function 类型时，默认配置作为第一个参数传入，你可以直接修改配置对象，也可以返回一个对象作为最终配置。比如：\n\nexport default {\n  tools: {\n    styleloader: config => {\n      config.insert = 'head';\n      return config;\n    },\n  },\n};\n\n\n\n# tools.styledcomponents\n\n * type: object | function\n * default\n\n{\n  pure: true,\n  displayname: true,\n  // 在 ssr 构建中 isssr 为 true\n  ssr: isssr,\n  transpiletemplateliterals: true,\n}\n\n\n对应 babel-plugin-styled-components 的配置。 值为 object 类型时，利用 object.assign 函数与默认配置合并。比如:\n\nexport default {\n  tools: {\n    styledcomponents: {\n      pure: false,\n    },\n  },\n};\n\n\n值为 function 类型时，第一个参数为默认配置，第二个参数提供了一些可以直接调用的工具函数：\n\nexport default {\n  tools: {\n    styledcomponents(config) {\n      // 修改 pure 配置\n      config.pure = false;\n    },\n  },\n};\n\n\n\n# tools.terser\n\n * type: object | function | undefined\n * default:\n\nconst defaultterseroptions = {\n  terseroptions: {\n    mangle: {\n      safari10: true,\n    },\n  },\n};\n\n\n在生产环境构建时，builder 会通过 terser-webpack-plugin 对 javascript 代码进行压缩优化。可以通过 tools.terser 修改 terser-webpack-plugin 的配置。\n\n\n# object 类型\n\n当 tools.terser 的值为 object 类型时，会与默认配置通过 object.assign 合并。\n\n例如通过 exclude 排除部分文件的压缩：\n\nexport default {\n  tools: {\n    terser: {\n      exclude: /\\/excludes/,\n    },\n  },\n};\n\n\n\n# function 类型\n\n当 tools.terser 配置为 function 类型时，默认配置作为第一个参数传入，可以直接修改配置对象，也可以返回一个值作为最终结果。\n\nexport default {\n  tools: {\n    terser: opts => {\n      opts.exclude = /\\/excludes/;\n    },\n  },\n};\n\n\n\n# tools.tsloader\n\n * type: object | function | undefined\n * default: undefined\n\n项目中默认不开启 ts-loader，当 tools.tsloader 不为 undefined 则表示开启 ts-loader，同时禁用 babel-loader 对 typescript 的编译。\n\n\n# object 类型\n\n当此值为 object 类型时，与默认配置通过 object.assign 合并。\n\n默认配置如下:\n\n{\n  \"compileroptions\": {\n    \"target\": \"es5\",\n    \"module\": \"esnext\"\n  },\n  \"transpileonly\": true,\n  \"allowtsinnodemodules\": true\n}\n\n\n你可以通过 tools.tsloader 配置项来覆盖默认配置:\n\nexport default {\n  tools: {\n    tsloader: {\n      allowtsinnodemodules: false,\n    },\n  },\n};\n\n\n\n# function 类型\n\n当此值为 function 类型时，默认配置作为第一参数传入，可以直接修改配置对象，也可以返回一个对象作为最终配置；第二个参数为修改 ts-loader 配置工具函数集合：\n\nexport default {\n  tools: {\n    tsloader: opts => {\n      opts.allowtsinnodemodules = false;\n    },\n  },\n};\n\n\n\n# 工具函数\n\ntools.tsloader 的值为 function 类型时，第二个参数可用的工具函数如下：\n\n# addincludes\n\n类型: (includes: string | regexp | array<string | regexp>) => void\n\n默认情况下只会编译 src 目录下的业务代码，使用 addincludes 可以指定 ts-loader 编译 node_modules 下的一些文件。比如:\n\nexport default {\n  tools: {\n    tsloader: (config, { addincludes }) => {\n      addincludes([/node_modules\\/react/]);\n    },\n  },\n};\n\n\n# addexcludes\n\n类型: (excludes: string | regexp | array<string | regexp>) => void\n\n和 addincludes 相反，指定 ts-loader 编译时排除某些文件。\n\n例如不编译 src/example 目录下的文件：\n\nexport default {\n  tools: {\n    tsloader: (config, { addexcludes }) => {\n      addexcludes([/src\\/example\\//]);\n    },\n  },\n};\n\n\n\n# tools.tschecker\n\n * type: boolean | object | function\n * default: true\n\n默认情况下，builder 会开启 fork-ts-checker-webpack-plugin 进行类型检查。\n\n你可以通过:\n\n * 配置为 true 以开启 fork-ts-checker-webpack-plugin 的类型检查。\n * 配置为 false 以关闭 fork-ts-checker-webpack-plugin 的类型检查。\n * 配置为 object 或者 function 修改默认配置；\n\n默认配置如下:\n\n> 大多数情况下你不需要修改 tools.tschecker 默认配置。\n\n{\n  typescript: {\n    // avoid oom issue\n    memorylimit: 8192,\n    // use tsconfig of user project\n    configfile: tsconfigpath,\n    // use typescript of user project\n    typescriptpath: require.resolve('typescript'),\n  },\n  issue: {\n    exclude: [\n      { file: '**/*.(spec|test).ts' },\n      { file: '**/node_modules/**/*' },\n    ],\n  },\n  logger: {\n    log() {\n      // do nothing\n      // we only want to display error messages\n    },\n    error(message: string) {\n      console.error(message.replace(/error/g, 'type error'));\n    },\n  },\n},\n\n\n\n# object 类型\n\n当此值为 object 类型时，与默认配置通过 object.assign 合并。\n\n\n# function 类型\n\n当此值为 function 类型时，默认配置作为第一个参数传入，你可以直接修改配置对象，也可以返回一个对象作为最终配置。\n\n\n# tools.webpack\n\n * type: object | function | undefined\n * default: undefined\n\ntools.webpack 选项用于配置原生的 webpack。\n\n> tools.webpackchain 同样可以修改 webpack 配置，并且功能更加强大，建议优先使用 tools.webpackchain。\n\n\n# object 类型\n\n你可以配置为一个对象，这个对象将会和原始的 webpack 配置通过 webpack-merge 进行合并。比如：\n\nexport default {\n  tools: {\n    webpack: {\n      resolve: {\n        alias: {\n          '@util': 'src/util',\n        },\n      },\n    },\n  },\n};\n\n\n\n# function 类型\n\n你也可以配置为一个函数，这个函数接收一个参数，即原始的 webpack 配置，你可以对这个配置进行修改，然后返回一个新的配置。比如：\n\nexport default {\n  tools: {\n    webpack: config => {\n      config.resolve.alias['@util'] = 'src/util';\n      return config;\n    },\n  },\n};\n\n\n这个函数的第二个参数是一个对象，包含了一些工具集合的信息。详情如下：\n\n\n# 工具集合\n\n# env\n\n * type: 'development' | 'production' | 'test'\n\n通过 env 参数可以判断当前环境为 development、production 还是 test。比如：\n\nexport default {\n  tools: {\n    webpack: (config, { env }) => {\n      if (env === 'development') {\n        config.devtool = 'cheap-module-eval-source-map';\n      }\n      return config;\n    },\n  },\n};\n\n\n# isprod\n\n * type: boolean\n\n通过 isprod 参数可以判断当前环境是否为 production。比如：\n\nexport default {\n  tools: {\n    webpack: (config, { isprod }) => {\n      if (isprod) {\n        config.devtool = 'source-map';\n      }\n      return config;\n    },\n  },\n};\n\n\n# target\n\n * type: 'web' | 'node' | 'modern-web'\n\n通过 target 参数可以判断当前构建的目标运行时环境。比如：\n\nexport default {\n  tools: {\n    webpack: (config, { target }) => {\n      if (target === 'node') {\n        // ...\n      }\n      return config;\n    },\n  },\n};\n\n\n# webpack\n\n * type: object\n\n通过这个参数你可以拿到 webpack 实例。比如：\n\nexport default {\n  tools: {\n    webpack: (config, { webpack }) => {\n      config.plugins.push(new webpack.progressplugin());\n      return config;\n    },\n  },\n};\n\n\n\n# tools.webpackchain\n\n * type: function | undefined\n * default: undefined\n\n你可以通过 tools.webpackchain 来修改默认的 webpack 配置，值为 function 类型，接收两个参数：\n\n * 第一个参数为 webpack-chain 对象实例，你可以通过这个实例来修改默认的 webpack 配置。\n * 第二个参数为一个工具集合，包括env、isprod、chain_id 等。\n\n相比于 tools.webpack，webpack-chain 不仅支持链式调用，而且能够基于别名来定位到内置的 rule 或 plugin，从而实现精准的配置修改。我们推荐使用 tools.webpackchain 来代替 tools.webpack。\n\n> tools.webpackchain 的执行时机早于 tools.webpack，因此会被 tools.webpack 中的修改所覆盖。\n\n\n# 工具集合\n\n# env\n\n * type: 'development' | 'production' | 'test'\n\n通过 env 参数可以判断当前环境为 development、production 还是 test。比如：\n\nexport default {\n  tools: {\n    webpack: (config, { env }) => {\n      if (env === 'development') {\n        config.devtool = 'cheap-module-eval-source-map';\n      }\n      return config;\n    },\n  },\n};\n\n\n# isprod\n\n * type: boolean\n\n通过 isprod 参数可以判断当前环境是否为 production。比如：\n\nexport default {\n  tools: {\n    webpack: (config, { isprod }) => {\n      if (isprod) {\n        config.devtool = 'source-map';\n      }\n      return config;\n    },\n  },\n};\n\n\n# target\n\n * type: 'web' | 'node' | 'modern-web'\n\n通过 target 参数可以判断当前构建的目标运行时环境。比如：\n\nexport default {\n  tools: {\n    webpack: (config, { target }) => {\n      if (target === 'node') {\n        // ...\n      }\n      return config;\n    },\n  },\n};\n\n\n# webpack\n\n * type: object\n\n通过这个参数你可以拿到 webpack 实例。比如：\n\nexport default {\n  tools: {\n    webpack: (config, { webpack }) => {\n      config.plugins.push(new webpack.progressplugin());\n      return config;\n    },\n  },\n};\n\n\n# chain_id\n\nbuilder 中预先定义了一些常用的 chain id，你可以通过这些 id 来定位到内置的 rule 或 plugin。\n\n# chain_id.rule\n\nid           描述\nrule.mjs     处理 mjs 的规则\nrule.js      处理 js 的规则\nrule.ts      处理 ts 的规则\nrule.css     处理 css 的规则\nrule.less    处理 less 的规则\nrule.sass    处理 sass 的规则\nrule.pug     处理 pug 的规则\nrule.toml    处理 toml 的规则\nrule.yaml    处理 yaml 的规则\nrule.font    处理字体的规则\nrule.image   处理图片的规则\nrule.media   处理媒体资源的规则\n\n\n# chain_id.one_of\n\n通过 one_of.xxx 可以匹配到规则数组中的某一类规则。\n\nid                  描述\none_of.svg          处理 svg 的规则，在 data uri 和单独文件之间自动选择\none_of.svg_url      处理 svg 的规则，输出为单独文件\none_of.svg_inline   处理 svg 的规则，作为 data uri 内联到 bundle 中\none_of.svg_assets   处理 svg 的规则，在 data uri 和单独文件之间自动选择\n\n\n# chain_id.use\n\n通过 use.xxx 可以匹配到对应的 loader。\n\nid                     描述\nuse.ts                 对应 ts-loader\nuse.css                对应 css-loader\nuse.less               对应 less-loader\nuse.sass               对应 sass-loader\nuse.pug                对应 pug-loader\nuse.toml               对应 toml-loader\nuse.yaml               对应 yaml-loader\nuse.file               对应 file-loader\nuse.url                对应 url-loader\nuse.svgr               对应 @svgr/webpack\nuse.babel              对应 babel-loader\nuse.style              对应 style-loader\nuse.postcss            对应 postcss-loader\nuse.markdown           对应 markdown-loader\nuse.css_modules_ts     对应 css-modules-typescript-loader\nuse.mini_css_extract   对应 mini-css-extract-plugin.loader\n\n\n# chain_id.plugin\n\n通过 plugin.xxx 可以匹配到对应的 plugin。\n\nid                             描述\nplugin.hmr                     对应 hotmodulereplacementplugin\nplugin.copy                    对应 copywebpackplugin\nplugin.html                    对应 htmlwebpackplugin，使用时需要拼接 entry\n                               名称：${plugin.html}-${entryname}\nplugin.define                  对应 defineplugin\nplugin.ignore                  对应 ignoreplugin\nplugin.banner                  对应 bannerplugin\nplugin.progress                对应 webpackbar\nplugin.app_icon                对应 appiconplugin\nplugin.loadable                对应 loadablewebpackplugin\nplugin.manifest                对应 webpackmanifestplugin\nplugin.ts_checker              对应 forktscheckerwebpackplugin\nplugin.inline_html             对应 inlinechunkhtmlplugin\nplugin.bundle_analyzer         对应 webpackbundleanalyzer\nplugin.bottom_template         对应 bottomtemplateplugin\nplugin.mini_css_extract        对应 minicssextractplugin\nplugin.react_fast_refresh      对应 reactfastrefreshplugin\nplugin.node_polyfill_provide   对应处理 node polyfill 的 provideplugin\nplugin.inspector               对应 @modern-js/inspector-webpack-plugin\nplugin.subresource_integrity   对应 webpack-subresource-integrity\nplugin.assets_retry            对应 builder 中的 webpack 静态资源重试插件 webpackassetsretryplugin\nauto_set_root_size             对应 builder 中的自动设置根字体大小插件 autosetrootsizeplugin\n\n\n# chain_id.minimizer\n\n通过 minimizer.xxx 可以匹配到对应的压缩工具。\n\nid                  描述\nminimizer.js        对应 terserwebpackplugin\nminimizer.css       对应 cssminimizerwebpackplugin\nminimizer.esbuild   对应 esbuildplugin\n\n\n# 常用 webpackchain 使用示例\n\n以下是一些常见的配置示例，完整的 webpack-chain api 请见 webpack-chain 文档。\n\n# 新增/修改/删除 loader\n\nexport default {\n  tools: {\n    webpackchain: chain => {\n      // 新增 loader\n      chain.module\n        .rule('md')\n        .test(/\\.md$/)\n        .use('md-loader')\n        .loader('md-loader');\n      // 修改 loader\n      chain.module\n        .rule(chain_id.rule.js)\n        .use(chain_id.use.babel)\n        .tap(options => {\n          options.plugins.push('babel-plugin-xxx');\n          return options;\n        });\n      // 删除 loader\n      chain.module.rule(chain_id.rule.js).uses.delete(chain_id.use.babel);\n    },\n  },\n};\n\n\n# 新增/修改/删除 plugin\n\nexport default {\n  tools: {\n    webpackchain: chain => {\n      // 新增插件\n      chain.plugin('define').use(webpack.defineplugin, [\n        {\n          'process.env': {\n            node_env: json.stringify(process.env.node_env),\n          },\n        },\n      ]);\n      // 修改插件\n      chain.plugin(chain_id.plugin.hmr).tap(options => {\n        options[0].fullbuildtimeout = 200;\n        return options;\n      });\n      // 删除插件\n      chain.plugins.delete(chain_id.plugin.hmr);\n    },\n  },\n};\n",charsets:{cjk:!0}},{frontmatter:{api:!0},regularPath:"/zh/api/",relativePath:"zh/api/index.md",key:"v-1d4ee519",path:"/zh/api/",lastUpdated:"2022/10/13 03:49:10",lastUpdatedTimestamp:166563295e4,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"异常类问题",frontmatter:{},regularPath:"/zh/guide/faq/exceptions.html",relativePath:"zh/guide/faq/exceptions.md",key:"v-d360c268",path:"/zh/guide/faq/exceptions.html",headers:[{level:2,title:"webpack 编译出现 'compilation' argument 报错？",slug:"webpack-编译出现-compilation-argument-报错",normalizedTitle:"webpack 编译出现 'compilation' argument 报错？",charIndex:12},{level:2,title:"编译产物中存在未编译的 ES6+ 代码？",slug:"编译产物中存在未编译的-es6-代码",normalizedTitle:"编译产物中存在未编译的 es6+ 代码？",charIndex:782},{level:2,title:"在 Monorepo 中引用其他模块，代码没有被正确编译？",slug:"在-monorepo-中引用其他模块-代码没有被正确编译",normalizedTitle:"在 monorepo 中引用其他模块，代码没有被正确编译？",charIndex:960},{level:2,title:"编译时报错 You may need additional loader？",slug:"编译时报错-you-may-need-additional-loader",normalizedTitle:"编译时报错 you may need additional loader？",charIndex:1157},{level:2,title:"打开页面后报错，提示 exports is not defined？",slug:"打开页面后报错-提示-exports-is-not-defined",normalizedTitle:"打开页面后报错，提示 exports is not defined？",charIndex:1565},{level:2,title:"热更新后 React 组件的 state 丢失？",slug:"热更新后-react-组件的-state-丢失",normalizedTitle:"热更新后 react 组件的 state 丢失？",charIndex:2102},{level:2,title:"webpack 编译缓存未生效，应该如何排查？",slug:"webpack-编译缓存未生效-应该如何排查",normalizedTitle:"webpack 编译缓存未生效，应该如何排查？",charIndex:2568},{level:2,title:"打包后发现 Tree Shaking 没有生效？",slug:"打包后发现-tree-shaking-没有生效",normalizedTitle:"打包后发现 tree shaking 没有生效？",charIndex:3037},{level:2,title:"打包时出现 JavaScript heap out of memory?",slug:"打包时出现-javascript-heap-out-of-memory",normalizedTitle:"打包时出现 javascript heap out of memory?",charIndex:3323},{level:2,title:"Less 文件中的除法不生效？",slug:"less-文件中的除法不生效",normalizedTitle:"less 文件中的除法不生效？",charIndex:3735}],lastUpdated:"2022/10/13 07:17:15",lastUpdatedTimestamp:1665645435e3,headersStr:"webpack 编译出现 'compilation' argument 报错？ 编译产物中存在未编译的 ES6+ 代码？ 在 Monorepo 中引用其他模块，代码没有被正确编译？ 编译时报错 You may need additional loader？ 打开页面后报错，提示 exports is not defined？ 热更新后 React 组件的 state 丢失？ webpack 编译缓存未生效，应该如何排查？ 打包后发现 Tree Shaking 没有生效？ 打包时出现 JavaScript heap out of memory? Less 文件中的除法不生效？",content:"# 异常类问题\n\n\n# webpack 编译出现 'compilation' argument 报错？\n\n如果编译时出现以下报错，通常是由于项目中安装了错误的 webpack 版本，或者安装了多个 webpack 版本引起：\n\nTypeError: The 'compilation' argument must be an instance of Compilation\n\n\nwebpack 版本问题有以下几种情况：\n\n 1. 项目的 package.json 中直接声明了 webpack 依赖，并且与 Builder 依赖的 webpack 版本范围不同，无法匹配到同一个版本。\n 2. 项目里安装的多个 npm 包都依赖了 webpack，并且它们依赖的 webpack 版本范围不同，无法匹配到同一个版本。\n 3. 由于包管理器的 lock 机制，导致 lock 文件中产生了多个 webpack 版本。\n\n如果是第一种情况，建议从项目的 package.json 中移除 webpack 依赖。因为 Builder 默认封装了 webpack 相关能力，并且会在 tools.webpack 配置项中传入 webpack 对象。因此在大多数情况下，不建议在项目中额外安装 webpack 依赖。\n\n如果是第二种情况，建议看看能否升级某个 npm 包，使其依赖的 webpack 版本范围与 Builder 保持一致。也可以通过包管理器的能力来手动统一版本，比如使用 yarn resolutions 或 pnpm overrides。\n\n如果是第三种情况，可以使用第二种情况中提到的两种方法，也可以尝试删除 lock 文件后重新安装来解决。\n\nTIP\n\n删除 lock 文件会使项目中的依赖版本自动升级到指定范围下的最新版，请进行充分的测试。\n\n\n# 编译产物中存在未编译的 ES6+ 代码？\n\n默认情况下，Builder 不会通过 babel-loader 或 ts-loader 来编译 node_modules 下的文件。如果项目引入的 npm 包中含有 ES6+ 语法，会被打包进产物中。\n\n遇到这种情况时，可以通过 source.include 配置项来指定需要额外进行编译的目录或模块。\n\n\n# 在 Monorepo 中引用其他模块，代码没有被正确编译？\n\n出于编译性能的考虑，默认情况下，Builder 不会通过 babel-loader 或 ts-loader 来编译 node_modules 下的文件，也不会编译当前工程目录外部的文件。\n\n通过 source.include 配置项，可以指定需要额外进行编译的目录或模块。\n\n详见 source.include 用法介绍。\n\n\n# 编译时报错 You may need additional loader？\n\n如果编译过程中遇到了以下报错提示，表示存在个别文件无法被正确编译。\n\nModule parse failed: Unexpected token\nFile was processed with these loaders:\n * some-loader/index.js\n\nYou may need an additional loader to handle the result of these loaders.\n\n\n解决方法：\n\n * 如果是引用了当前工程外部的 .ts 文件，或者是 node_modules 下的 .ts 文件，请添加 source.include 配置项，指定需要额外进行编译的文件。\n * 如果是引用了 Builder 不支持的文件格式，请自行配置对应的 webpack loader 进行编译。\n\n\n# 打开页面后报错，提示 exports is not defined？\n\n如果编译正常，但是打开页面后出现 exports is not defined 报错，通常是因为在项目中使用 babel 编译了一个 CommonJS 模块，导致 babel 出现异常。\n\n在正常情况下，Builder 是不会使用 babel 来编译 CommonJS 模块的。如果项目中使用了 source.include 配置项，或使用了 tools.babel 的 addIncludes 方法，则可能会把一些 CommonJS 模块加入到 babel 编译中。\n\n该问题有两种解决方法：\n\n 1. 避免将 CommonJS 模块加入到 babel 编译中。\n 2. 将 babel 的 sourceType 配置项设置为 unambiguous，示例如下：\n\nexport default {\n  tools: {\n    babel(config) {\n      config.sourceType = 'unambiguous';\n    },\n  },\n};\n\n\n将 sourceType 设置为 unambiguous 可能会产生一些其他影响，请参考 babel 官方文档。\n\n\n# 热更新后 React 组件的 state 丢失？\n\nBuilder 使用 React 官方的 Fast Refresh 能力来进行组件热更新。\n\n在使用 Fast Refresh 时，要求组件不能为匿名函数，否则热更新后无法保留 React 组件的 state。\n\n以下写法都是不正确的：\n\n// 错误写法 1\nexport default function () {\n  return <div>Hello World</div>;\n}\n\n// 错误写法 2\nexport default () => <div>Hello World</div>;\n\n\n正确的写法为：\n\n// 正确写法 1\nexport default function MyComponent() {\n  return <div>Hello World</div>;\n}\n\n// 正确写法 2\nconst MyComponent = () => <div>Hello World</div>\n\nexport default MyComponent;\n\n\n\n# webpack 编译缓存未生效，应该如何排查？\n\nBuilder 默认开启了 webpack 的持久化缓存。\n\n首次编译完成后，会自动生成缓存文件，并输出到 ./node_modules/.cache/webpack 目录下。执行第二次编译时，会命中缓存，并大幅度提高编译速度。\n\n当 package.json 等配置文件被修改时，缓存会自动失效。\n\n如果项目中 webpack 编译缓存一直未生效，可以添加以下配置进行排查：\n\nexport default {\n  tools: {\n    webpack(config) {\n      config.infrastructureLogging = {\n        ...config.infrastructureLogging,\n        debug: true,\n      };\n    },\n  },\n};\n\n\n添加以上配置后，webpack 会输出日志用于 debug，请参考 PackFileCacheStrategy 相关的日志来了解缓存失效的原因。\n\n\n# 打包后发现 Tree Shaking 没有生效？\n\nBuilder 在生产构建时会默认开启 webpack 的 Tree Shaking 功能，Tree Shaking 是否能够生效，取决于业务代码能否满足 webpack 的 Tree Shaking 条件。\n\n如果你遇到了 Tree Shaking 不生效的问题，可以检查下相关 npm 包的 sideEffects 配置是否正确，如果不了解 sideEffects 是什么，可以阅读以下两篇文档：\n\n * webpack 官方文档 - Tree Shaking\n * Tree Shaking 问题排查指南\n\n\n# 打包时出现 JavaScript heap out of memory?\n\n该报错表示打包过程中出现了内存溢出问题，大多数情况下是由于打包的内容较多，超出了 Node.js 默认的内存上限。\n\n如果出现 OOM 问题，最简单的方法是通过增加内存上限来解决，Node.js 提供了 --max-old-space-size 选项来对此进行设置。你可以在 CLI 命令前添加 NODE_OPTIONS 来设置此参数：\n\nNODE_OPTIONS=--max_old_space_size=16384 modern build\n\n\n参数的值代表内存上限大小（MB)，一般情况下设置为 16384（16GB）即可。\n\nNode.js 官方文档中有对以下参数更详细的解释：\n\n * NODE_OPTIONS\n * --max-old-space-size\n\n除了增加内存上限，通过开启一些编译策略来提升效率也是一个解决方案。\n\n\n# Less 文件中的除法不生效？\n\nLess v4 版本与 v3 版本相比，除法的写法有一些区别：\n\n// Less v3\n.math {\n  width: 2px / 2; // 1px\n  width: 2px ./ 2; // 1px\n  width: (2px / 2); // 1px\n}\n\n// Less v4\n.math {\n  width: 2px / 2; // 2px / 2\n  width: 2px ./ 2; // 1px\n  width: (2px / 2); // 1px\n}\n\n\nBuilder 内置的 Less 版本为 v4，低版本的写法不会生效，请注意区分。\n\nLess 中除法的写法也可以通过配置项来修改，详见 Less - Math。",normalizedContent:"# 异常类问题\n\n\n# webpack 编译出现 'compilation' argument 报错？\n\n如果编译时出现以下报错，通常是由于项目中安装了错误的 webpack 版本，或者安装了多个 webpack 版本引起：\n\ntypeerror: the 'compilation' argument must be an instance of compilation\n\n\nwebpack 版本问题有以下几种情况：\n\n 1. 项目的 package.json 中直接声明了 webpack 依赖，并且与 builder 依赖的 webpack 版本范围不同，无法匹配到同一个版本。\n 2. 项目里安装的多个 npm 包都依赖了 webpack，并且它们依赖的 webpack 版本范围不同，无法匹配到同一个版本。\n 3. 由于包管理器的 lock 机制，导致 lock 文件中产生了多个 webpack 版本。\n\n如果是第一种情况，建议从项目的 package.json 中移除 webpack 依赖。因为 builder 默认封装了 webpack 相关能力，并且会在 tools.webpack 配置项中传入 webpack 对象。因此在大多数情况下，不建议在项目中额外安装 webpack 依赖。\n\n如果是第二种情况，建议看看能否升级某个 npm 包，使其依赖的 webpack 版本范围与 builder 保持一致。也可以通过包管理器的能力来手动统一版本，比如使用 yarn resolutions 或 pnpm overrides。\n\n如果是第三种情况，可以使用第二种情况中提到的两种方法，也可以尝试删除 lock 文件后重新安装来解决。\n\ntip\n\n删除 lock 文件会使项目中的依赖版本自动升级到指定范围下的最新版，请进行充分的测试。\n\n\n# 编译产物中存在未编译的 es6+ 代码？\n\n默认情况下，builder 不会通过 babel-loader 或 ts-loader 来编译 node_modules 下的文件。如果项目引入的 npm 包中含有 es6+ 语法，会被打包进产物中。\n\n遇到这种情况时，可以通过 source.include 配置项来指定需要额外进行编译的目录或模块。\n\n\n# 在 monorepo 中引用其他模块，代码没有被正确编译？\n\n出于编译性能的考虑，默认情况下，builder 不会通过 babel-loader 或 ts-loader 来编译 node_modules 下的文件，也不会编译当前工程目录外部的文件。\n\n通过 source.include 配置项，可以指定需要额外进行编译的目录或模块。\n\n详见 source.include 用法介绍。\n\n\n# 编译时报错 you may need additional loader？\n\n如果编译过程中遇到了以下报错提示，表示存在个别文件无法被正确编译。\n\nmodule parse failed: unexpected token\nfile was processed with these loaders:\n * some-loader/index.js\n\nyou may need an additional loader to handle the result of these loaders.\n\n\n解决方法：\n\n * 如果是引用了当前工程外部的 .ts 文件，或者是 node_modules 下的 .ts 文件，请添加 source.include 配置项，指定需要额外进行编译的文件。\n * 如果是引用了 builder 不支持的文件格式，请自行配置对应的 webpack loader 进行编译。\n\n\n# 打开页面后报错，提示 exports is not defined？\n\n如果编译正常，但是打开页面后出现 exports is not defined 报错，通常是因为在项目中使用 babel 编译了一个 commonjs 模块，导致 babel 出现异常。\n\n在正常情况下，builder 是不会使用 babel 来编译 commonjs 模块的。如果项目中使用了 source.include 配置项，或使用了 tools.babel 的 addincludes 方法，则可能会把一些 commonjs 模块加入到 babel 编译中。\n\n该问题有两种解决方法：\n\n 1. 避免将 commonjs 模块加入到 babel 编译中。\n 2. 将 babel 的 sourcetype 配置项设置为 unambiguous，示例如下：\n\nexport default {\n  tools: {\n    babel(config) {\n      config.sourcetype = 'unambiguous';\n    },\n  },\n};\n\n\n将 sourcetype 设置为 unambiguous 可能会产生一些其他影响，请参考 babel 官方文档。\n\n\n# 热更新后 react 组件的 state 丢失？\n\nbuilder 使用 react 官方的 fast refresh 能力来进行组件热更新。\n\n在使用 fast refresh 时，要求组件不能为匿名函数，否则热更新后无法保留 react 组件的 state。\n\n以下写法都是不正确的：\n\n// 错误写法 1\nexport default function () {\n  return <div>hello world</div>;\n}\n\n// 错误写法 2\nexport default () => <div>hello world</div>;\n\n\n正确的写法为：\n\n// 正确写法 1\nexport default function mycomponent() {\n  return <div>hello world</div>;\n}\n\n// 正确写法 2\nconst mycomponent = () => <div>hello world</div>\n\nexport default mycomponent;\n\n\n\n# webpack 编译缓存未生效，应该如何排查？\n\nbuilder 默认开启了 webpack 的持久化缓存。\n\n首次编译完成后，会自动生成缓存文件，并输出到 ./node_modules/.cache/webpack 目录下。执行第二次编译时，会命中缓存，并大幅度提高编译速度。\n\n当 package.json 等配置文件被修改时，缓存会自动失效。\n\n如果项目中 webpack 编译缓存一直未生效，可以添加以下配置进行排查：\n\nexport default {\n  tools: {\n    webpack(config) {\n      config.infrastructurelogging = {\n        ...config.infrastructurelogging,\n        debug: true,\n      };\n    },\n  },\n};\n\n\n添加以上配置后，webpack 会输出日志用于 debug，请参考 packfilecachestrategy 相关的日志来了解缓存失效的原因。\n\n\n# 打包后发现 tree shaking 没有生效？\n\nbuilder 在生产构建时会默认开启 webpack 的 tree shaking 功能，tree shaking 是否能够生效，取决于业务代码能否满足 webpack 的 tree shaking 条件。\n\n如果你遇到了 tree shaking 不生效的问题，可以检查下相关 npm 包的 sideeffects 配置是否正确，如果不了解 sideeffects 是什么，可以阅读以下两篇文档：\n\n * webpack 官方文档 - tree shaking\n * tree shaking 问题排查指南\n\n\n# 打包时出现 javascript heap out of memory?\n\n该报错表示打包过程中出现了内存溢出问题，大多数情况下是由于打包的内容较多，超出了 node.js 默认的内存上限。\n\n如果出现 oom 问题，最简单的方法是通过增加内存上限来解决，node.js 提供了 --max-old-space-size 选项来对此进行设置。你可以在 cli 命令前添加 node_options 来设置此参数：\n\nnode_options=--max_old_space_size=16384 modern build\n\n\n参数的值代表内存上限大小（mb)，一般情况下设置为 16384（16gb）即可。\n\nnode.js 官方文档中有对以下参数更详细的解释：\n\n * node_options\n * --max-old-space-size\n\n除了增加内存上限，通过开启一些编译策略来提升效率也是一个解决方案。\n\n\n# less 文件中的除法不生效？\n\nless v4 版本与 v3 版本相比，除法的写法有一些区别：\n\n// less v3\n.math {\n  width: 2px / 2; // 1px\n  width: 2px ./ 2; // 1px\n  width: (2px / 2); // 1px\n}\n\n// less v4\n.math {\n  width: 2px / 2; // 2px / 2\n  width: 2px ./ 2; // 1px\n  width: (2px / 2); // 1px\n}\n\n\nbuilder 内置的 less 版本为 v4，低版本的写法不会生效，请注意区分。\n\nless 中除法的写法也可以通过配置项来修改，详见 less - math。",charsets:{cjk:!0}},{title:"功能类问题",frontmatter:{},regularPath:"/zh/guide/faq/features.html",relativePath:"zh/guide/faq/features.md",key:"v-68848fec",path:"/zh/guide/faq/features.html",headers:[{level:2,title:"如何配置组件库按需引入？",slug:"如何配置组件库按需引入",normalizedTitle:"如何配置组件库按需引入？",charIndex:12},{level:2,title:"如何在编译过程中进行 ESLint 代码校验？",slug:"如何在编译过程中进行-eslint-代码校验",normalizedTitle:"如何在编译过程中进行 eslint 代码校验？",charIndex:387},{level:2,title:"如何配置静态资源的 CDN 路径？",slug:"如何配置静态资源的-cdn-路径",normalizedTitle:"如何配置静态资源的 cdn 路径？",charIndex:826},{level:2,title:"如何清空 webpack 编译缓存？",slug:"如何清空-webpack-编译缓存",normalizedTitle:"如何清空 webpack 编译缓存？",charIndex:1014},{level:2,title:"如何移除代码中的 console？",slug:"如何移除代码中的-console",normalizedTitle:"如何移除代码中的 console？",charIndex:1161}],lastUpdated:"2022/10/13 07:17:15",lastUpdatedTimestamp:1665645435e3,headersStr:"如何配置组件库按需引入？ 如何在编译过程中进行 ESLint 代码校验？ 如何配置静态资源的 CDN 路径？ 如何清空 webpack 编译缓存？ 如何移除代码中的 console？",content:"# 功能类问题\n\n\n# 如何配置组件库按需引入？\n\n如果需要配置组件库的按需引入，可以通过 tools.babel 配置 babel-plugin-import 插件。\n\nexport default {\n  tools: {\n    babel: (config, { addPlugins }) => {\n      addPlugins([\n        [\n          'babel-plugin-import',\n          {\n            libraryName: 'xxx-components',\n            libraryDirectory: 'es',\n            style: true,\n          },\n        ],\n      ]);\n    },\n  },\n};\n\n\n\n# 如何在编译过程中进行 ESLint 代码校验？\n\n出于编译性能的考虑，Builder 默认不会在编译过程中进行 ESLint 校验，如果需要该功能，可以手动安装并注册社区中的 eslint-webpack-plugin。\n\n注册该插件的示例代码如下：\n\nimport ESLintPlugin from 'eslint-webpack-plugin';\n\nexport default {\n  tools: {\n    webpackChain(chain) {\n      chain.plugin('eslint-plugin').use(ESLintPlugin, [\n        {\n          extensions: ['.js', '.ts', '.jsx', 'tsx', '.mjs'],\n        },\n      ]);\n    },\n  },\n};\n\n\n> 更详细的用法请参考 eslint-webpack-plugin 文档。\n\n\n# 如何配置静态资源的 CDN 路径？\n\n如果需要将 JS、CSS 等静态资源上传到 CDN 使用，那么可以通过 output.assetPrefix 配置来设置静态资源的 URL 前缀。\n\nexport default {\n  output: {\n    assetPrefix: 'https://cdn.example.com/assets/',\n  },\n};\n\n\n\n# 如何清空 webpack 编译缓存？\n\n默认情况下，Builder 的 webpack 编译缓存生成在 ./node_modules/.cache/webpack 目录下。\n\n如果需要清空本地的编译缓存，可以执行以下命令：\n\nrm -rf ./node_modules/.cache\n\n\n\n# 如何移除代码中的 console？\n\n在生产环境构建时，我们可以移除代码中的 console，从而避免开发环境的日志被输出到生产环境。\n\nBuilder 默认提供了移除 console 的配置项，请查看 performance.removeConsole。",normalizedContent:"# 功能类问题\n\n\n# 如何配置组件库按需引入？\n\n如果需要配置组件库的按需引入，可以通过 tools.babel 配置 babel-plugin-import 插件。\n\nexport default {\n  tools: {\n    babel: (config, { addplugins }) => {\n      addplugins([\n        [\n          'babel-plugin-import',\n          {\n            libraryname: 'xxx-components',\n            librarydirectory: 'es',\n            style: true,\n          },\n        ],\n      ]);\n    },\n  },\n};\n\n\n\n# 如何在编译过程中进行 eslint 代码校验？\n\n出于编译性能的考虑，builder 默认不会在编译过程中进行 eslint 校验，如果需要该功能，可以手动安装并注册社区中的 eslint-webpack-plugin。\n\n注册该插件的示例代码如下：\n\nimport eslintplugin from 'eslint-webpack-plugin';\n\nexport default {\n  tools: {\n    webpackchain(chain) {\n      chain.plugin('eslint-plugin').use(eslintplugin, [\n        {\n          extensions: ['.js', '.ts', '.jsx', 'tsx', '.mjs'],\n        },\n      ]);\n    },\n  },\n};\n\n\n> 更详细的用法请参考 eslint-webpack-plugin 文档。\n\n\n# 如何配置静态资源的 cdn 路径？\n\n如果需要将 js、css 等静态资源上传到 cdn 使用，那么可以通过 output.assetprefix 配置来设置静态资源的 url 前缀。\n\nexport default {\n  output: {\n    assetprefix: 'https://cdn.example.com/assets/',\n  },\n};\n\n\n\n# 如何清空 webpack 编译缓存？\n\n默认情况下，builder 的 webpack 编译缓存生成在 ./node_modules/.cache/webpack 目录下。\n\n如果需要清空本地的编译缓存，可以执行以下命令：\n\nrm -rf ./node_modules/.cache\n\n\n\n# 如何移除代码中的 console？\n\n在生产环境构建时，我们可以移除代码中的 console，从而避免开发环境的日志被输出到生产环境。\n\nbuilder 默认提供了移除 console 的配置项，请查看 performance.removeconsole。",charsets:{cjk:!0}},{title:"功能导航",frontmatter:{},regularPath:"/zh/guide/features.html",relativePath:"zh/guide/features.md",key:"v-6076e08c",path:"/zh/guide/features.html",headers:[{level:2,title:"JavaScript 编译",slug:"javascript-编译",normalizedTitle:"javascript 编译",charIndex:50},{level:2,title:"CSS 编译",slug:"css-编译",normalizedTitle:"css 编译",charIndex:802},{level:2,title:"HTML 编译",slug:"html-编译",normalizedTitle:"html 编译",charIndex:1683},{level:2,title:"React 相关",slug:"react-相关",normalizedTitle:"react 相关",charIndex:2309},{level:2,title:"静态资源相关",slug:"静态资源相关",normalizedTitle:"静态资源相关",charIndex:2504},{level:2,title:"性能相关",slug:"性能相关",normalizedTitle:"性能相关",charIndex:2853}],lastUpdated:"2022/10/13 03:49:10",lastUpdatedTimestamp:166563295e4,headersStr:"JavaScript 编译 CSS 编译 HTML 编译 React 相关 静态资源相关 性能相关",content:"# 功能导航\n\n在这里，你可以了解到 Modern.js Builder 支持的主要功能。\n\n\n# JavaScript 编译\n\n功能             描述                                       相关链接\nBabel 编译       默认开启 Babel 编译，内置多个 Babel 插件               * tools.babel\nTS 编译          默认通过 Babel 编译 TS 文件，支持切换为 ts-loader 编译    * tools.babel\n                                                         * tools.tsLoader\nTS 类型检查        默认通过 TS Checker 检查类型问题                    * tools.tsChecker\nJS 压缩          默认在生产环境构建时开启压缩                            * tools.terser\nPolyfill       默认会注入 core-js 等 Polyfill                  * output.polyfill\nSourceMap 生成   默认在生产环境构建时生成高质量 SourceMap                 * output.disableSourceMap\n文件别名           可选功能，通过 alias 设置文件别名                      * source.alias\n限制源代码路径        可选功能，限制源代码的引用路径                           * source.moduleScopes\n\n\n# CSS 编译\n\n功能                  描述                                      相关链接\nPostCSS 编译          默认开启 PostCSS 编译，内置 autoprefixer 等多个插件    * tools.postcss\n                                                             * tools.autoprefixer\nSass 预处理            默认支持编译 .scss 和 .sass 文件                  * tools.sass\nLess 预处理            默认支持编译 .less 文件                          * tools.less\nCSS Modules 编译      默认支持编译 *.module.* 文件                     * tools.cssLoader\nCSS Modules 类型提示    可选功能，自动生成 CSS Modules 的类型定义文件            * enableCssModuleTSDeclaration\nCSS 压缩              默认在生产环境构建时开启压缩                           * tools.minifyCss\n抽取 CSS 文件           默认会将 CSS 抽取为独立的文件                        * tools.cssExtract\nStyled Components   默认支持 styled-components 编译                * tools.styledComponents\n将 CSS 插入到 JS 中      可选功能，通过 style-loader 插入样式                * tools.styleLoader\n\n\n# HTML 编译\n\n功能           描述                      相关链接\n设置标题         设置 HTML 的 title 标签       * html.title\n                                      * html.titleByEntries\n设置 meta      设置 HTML 的 meta 标签        * html.meta\n                                      * html.metaByEntries\n设置 favicon   设置页面的 favicon 图标         * html.favicon\n                                      * html.faviconByEntries\n设置 app 图标    设置 iOS 系统下的 app icon     * html.appIcon\n使用 pug 模板    可选功能，使用 pug 模板语法         * tools.pug\n内联 JS 文件     可选功能，将 JS 内联到 HTML 中     * output.enableInlineScripts\n内联 CSS 文件    可选功能，将 CSS 内联到 HTML 中    * output.enableInlineStyles\n\n\n# React 相关\n\n功能               描述                           相关链接\nReact Refresh    默认支持 React Refresh 热更新        * dev.hmr\nSVG 转 React 组件   默认支持在 React 组件中引用 SVG 作为组件    * output.svgDefaultExport\n\n\n# 静态资源相关\n\n功能               描述                             相关链接\n内联静态资源           默认将体积较小的图片等资源内联到 JS 中           * output.dataUriLimit\n清理静态资源           每次开始构建前，自动清理 dist 目录下的静态资源      * output.cleanDistPath\n拷贝静态资源           可选功能，将静态资源拷贝到 dist 目录下          * output.copy\n生成 manifest 文件   可选功能，生成包含静态资源信息的 manifest 文件    * output.enableAssetManifest\n\n\n# 性能相关\n\n功能                描述                                相关链接\n展示产物体积            在生产环境构建后，默认展示所有静态资源的体积信息          -\n分析产物体积            可选功能，通过 Bundle Analyzer 分析产物体积     * performance.bundleAnalyze\n移除 console        可选功能，移除代码中的 console.xx             * performance.removeConsole\n优化 moment.js 体积   可选功能，移除 moment.js 多余的 locale 文件    * performance.removeMomentLocale",normalizedContent:"# 功能导航\n\n在这里，你可以了解到 modern.js builder 支持的主要功能。\n\n\n# javascript 编译\n\n功能             描述                                       相关链接\nbabel 编译       默认开启 babel 编译，内置多个 babel 插件               * tools.babel\nts 编译          默认通过 babel 编译 ts 文件，支持切换为 ts-loader 编译    * tools.babel\n                                                         * tools.tsloader\nts 类型检查        默认通过 ts checker 检查类型问题                    * tools.tschecker\njs 压缩          默认在生产环境构建时开启压缩                            * tools.terser\npolyfill       默认会注入 core-js 等 polyfill                  * output.polyfill\nsourcemap 生成   默认在生产环境构建时生成高质量 sourcemap                 * output.disablesourcemap\n文件别名           可选功能，通过 alias 设置文件别名                      * source.alias\n限制源代码路径        可选功能，限制源代码的引用路径                           * source.modulescopes\n\n\n# css 编译\n\n功能                  描述                                      相关链接\npostcss 编译          默认开启 postcss 编译，内置 autoprefixer 等多个插件    * tools.postcss\n                                                             * tools.autoprefixer\nsass 预处理            默认支持编译 .scss 和 .sass 文件                  * tools.sass\nless 预处理            默认支持编译 .less 文件                          * tools.less\ncss modules 编译      默认支持编译 *.module.* 文件                     * tools.cssloader\ncss modules 类型提示    可选功能，自动生成 css modules 的类型定义文件            * enablecssmoduletsdeclaration\ncss 压缩              默认在生产环境构建时开启压缩                           * tools.minifycss\n抽取 css 文件           默认会将 css 抽取为独立的文件                        * tools.cssextract\nstyled components   默认支持 styled-components 编译                * tools.styledcomponents\n将 css 插入到 js 中      可选功能，通过 style-loader 插入样式                * tools.styleloader\n\n\n# html 编译\n\n功能           描述                      相关链接\n设置标题         设置 html 的 title 标签       * html.title\n                                      * html.titlebyentries\n设置 meta      设置 html 的 meta 标签        * html.meta\n                                      * html.metabyentries\n设置 favicon   设置页面的 favicon 图标         * html.favicon\n                                      * html.faviconbyentries\n设置 app 图标    设置 ios 系统下的 app icon     * html.appicon\n使用 pug 模板    可选功能，使用 pug 模板语法         * tools.pug\n内联 js 文件     可选功能，将 js 内联到 html 中     * output.enableinlinescripts\n内联 css 文件    可选功能，将 css 内联到 html 中    * output.enableinlinestyles\n\n\n# react 相关\n\n功能               描述                           相关链接\nreact refresh    默认支持 react refresh 热更新        * dev.hmr\nsvg 转 react 组件   默认支持在 react 组件中引用 svg 作为组件    * output.svgdefaultexport\n\n\n# 静态资源相关\n\n功能               描述                             相关链接\n内联静态资源           默认将体积较小的图片等资源内联到 js 中           * output.dataurilimit\n清理静态资源           每次开始构建前，自动清理 dist 目录下的静态资源      * output.cleandistpath\n拷贝静态资源           可选功能，将静态资源拷贝到 dist 目录下          * output.copy\n生成 manifest 文件   可选功能，生成包含静态资源信息的 manifest 文件    * output.enableassetmanifest\n\n\n# 性能相关\n\n功能                描述                                相关链接\n展示产物体积            在生产环境构建后，默认展示所有静态资源的体积信息          -\n分析产物体积            可选功能，通过 bundle analyzer 分析产物体积     * performance.bundleanalyze\n移除 console        可选功能，移除代码中的 console.xx             * performance.removeconsole\n优化 moment.js 体积   可选功能，移除 moment.js 多余的 locale 文件    * performance.removemomentlocale",charsets:{cjk:!0}},{title:"名词解释",frontmatter:{},regularPath:"/zh/guide/glossary.html",relativePath:"zh/guide/glossary.md",key:"v-3f1bddec",path:"/zh/guide/glossary.html",headers:[{level:2,title:"Bundler",slug:"bundler",normalizedTitle:"bundler",charIndex:11},{level:2,title:"Rspack",slug:"rspack",normalizedTitle:"rspack",charIndex:131},{level:2,title:"Builder",slug:"builder",normalizedTitle:"builder",charIndex:193},{level:2,title:"Builder Provider",slug:"builder-provider",normalizedTitle:"builder provider",charIndex:449},{level:2,title:"Modern.js",slug:"modern-js",normalizedTitle:"modern.js",charIndex:681}],lastUpdated:"2022/10/13 03:49:10",lastUpdatedTimestamp:166563295e4,headersStr:"Bundler Rspack Builder Builder Provider Modern.js",content:"# 名词解释\n\n\n# Bundler\n\n指 webpack 和 rspack 等模块打包工具。\n\n当 Bundler 处理 JavaScript 应用时，它会构建一个依赖关系图，其中包含应用需要的各个模块，然后将所有模块打包成一个或多个 bundle。\n\n\n# Rspack\n\n字节跳动 Web Infra 团队自研的 Rust Bundler，目前仍在研发过程中，尚未开源。\n\n\n# Builder\n\nBuilder 可以翻译为「构建引擎」，Builder 的目标是「复用构建工具的最佳实践」。\n\n因为 webpack 等 Bundler 是比较底层的，如果我们基于 webpack 来构建一个项目，需要充分理解 webpack 的各个配置项和三方插件，并进行大量的配置组装和性能调优等工作。\n\nBuilder 比 Bundler 的封装程度更高，默认集成代码转换、代码压缩等能力。通过接入 Builder，可以快速获得构建现代 Web 应用的能力。\n\nBuilder 内部的分层如下：\n\n\n# Builder Provider\n\nBuilder Provider 是 Builder 的组成部分之一，Provider 基于特定 bundler 实现了对应的构建能力。\n\n目前 Builder 提供了两个 Provider：\n\n * @modern-js/builder-webpack-provider：底层基于 webpack 来实现。\n * @modern-js/builder-rspack-provider：底层基于 rspack 来实现。\n\n\n# Modern.js\n\n一套现代 Web 工程方案。\n\nModern.js 由字节跳动 Web Infra 团队开源，提供了一系列现代 Web 开发的最佳工程实践，如前后端一体化、约定式路由、构建方案、样式方案等。\n\nModern.js 官网地址。",normalizedContent:"# 名词解释\n\n\n# bundler\n\n指 webpack 和 rspack 等模块打包工具。\n\n当 bundler 处理 javascript 应用时，它会构建一个依赖关系图，其中包含应用需要的各个模块，然后将所有模块打包成一个或多个 bundle。\n\n\n# rspack\n\n字节跳动 web infra 团队自研的 rust bundler，目前仍在研发过程中，尚未开源。\n\n\n# builder\n\nbuilder 可以翻译为「构建引擎」，builder 的目标是「复用构建工具的最佳实践」。\n\n因为 webpack 等 bundler 是比较底层的，如果我们基于 webpack 来构建一个项目，需要充分理解 webpack 的各个配置项和三方插件，并进行大量的配置组装和性能调优等工作。\n\nbuilder 比 bundler 的封装程度更高，默认集成代码转换、代码压缩等能力。通过接入 builder，可以快速获得构建现代 web 应用的能力。\n\nbuilder 内部的分层如下：\n\n\n# builder provider\n\nbuilder provider 是 builder 的组成部分之一，provider 基于特定 bundler 实现了对应的构建能力。\n\n目前 builder 提供了两个 provider：\n\n * @modern-js/builder-webpack-provider：底层基于 webpack 来实现。\n * @modern-js/builder-rspack-provider：底层基于 rspack 来实现。\n\n\n# modern.js\n\n一套现代 web 工程方案。\n\nmodern.js 由字节跳动 web infra 团队开源，提供了一系列现代 web 开发的最佳工程实践，如前后端一体化、约定式路由、构建方案、样式方案等。\n\nmodern.js 官网地址。",charsets:{cjk:!0}},{title:"介绍",frontmatter:{},regularPath:"/zh/guide/introduction.html",relativePath:"zh/guide/introduction.md",key:"v-3e0f736c",path:"/zh/guide/introduction.html",headers:[{level:2,title:"特性",slug:"特性",normalizedTitle:"特性",charIndex:105},{level:3,title:"开箱即用的双构建引擎",slug:"开箱即用的双构建引擎",normalizedTitle:"开箱即用的双构建引擎",charIndex:112},{level:3,title:"深度优化构建产物",slug:"深度优化构建产物",normalizedTitle:"深度优化构建产物",charIndex:386},{level:3,title:"易于扩展的插件系统",slug:"易于扩展的插件系统",normalizedTitle:"易于扩展的插件系统",charIndex:615},{level:2,title:"npm 包",slug:"npm-包",normalizedTitle:"npm 包",charIndex:754},{level:2,title:"下一步",slug:"下一步",normalizedTitle:"下一步",charIndex:1313}],lastUpdated:"2022/10/13 07:17:15",lastUpdatedTimestamp:1665645435e3,headersStr:"特性 开箱即用的双构建引擎 深度优化构建产物 易于扩展的插件系统 npm 包 下一步",content:"# 介绍\n\nModern.js Builder 是一个面向现代 Web 开发场景的通用构建引擎。\n\n我们基于字节跳动数千个应用的实践经验，抽象出前端构建的最佳实践，提供 Web 开发所需的全方位能力。\n\n\n# 特性\n\n\n# 开箱即用的双构建引擎\n\n在设计上，Builder 支持双构建引擎：webpack & rspack。\n\n默认情况下，Builder 使用 webpack 作为打包工具，集成了社区中成熟的 babel、postcss、terser 等工具进行代码转义和压缩，也支持通过新兴的 swc、esbuild 等工具来提升编译效率。\n\n同时，Builder 也正在对接字节跳动自研的 Rust Bundler —— rspack，以提供更极致的编译速度。\n\n目前 webpack 构建引擎已经成熟可用，rspack 构建引擎仍在开发过程中，敬请期待。\n\n\n# 深度优化构建产物\n\n现阶段，webpack 仍然是产物优化最全面的打包工具。\n\nBuilder 充分利用 webpack 生态内的各种优化手段，保证生产环境的产物性能最优，并在稳定性上有充分的保障。\n\n以拆包场景为例，webpack 原生的 splitChunks 配置较为复杂，Builder 将其封装为开箱即用的 performance.chunkSplit 配置项，默认将常见的三方库拆分为体积适中的 chunk，使页面加载速度达到最优状态。\n\n\n# 易于扩展的插件系统\n\nBuilder 提供丰富的配置项和灵活的插件系统，支持对各项能力进行深度定制。\n\nBuilder 所有的构建能力都通过插件来实现：\n\n * 大部分插件较为轻量，被内置在 Builder 内部，通过配置项来控制启用。\n * 少部分插件较为复杂，被外置为独立 npm 包，可以按需进行安装和注册。\n\nBuilder 支持自定义插件，使框架开发者可以实现定制化的构建需求。\n\n\n# npm 包\n\nBuilder 已发布的 npm 包有：\n\n包名                                        版本   描述\n@modern-js/builder                             Builder 核心包\n@modern-js/builder-webpack-provider            提供 Webpack 构建能力\n@modern-js/builder-plugin-esbuild              ESBuild 插件\n@modern-js/builder-plugin-node-polyfill        Node Polyfill 插件\n@modern-js/builder-shared                      Builder 内部的公共模块\n@modern-js/builder-doc                         提供可复用的文档片段\n\n你可以在 modern.js 仓库的 packages/builder 目录下查看这些包的源代码。\n\n\n# 下一步\n\n你可能想要：",normalizedContent:"# 介绍\n\nmodern.js builder 是一个面向现代 web 开发场景的通用构建引擎。\n\n我们基于字节跳动数千个应用的实践经验，抽象出前端构建的最佳实践，提供 web 开发所需的全方位能力。\n\n\n# 特性\n\n\n# 开箱即用的双构建引擎\n\n在设计上，builder 支持双构建引擎：webpack & rspack。\n\n默认情况下，builder 使用 webpack 作为打包工具，集成了社区中成熟的 babel、postcss、terser 等工具进行代码转义和压缩，也支持通过新兴的 swc、esbuild 等工具来提升编译效率。\n\n同时，builder 也正在对接字节跳动自研的 rust bundler —— rspack，以提供更极致的编译速度。\n\n目前 webpack 构建引擎已经成熟可用，rspack 构建引擎仍在开发过程中，敬请期待。\n\n\n# 深度优化构建产物\n\n现阶段，webpack 仍然是产物优化最全面的打包工具。\n\nbuilder 充分利用 webpack 生态内的各种优化手段，保证生产环境的产物性能最优，并在稳定性上有充分的保障。\n\n以拆包场景为例，webpack 原生的 splitchunks 配置较为复杂，builder 将其封装为开箱即用的 performance.chunksplit 配置项，默认将常见的三方库拆分为体积适中的 chunk，使页面加载速度达到最优状态。\n\n\n# 易于扩展的插件系统\n\nbuilder 提供丰富的配置项和灵活的插件系统，支持对各项能力进行深度定制。\n\nbuilder 所有的构建能力都通过插件来实现：\n\n * 大部分插件较为轻量，被内置在 builder 内部，通过配置项来控制启用。\n * 少部分插件较为复杂，被外置为独立 npm 包，可以按需进行安装和注册。\n\nbuilder 支持自定义插件，使框架开发者可以实现定制化的构建需求。\n\n\n# npm 包\n\nbuilder 已发布的 npm 包有：\n\n包名                                        版本   描述\n@modern-js/builder                             builder 核心包\n@modern-js/builder-webpack-provider            提供 webpack 构建能力\n@modern-js/builder-plugin-esbuild              esbuild 插件\n@modern-js/builder-plugin-node-polyfill        node polyfill 插件\n@modern-js/builder-shared                      builder 内部的公共模块\n@modern-js/builder-doc                         提供可复用的文档片段\n\n你可以在 modern.js 仓库的 packages/builder 目录下查看这些包的源代码。\n\n\n# 下一步\n\n你可能想要：",charsets:{cjk:!0}},{title:"快速上手",frontmatter:{},regularPath:"/zh/guide/quick-start.html",relativePath:"zh/guide/quick-start.md",key:"v-0c3100fc",path:"/zh/guide/quick-start.html",headers:[{level:2,title:"Modern.js 项目",slug:"modern-js-项目",normalizedTitle:"modern.js 项目",charIndex:11},{level:2,title:"其他项目",slug:"其他项目",normalizedTitle:"其他项目",charIndex:156}],lastUpdated:"2022/10/13 03:49:10",lastUpdatedTimestamp:166563295e4,headersStr:"Modern.js 项目 其他项目",content:"# 快速上手\n\n\n# Modern.js 项目\n\nModern.js 2.0 项目默认使用 Modern.js Builder 作为构建引擎。\n\n因此，你不需要做任何额外的接入，直接就可以使用 Builder 提供的所有配置项。\n\n> Tips: Modern.js 2.0 仍在开发中，尚未正式发布。\n\n\n# 其他项目\n\nTODO",normalizedContent:"# 快速上手\n\n\n# modern.js 项目\n\nmodern.js 2.0 项目默认使用 modern.js builder 作为构建引擎。\n\n因此，你不需要做任何额外的接入，直接就可以使用 builder 提供的所有配置项。\n\n> tips: modern.js 2.0 仍在开发中，尚未正式发布。\n\n\n# 其他项目\n\ntodo",charsets:{cjk:!0}}],themeConfig:{repo:"https://github.com/modern-js-dev/modern.js/tree/main/packages/builder",repoLabel:"GitHub",docsDir:"docs/docs/src",enableDarkMode:!0,locales:{"/zh/":{label:"简体中文",selectText:"语言",ariaLabel:"语言",lastUpdated:"上次更新",searchMaxSuggestions:10,searchPlaceholder:"Search",nav:[{text:"指南",link:"/zh/guide/introduction"},{text:"API",link:"/zh/api/"}],sidebar:{"/zh/guide/":[{collapsable:!1,title:"开始",children:["/zh/guide/introduction","/zh/guide/quick-start","/zh/guide/features","/zh/guide/glossary"]},{collapsable:!1,title:"常见问题",children:["/zh/guide/faq/features","/zh/guide/faq/exceptions"]}],"/zh/api/":[{title:"API 总览",path:"/zh/api/"},{title:"配置",collapsable:!1,children:["/zh/api/config-source","/zh/api/config-output","/zh/api/config-dev","/zh/api/config-html","/zh/api/config-security","/zh/api/config-tools","/zh/api/config-performance"]},{title:"Node API",collapsable:!1,children:["/zh/api/builder-core","/zh/api/builder-instance","/zh/api/builder-types"]}]}},"/en/":{label:"English",selectText:"Languages",ariaLabel:"Select language",lastUpdated:"Last Updated",searchMaxSuggestions:10,searchPlaceholder:"Search",nav:[{text:"Guide",link:"/en/guide/introduction"},{text:"API",link:"/en/api/"}],sidebar:{"/en/guide/":[{collapsable:!1,title:"Start",children:["/en/guide/introduction","/en/guide/quick-start","/en/guide/features","/en/guide/glossary"]},{collapsable:!1,title:"FAQ",children:["/en/guide/faq/features","/en/guide/faq/exceptions"]}],"/en/api/":[{title:"API Reference",path:"/en/api/"},{title:"Config",collapsable:!1,children:["/en/api/config-source","/en/api/config-output","/en/api/config-dev","/en/api/config-html","/en/api/config-security","/en/api/config-tools","/en/api/config-performance"]},{title:"Node API",collapsable:!1,children:["/en/api/builder-core","/en/api/builder-instance","/en/api/builder-types"]}]}}}},locales:{"/zh/":{lang:"zh-CN",title:"Modern.js Builder",description:"面向现代 Web 开发场景的通用构建引擎",path:"/zh/"},"/en/":{lang:"en-US",title:"Modern.js Builder",description:"A Universal Build Engine for Modern Web Development",path:"/en/"}}};t(149);o.a.component("Badge",()=>Promise.all([t.e(0),t.e(3)]).then(t.bind(null,271))),o.a.component("CodeBlock",()=>Promise.all([t.e(0),t.e(4)]).then(t.bind(null,231))),o.a.component("CodeGroup",()=>Promise.all([t.e(0),t.e(5)]).then(t.bind(null,232))),o.a.component("Details",()=>Promise.all([t.e(0),t.e(6)]).then(t.bind(null,272))),o.a.component("NextSteps",()=>Promise.all([t.e(0),t.e(7)]).then(t.bind(null,273))),o.a.component("Step",()=>Promise.all([t.e(0),t.e(8)]).then(t.bind(null,233))),o.a.component("Summary",()=>Promise.all([t.e(0),t.e(9)]).then(t.bind(null,274))),o.a.component("VPIconExternalLink",()=>Promise.all([t.e(0),t.e(10)]).then(t.bind(null,275))),o.a.component("VPLink",()=>t.e(12).then(t.bind(null,234)));o.a.component("CodeSwitcher",()=>Promise.all([t.e(0),t.e(11)]).then(t.bind(null,229)));t(150);var Vn={name:"BackToTop",props:{threshold:{type:Number,default:300}},data:()=>({scrollTop:null}),computed:{show(){return this.scrollTop>this.threshold}},mounted(){this.scrollTop=this.getScrollTop(),window.addEventListener("scroll",Sn()(()=>{this.scrollTop=this.getScrollTop()},100))},methods:{getScrollTop:()=>window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0,scrollToTop(){window.scrollTo({top:0,behavior:"smooth"}),this.scrollTop=0}}},Gn=(t(151),Object($n.a)(Vn,(function(){var e=this._self._c;return e("transition",{attrs:{name:"fade"}},[this.show?e("svg",{staticClass:"go-to-top",attrs:{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 49.484 28.284"},on:{click:this.scrollToTop}},[e("g",{attrs:{transform:"translate(-229 -126.358)"}},[e("rect",{attrs:{fill:"currentColor",width:"35",height:"5",rx:"2",transform:"translate(229 151.107) rotate(-45)"}}),this._v(" "),e("rect",{attrs:{fill:"currentColor",width:"35",height:"5",rx:"2",transform:"translate(274.949 154.642) rotate(-135)"}})])]):this._e()])}),[],!1,null,"710b6954",null).exports),Jn=t(24);const Yn={locales:!0};var Kn=[({Vue:e,options:n,router:t,siteData:o})=>{e.mixin({methods:{$withLocale:function(e){return e.startsWith("/")?this.$localePath+e.replace(/^\//,""):e}}})},{},({Vue:e})=>{e.mixin({computed:{$dataBlock(){return this.$options.__data__block__}}})},{},{},{},({Vue:e})=>{e.component("BackToTop",Gn)},({router:e,siteData:n})=>{const{routes:t=[]}=e.options,{redirectors:o=[]}=Yn;function i(e){return t.some(n=>n.path.toLowerCase()===e.toLowerCase())}function r(e){if(i(e))return e;if(!/\/$/.test(e)){const n=e+"/";if(i(n))return n}if(!/\.html$/.test(e)){const n=e.replace(/\/$/,"")+".html";if(i(n))return n}return null}if(Yn.locales&&n.locales){const e=n.locales,t=Object.keys(e),i=t.map(n=>({key:n.replace(/^\/|\/$/,""),lang:e[n].lang}));"object"!=typeof Yn.locales&&(Yn.locales={});const{fallback:r,storage:a=!0}=Yn.locales;r&&t.unshift(r),o.unshift({storage:a,base:"/",alternative(){if("undefined"!=typeof window&&window.navigator){const e=window.navigator.languages||[window.navigator.language],n=i.find(({lang:n})=>e.includes(n));if(n)return n.key}return t}})}const a=o.map(({base:e="/",storage:n=!1,alternative:t})=>{let o=!1;if(n)if("object"!=typeof n){const t="string"!=typeof n?"vuepress:redirect:"+e:n;o={get:()=>"undefined"==typeof localStorage?null:localStorage.getItem(t),set(e){"undefined"!=typeof localStorage&&localStorage.setItem(t,e)}}}else n.get&&n.set&&(o=n);return{base:e,storage:o,alternative:t}});e.beforeEach((e,n,t)=>{if(r(e.path))return t();let o;for(const n of a){const{base:t="/",storage:i=!1}=n;let{alternative:a}=n;if(!e.path.startsWith(t))continue;const s=e.path.slice(t.length)||"/";if(i){const e=i.get(n);if(e){const n=r(Object(Jn.join)(t,e,s));if(n){o=n;break}}}if("function"==typeof a&&(a=a(s)),a){"string"==typeof a&&(a=[a]);for(const e of a){const n=r(Object(Jn.join)(t,e,s));if(n){o=n;break}}if(o)break}}t(o)}),e.afterEach(e=>{if(i(e.path))for(const n of a){const{base:t,storage:o}=n;if(!o||!e.path.startsWith(t))continue;const i=e.path.slice(t.length).split("/")[0];i&&o.set(i,n)}})}],Xn=["BackToTop"];class Zn extends class{constructor(){this.store=new o.a({data:{state:{}}})}$get(e){return this.store.state[e]}$set(e,n){o.a.set(this.store.state,e,n)}$emit(...e){this.store.$emit(...e)}$on(...e){this.store.$on(...e)}}{}Object.assign(Zn.prototype,{getPageAsyncComponent:cn,getLayoutAsyncComponent:un,getAsyncComponent:dn,getVueComponent:pn});var Qn={install(e){const n=new Zn;e.$vuepress=n,e.prototype.$vuepress=n}};function et(e,n){const t=n.toLowerCase();return e.options.routes.some(e=>e.path.toLowerCase()===t)}var nt={props:{pageKey:String,slotKey:{type:String,default:"default"}},render(e){const n=this.pageKey||this.$parent.$page.key;return mn("pageKey",n),o.a.component(n)||o.a.component(n,cn(n)),o.a.component(n)?e(n):e("")}},tt={functional:!0,props:{slotKey:String,required:!0},render:(e,{props:n,slots:t})=>e("div",{class:["content__"+n.slotKey]},t()[n.slotKey])},ot={computed:{openInNewWindowTitle(){return this.$themeLocaleConfig.openNewWindowText||"(opens new window)"}}},it=(t(152),t(153),Object($n.a)(ot,(function(){var e=this._self._c;return e("span",[e("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[e("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),this._v(" "),e("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})]),this._v(" "),e("span",{staticClass:"sr-only"},[this._v(this._s(this.openInNewWindowTitle))])])}),[],!1,null,null,null).exports),rt={functional:!0,render(e,{parent:n,children:t}){if(n._isMounted)return t;n.$once("hook:mounted",()=>{n.$forceUpdate()})}};o.a.config.productionTip=!1,o.a.use(Ve),o.a.use(Qn),o.a.mixin(function(e,n,t=o.a){!function(e){e.locales&&Object.keys(e.locales).forEach(n=>{e.locales[n].path=n});Object.freeze(e)}(n),t.$vuepress.$set("siteData",n);const i=new(e(t.$vuepress.$get("siteData"))),r=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(i)),a={};return Object.keys(r).reduce((e,n)=>(n.startsWith("$")&&(e[n]=r[n].get),e),a),{computed:a}}(e=>class{setPage(e){this.__page=e}get $site(){return e}get $themeConfig(){return this.$site.themeConfig}get $frontmatter(){return this.$page.frontmatter}get $localeConfig(){const{locales:e={}}=this.$site;let n,t;for(const o in e)"/"===o?t=e[o]:0===this.$page.path.indexOf(o)&&(n=e[o]);return n||t||{}}get $siteTitle(){return this.$localeConfig.title||this.$site.title||""}get $canonicalUrl(){const{canonicalUrl:e}=this.$page.frontmatter;return"string"==typeof e&&e}get $title(){const e=this.$page,{metaTitle:n}=this.$page.frontmatter;if("string"==typeof n)return n;const t=this.$siteTitle,o=e.frontmatter.home?null:e.frontmatter.title||e.title;return t?o?o+" | "+t:t:o||"VuePress"}get $description(){const e=function(e){if(e){const n=e.filter(e=>"description"===e.name)[0];if(n)return n.content}}(this.$page.frontmatter.meta);return e||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}get $lang(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}get $localePath(){return this.$localeConfig.path||"/"}get $themeLocaleConfig(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}get $page(){return this.__page?this.__page:function(e,n){for(let t=0;t<e.length;t++){const o=e[t];if(o.path.toLowerCase()===n.toLowerCase())return o}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}},Wn)),o.a.component("Content",nt),o.a.component("ContentSlotsDistributor",tt),o.a.component("OutboundLink",it),o.a.component("ClientOnly",rt),o.a.component("Layout",un("Layout")),o.a.component("NotFound",un("NotFound")),o.a.prototype.$withBase=function(e){const n=this.$site.base;return"/"===e.charAt(0)?n+e.slice(1):e},window.__VUEPRESS__={version:"1.9.5",hash:"0cfde3a"},async function(e){const n="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:Wn.routerBase||Wn.base,t=new Ve({base:n,mode:"history",fallback:!1,routes:qn,scrollBehavior:(e,n,t)=>t||(e.hash?!o.a.$vuepress.$get("disableScrollBehavior")&&{selector:decodeURIComponent(e.hash)}:{x:0,y:0})});!function(e){e.beforeEach((n,t,o)=>{if(et(e,n.path))o();else if(/(\/|\.html)$/.test(n.path))if(/\/$/.test(n.path)){const t=n.path.replace(/\/$/,"")+".html";et(e,t)?o(t):o()}else o();else{const t=n.path+"/",i=n.path+".html";et(e,i)?o(i):et(e,t)?o(t):o()}})}(t);const i={};try{await Promise.all(Kn.filter(e=>"function"==typeof e).map(n=>n({Vue:o.a,options:i,router:t,siteData:Wn,isServer:e})))}catch(e){console.error(e)}return{app:new o.a(Object.assign(i,{router:t,render:e=>e("div",{attrs:{id:"app"}},[e("RouterView",{ref:"layout"}),e("div",{class:"global-ui"},Xn.map(n=>e(n)))])})),router:t}}(!1).then(({app:e,router:n})=>{n.onReady(()=>{e.$mount("#app")})})}]);