(window.webpackJsonp=window.webpackJsonp||[]).push([[99],{322:function(s,t,o){"use strict";o.r(t);var e=o(4),r=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"样式资源处理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#样式资源处理"}},[s._v("#")]),s._v(" 样式资源处理")]),s._v(" "),t("p",[s._v("Builder 支持处理多种样式资源, 例如：Less, Sass。除此之外，Builder 也提供多种配置来处理你的样式资源。")]),s._v(" "),t("h2",{attrs:{id:"使用-css-modules"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用-css-modules"}},[s._v("#")]),s._v(" 使用 CSS Modules")]),s._v(" "),t("p",[s._v("Builder 提供开箱即用的 "),t("a",{attrs:{href:"https://github.com/css-modules/css-modules",target:"_blank",rel:"noopener noreferrer"}},[s._v("CSS Modules"),t("OutboundLink")],1),s._v("， 无需你额外的配置。当然若你想自定义 CSS Modules 相关配置，你可以通过 "),t("RouterLink",{attrs:{to:"/zh/api/config-tools.html#css-loader"}},[s._v("tools.css-loader")]),s._v(" 进行自定义。")],1),s._v(" "),t("p",[s._v("自定义生成的类名也是我们比较常用的功能，你除了可以使用 "),t("RouterLink",{attrs:{to:"/zh/api/config-tools.html#tools-cssloader"}},[s._v("tools.cssLoader")]),s._v(" 来进行自定义，还可以使用 "),t("RouterLink",{attrs:{to:"/zh/api/config-output.html#output-cssmodulelocalidentname"}},[s._v("output.cssModuleLocalIdentName")]),s._v(" 来进行配置。")],1),s._v(" "),t("p",[s._v("在默认情况下，只有 "),t("code",[s._v("*.module.css")]),s._v(" 结尾的文件才被视为 CSS Modules 模块。如果你想去掉文件名中的 "),t("code",[s._v(".module")]),s._v("，可以通过开启 "),t("RouterLink",{attrs:{to:"/zh/api/config-output.html#output-disablecssmoduleextension"}},[s._v("output.disableCssModuleExtension")]),s._v(" 来实现，比如：")],1),s._v(" "),t("div",{staticClass:"language-ts extra-class"},[t("pre",{pre:!0,attrs:{class:"language-ts"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" styles1 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./foo.module.css'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" styles2 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./bar.css'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[s._v("以上两个文件都会被视为 CSS Modules，\n不过我们不太推荐开启该配置项，这样不利于项目长期维护。")]),s._v(" "),t("h2",{attrs:{id:"使用-less-和-sass"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用-less-和-sass"}},[s._v("#")]),s._v(" 使用 Less 和 Sass")]),s._v(" "),t("p",[s._v("Builder 已内置了社区流行的 CSS 预处理器，例如 Less , Sass。 无需你额外的配置，即可开箱即用，当然你也可以通过配置 "),t("RouterLink",{attrs:{to:"/zh/api/config-tools.html#tools-less"}},[s._v("tools.less")]),s._v(" 、 "),t("RouterLink",{attrs:{to:"/zh/api/config-tools.html#tools-sass"}},[s._v("tools.sass")]),s._v(" 来自定义 loader。")],1),s._v(" "),t("h2",{attrs:{id:"使用-postcss"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用-postcss"}},[s._v("#")]),s._v(" 使用 PostCss")]),s._v(" "),t("p",[s._v("Builder 内置了 "),t("a",{attrs:{href:"https://postcss.org/",target:"_blank",rel:"noopener noreferrer"}},[s._v("PostCss"),t("OutboundLink")],1),s._v("。")]),s._v(" "),t("p",[s._v("你可以通过 "),t("RouterLink",{attrs:{to:"/zh/api/config-tools.html#tools-postcss"}},[s._v("tools.postcss")]),s._v(" 来配置 postcss-loader")],1),s._v(" "),t("p",[s._v("在默认情况下，我们开启了 "),t("a",{attrs:{href:"https://github.com/postcss/autoprefixer",target:"_blank",rel:"noopener noreferrer"}},[s._v("autoprefixer"),t("OutboundLink")],1),s._v("。如果想配置目标浏览器，可使用 "),t("RouterLink",{attrs:{to:"/zh/api/config-output.html#output-overridebrowserslist"}},[s._v("output.overrideBrowserslist")]),s._v(" 进行配置。")],1),s._v(" "),t("h2",{attrs:{id:"css-压缩"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#css-压缩"}},[s._v("#")]),s._v(" CSS 压缩")]),s._v(" "),t("p",[s._v("通常情况下，在生产环境我们会将 CSS 、JS 等静态资源进行压缩，以此达到更好的传输效率。Builder 通过 "),t("a",{attrs:{href:"https://github.com/webpack-contrib/css-minimizer-webpack-plugin",target:"_blank",rel:"noopener noreferrer"}},[s._v("css-minimizer-webpack-plugin"),t("OutboundLink")],1),s._v(" 在生产环境构建时自动压缩 CSS 代码。")]),s._v(" "),t("p",[s._v("你可以通过配置 "),t("RouterLink",{attrs:{to:"/zh/api/config-tools.html#tools-minifycss"}},[s._v("tools.minifyCss")]),s._v(" 来对它进行更自定义的配置。")],1),s._v(" "),t("h2",{attrs:{id:"css-单文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#css-单文件"}},[s._v("#")]),s._v(" CSS 单文件")]),s._v(" "),t("p",[s._v("默认情况下，Builder 会把 CSS 提取为独立的 "),t("code",[s._v(".css")]),s._v(" 文件，并输出到构建产物目录。")]),s._v(" "),t("p",[s._v("如果你希望将样式能内联到 JS 文件中，你可以将 "),t("RouterLink",{attrs:{to:"/zh/api/config-output.html#output-disablecssextract"}},[s._v("output.disableCssExtract")]),s._v(" 设置为 true, 来禁止 CSS 提取逻辑。\n浏览器请求到 JS 文件后，JS 将动态地向 Html 插入 "),t("code",[s._v("<style>")]),s._v(" 标签，以此加载 CSS 样式。")],1),s._v(" "),t("p",[s._v("这将会增大你 JS Bundle 的体积，因此通常情况下，不太建议你禁止 CSS 提取逻辑。")])])}),[],!1,null,null,null);t.default=r.exports}}]);