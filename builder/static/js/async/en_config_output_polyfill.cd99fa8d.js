"use strict";(self.webpackChunk_modern_js_builder_doc=self.webpackChunk_modern_js_builder_doc||[]).push([[8737],{88437:function(e,n,i){i.r(n),i.d(n,{content:function(){return l},frontmatter:function(){return r},toc:function(){return s}});var t=i(39980);const r=void 0,s=[{id:"config",text:"Config",depth:3},{id:"entry",text:"entry",depth:4},{id:"usage",text:"usage",depth:4},{id:"ua",text:"ua",depth:4},{id:"off",text:"off",depth:4}],l="\"- Type: `'entry' | 'usage' | 'ua' | 'off'`\\n- Default: `'entry'`\\n\\nVia `output.polyfill` you can configure how the polyfill is injected.\\n\\n### Config\\n\\n#### entry\\n\\nPolyfill is injected in every entry file when `output.polyfill` is configured as `'entry'`.\\n\\nEquivalent to `useBuiltIns: 'entry'` configuration in `@babel/preset-env`.\\n\\n#### usage\\n\\nPolyfill is injected in each file based on the API used in the code.\\n\\nEquivalent to `useBuiltIns: 'usage'` configuration in `@babel/preset-env`.\\n\\n#### ua\\n\\nThe Polyfill code is dynamically delivered according to the currently requested UA information.\\n\\n#### off\\n\\nPolyfill is not injected. When using this option, you need to ensure code compatibility yourself.\\n\"";function o(e){const n=Object.assign({ul:"ul",li:"li",code:"code",p:"p",h3:"h3",a:"a",h4:"h4"},e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Type: ",(0,t.jsx)(n.code,{children:"'entry' | 'usage' | 'ua' | 'off'"})]}),"\n",(0,t.jsxs)(n.li,{children:["Default: ",(0,t.jsx)(n.code,{children:"'entry'"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Via ",(0,t.jsx)(n.code,{children:"output.polyfill"})," you can configure how the polyfill is injected."]}),"\n",(0,t.jsxs)(n.h3,{id:"config",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#config",children:"#"}),"Config"]}),"\n",(0,t.jsxs)(n.h4,{id:"entry",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entry",children:"#"}),"entry"]}),"\n",(0,t.jsxs)(n.p,{children:["Polyfill is injected in every entry file when ",(0,t.jsx)(n.code,{children:"output.polyfill"})," is configured as ",(0,t.jsx)(n.code,{children:"'entry'"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Equivalent to ",(0,t.jsx)(n.code,{children:"useBuiltIns: 'entry'"})," configuration in ",(0,t.jsx)(n.code,{children:"@babel/preset-env"}),"."]}),"\n",(0,t.jsxs)(n.h4,{id:"usage",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#usage",children:"#"}),"usage"]}),"\n",(0,t.jsx)(n.p,{children:"Polyfill is injected in each file based on the API used in the code."}),"\n",(0,t.jsxs)(n.p,{children:["Equivalent to ",(0,t.jsx)(n.code,{children:"useBuiltIns: 'usage'"})," configuration in ",(0,t.jsx)(n.code,{children:"@babel/preset-env"}),"."]}),"\n",(0,t.jsxs)(n.h4,{id:"ua",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#ua",children:"#"}),"ua"]}),"\n",(0,t.jsx)(n.p,{children:"The Polyfill code is dynamically delivered according to the currently requested UA information."}),"\n",(0,t.jsxs)(n.h4,{id:"off",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#off",children:"#"}),"off"]}),"\n",(0,t.jsx)(n.p,{children:"Polyfill is not injected. When using this option, you need to ensure code compatibility yourself."})]})}n.default=function(e={}){const{wrapper:n}=e.components||{};return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(o,e)})):o(e)}}}]);