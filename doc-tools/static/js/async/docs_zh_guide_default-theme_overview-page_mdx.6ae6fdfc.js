(self.webpackChunk_modern_js_doc_tools_doc=self.webpackChunk_modern_js_doc_tools_doc||[]).push([["docs_zh_guide_default-theme_overview-page_mdx"],{32589:function(e,n,r){"use strict";Object.defineProperty(n,"__esModule",{value:!0});!function(e,n){for(var r in n)Object.defineProperty(e,r,{enumerable:!0,get:n[r]})}(n,{frontmatter:function(){return s},title:function(){return t},toc:function(){return a},default:function(){return o}});var d=r("9880"),i=r("23169"),s={},t="预览页",a=[{text:"效果",depth:2,id:"效果"},{text:"如何开启？",depth:2,id:"如何开启？"},{text:"1. 新建目录，配置 frontmatter",depth:3,id:"1-新建目录，配置-frontmatter"},{text:"2. 配置 sidebar",depth:3,id:"2-配置-sidebar"}];function c(e){var n=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",img:"img",h3:"h3",pre:"pre",code:"code"},(0,i.useMDXComponents)(),e.components);return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsxs)(n.h1,{id:"预览页",children:["预览页",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#预览页",children:"#"})]}),"\n",(0,d.jsxs)(n.h2,{id:"效果",children:["效果",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#效果",children:"#"})]}),"\n",(0,d.jsx)(n.p,{children:"Modern.js Doc 内置一套预览页，效果如下:"}),"\n",(0,d.jsx)("img",{src:"https://lf3-static.bytednsdoc.com/obj/eden-cn/uhbfnupenuhf/edenx-doc/Xnip2023-02-17_16-55-07.jpg"}),"\n",(0,d.jsxs)(n.h2,{id:"如何开启？",children:["如何开启？",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#如何开启？",children:"#"})]}),"\n",(0,d.jsx)(n.p,{children:"生成预览页需要如下两步:"}),"\n",(0,d.jsxs)(n.h3,{id:"1-新建目录，配置-frontmatter",children:["1. 新建目录，配置 frontmatter",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1-新建目录，配置-frontmatter",children:"#"})]}),"\n",(0,d.jsx)(n.p,{children:"比如新建如下的目录和文件:"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:"├── docs\n│   ├── index.md\n│   ├── api\n│   │   ├── index.md\n│   │   ├── preview1.md\n│   │   └── preview2.md\n// ...\n"})}),"\n",(0,d.jsxs)(n.p,{children:["我们在 ",(0,d.jsx)(n.code,{children:"api/index.md"})," 中添加如下内容:"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-md",children:"---\noverview: true\n---\n"})}),"\n",(0,d.jsxs)(n.h3,{id:"2-配置-sidebar",children:["2. 配置 ",(0,d.jsx)(n.code,{children:"sidebar"}),(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2-配置-sidebar",children:"#"})]}),"\n",(0,d.jsx)(n.p,{children:"配置预览页面的结构会基于 sidebar 的配置来生成，比如我们添加如下的 sidebar 配置:"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",meta:'title="modern.config.ts"',children:"import docTools, { defineConfig } from '@modern-js/doc-tools';\n\nexport default defineConfig({\n  doc: {\n    themeConfig: {\n      sidebar: {\n        '/api/': [\n          {\n            text: 'Group1',\n            items: [\n              // 注意: 需要提前创建好文档\n              '/api/foo',\n              '/api/bar',\n            ],\n          },\n          {\n            text: 'Group2',\n            items: ['/api/xxx', '/api/yyy'],\n          },\n        ],\n      },\n    },\n  },\n  plugins: [docTools()],\n});\n"})}),"\n",(0,d.jsx)(n.p,{children:"框架会摘取所有 api 目录下的文件以及其中的 h1、h2 标题，并根据 sidebar 配置中的分组信息生成预览页。"})]})}var o=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,i.useMDXComponents)(),e.components).wrapper;return n?(0,d.jsx)(n,Object.assign({},e,{children:(0,d.jsx)(c,e)})):c(e)}}}]);