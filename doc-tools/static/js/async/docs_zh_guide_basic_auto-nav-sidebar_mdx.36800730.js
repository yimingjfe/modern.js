(self.webpackChunk_modern_js_doc_tools_doc=self.webpackChunk_modern_js_doc_tools_doc||[]).push([["docs_zh_guide_basic_auto-nav-sidebar_mdx"],{30217:function(n,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});!function(n,e){for(var s in e)Object.defineProperty(n,s,{enumerable:!0,get:e[s]})}(e,{frontmatter:function(){return c},title:function(){return l},toc:function(){return r},default:function(){return t}});var d=s("9880"),i=s("23169"),c={},l="自动化导航栏/侧边栏",r=[{text:"基础概念",depth:2,id:"基础概念"},{text:"导航栏级别配置",depth:2,id:"导航栏级别配置"},{text:"侧边栏级别配置",depth:2,id:"侧边栏级别配置"},{text:"string",depth:3,id:"string"},{text:"obejct",depth:3,id:"obejct"},{text:"完整示例",depth:3,id:"完整示例"}];function a(n){var e=Object.assign({h1:"h1",a:"a",p:"p",code:"code",div:"div",h2:"h2",pre:"pre",h3:"h3",strong:"strong"},(0,i.useMDXComponents)(),n.components);return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsxs)(e.h1,{id:"自动化导航栏/侧边栏",children:["自动化导航栏/侧边栏",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#自动化导航栏/侧边栏",children:"#"})]}),"\n",(0,d.jsxs)(e.p,{children:["在 Modern.js Doc 中，除了在配置文件中通过 ",(0,d.jsx)(e.code,{children:"themeConfig"})," 声明 ",(0,d.jsx)(e.a,{href:"/api/config/config-theme#nav",children:"nav"})," 和 ",(0,d.jsx)(e.a,{href:"/api/config/config-theme#sidebar",children:"sidebar"}),"， 你也可以通过声明 ",(0,d.jsx)(e.code,{children:"_meta.json"})," 描述文件来自动化生成导航栏和侧边栏，我们更加推荐后者，因为可以使配置文件更加简洁和清晰。"]}),"\n",(0,d.jsxs)(e.div,{className:"modern-directive tip",children:[(0,d.jsx)(e.div,{className:"modern-directive-title",children:"提示"}),(0,d.jsx)(e.div,{className:"modern-directive-content",children:(0,d.jsxs)(e.p,{children:["当配置文件 ",(0,d.jsx)(e.code,{children:"modern.config.ts"})," 中没有 ",(0,d.jsx)(e.code,{children:"nav"})," 和 ",(0,d.jsx)(e.code,{children:"sidebar"})," 配置的情况下，自动化导航栏/侧边栏才会生效。\n"]})})]}),"\n",(0,d.jsxs)(e.h2,{id:"基础概念",children:["基础概念",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#基础概念",children:"#"})]}),"\n",(0,d.jsxs)(e.p,{children:["首先，",(0,d.jsx)(e.code,{children:"_meta.json"})," 可以分为两类：导航栏级别和侧边栏级别。两者的区别在于，导航级别的 ",(0,d.jsx)(e.code,{children:"_meta.json"})," 位于文档根目录中，而侧边栏级别的 ",(0,d.jsx)(e.code,{children:"_meta.json"})," 位于文档根目录的子目录中。比如:"]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-js",children:"docs\n├── _meta.json // 导航栏级别\n└── guides\n    ├── _meta.json // 侧边栏级别\n    ├── introduction.mdx\n    └── advanced\n        ├── _meta.json // 侧边栏级别\n        └── plugin-development.md\n"})}),"\n",(0,d.jsxs)(e.p,{children:["如果你的文档使用了国际化，那么导航栏级别的 ",(0,d.jsx)(e.code,{children:"_meta.json"})," 会放置在对应语言目录下，比如："]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-js",children:"docs\n├── en\n│   ├── _meta.json // 导航栏级别\n│   └── guides\n│       ├── _meta.json // 侧边栏级别\n│       ├── introduction.mdx\n│       ├── install.mdx\n│       └── advanced\n│           ├── _meta.json // 侧边栏级别\n│           └── plugin-development.md\n└── zh\n    ├── _meta.json // 导航栏级别\n    └── guides\n        ├── _meta.json // 侧边栏级别\n        ├── introduction.mdx\n        ├── install.mdx\n        └── advanced\n            ├── _meta.json // 侧边栏级别\n            └── plugin-development.md\n"})}),"\n",(0,d.jsxs)(e.h2,{id:"导航栏级别配置",children:["导航栏级别配置",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#导航栏级别配置",children:"#"})]}),"\n",(0,d.jsxs)(e.p,{children:["在导航栏级别的情况中，你可以在 ",(0,d.jsx)(e.code,{children:"_meta.json"})," 中填入一个数组，其类型跟默认主题的 nav 配置完全一致，详情可以参考",(0,d.jsx)(e.a,{href:"/api/config/config-theme#nav",children:"nav 配置"}),"。比如:"]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-json",children:'[\n  {\n    "text": "Guide",\n    "link": "/guides/introduction",\n    "activeMatch": "^/guides/"\n  }\n]\n'})}),"\n",(0,d.jsxs)(e.h2,{id:"侧边栏级别配置",children:["侧边栏级别配置",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#侧边栏级别配置",children:"#"})]}),"\n",(0,d.jsxs)(e.p,{children:["在侧边栏级别的情况中，你可以在 ",(0,d.jsx)(e.code,{children:"_meta.json"})," 中填入一个数组，数组每一项的类型如下:"]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-ts",children:"export type SideMetaItem =\n  | string\n  | {\n      type: 'file';\n      name: string;\n      label?: string;\n    }\n  | {\n      type: 'dir';\n      name: string;\n      label?: string;\n      collapsible?: boolean;\n      collapsed?: boolean;\n    };\n"})}),"\n",(0,d.jsxs)(e.h3,{id:"string",children:["string",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#string",children:"#"})]}),"\n",(0,d.jsxs)(e.p,{children:["当类型为 ",(0,d.jsx)(e.code,{children:"string"})," 时，表示该项是一个文件，文件名为该字符串，比如:"]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-json",children:'["introduction"]\n'})}),"\n",(0,d.jsxs)(e.p,{children:["其中文件名可以带后缀，也可以不带后缀，比如 ",(0,d.jsx)(e.code,{children:"introduction"})," 会被解析为 ",(0,d.jsx)(e.code,{children:"introduction.mdx"}),"。"]}),"\n",(0,d.jsxs)(e.h3,{id:"obejct",children:["obejct",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#obejct",children:"#"})]}),"\n",(0,d.jsx)(e.p,{children:"当类型为对象形式时，你可以描述为一个文件、目录或者自定义链接。"}),"\n",(0,d.jsxs)(e.p,{children:["在描述",(0,d.jsx)(e.strong,{children:"文件"}),"的情况下，类型如下:"]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-ts",children:"{\n  type: 'file';\n  name: string;\n  label?: string;\n}\n"})}),"\n",(0,d.jsxs)(e.p,{children:["其中，",(0,d.jsx)(e.code,{children:"name"})," 表示文件名，同时支持",(0,d.jsx)(e.code,{children:"带"}),"/",(0,d.jsx)(e.code,{children:"不带"}),"后缀，",(0,d.jsx)(e.code,{children:"label"})," 表示该文件在侧边栏中的显示名称，为可选值，如果未填则会自动取文档中的 h1 标题。比如:"]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-json",children:'{\n  "type": "file",\n  "name": "introduction",\n  "label": "Introduction"\n}\n'})}),"\n",(0,d.jsxs)(e.p,{children:["在描述",(0,d.jsx)(e.strong,{children:"目录"}),"的情况下，类型如下:"]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-ts",children:"{\n  type: 'dir';\n  name: string;\n  label: string;\n  collapsible?: boolean;\n  collapsed?: boolean;\n}\n"})}),"\n",(0,d.jsxs)(e.p,{children:["其中，",(0,d.jsx)(e.code,{children:"name"})," 表示目录名，",(0,d.jsx)(e.code,{children:"label"})," 表示该目录在侧边栏中的显示名称，",(0,d.jsx)(e.code,{children:"collapsible"})," 表示该目录是否可以折叠，",(0,d.jsx)(e.code,{children:"collapsed"})," 表示该目录是否默认折叠，比如:"]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-json",children:'{\n  "type": "dir",\n  "name": "advanced",\n  "label": "Advanced",\n  "collapsible": true,\n  "collapsed": false\n}\n'})}),"\n",(0,d.jsxs)(e.p,{children:["在描述",(0,d.jsx)(e.strong,{children:"自定义链接"}),"的情况下，类型如下:"]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-ts",children:"{\n  type: 'custom-link';\n  label: string;\n  link: string;\n}\n"})}),"\n",(0,d.jsxs)(e.p,{children:["其中，",(0,d.jsx)(e.code,{children:"label"})," 表示该链接在侧边栏中的显示名称，",(0,d.jsx)(e.code,{children:"link"})," 表示该链接的跳转地址，比如:"]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-json",children:'{\n  "type": "custom-link",\n  "label": "My Link",\n  "link": "/my-link"\n}\n'})}),"\n",(0,d.jsxs)(e.p,{children:[(0,d.jsx)(e.code,{children:"link"})," 支持外部链接，比如:"]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-json",children:'{\n  "type": "custom-link",\n  "link": "https://github.com",\n  "label": "GitHub"\n}\n'})}),"\n",(0,d.jsxs)(e.h3,{id:"完整示例",children:["完整示例",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#完整示例",children:"#"})]}),"\n",(0,d.jsx)(e.p,{children:"下面是一个完整的示例，用到了上述的三种类型:"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-json",children:'[\n  "install",\n  {\n    "type": "file",\n    "name": "introduction",\n    "label": "Introduction"\n  },\n  {\n    "type": "dir",\n    "name": "advanced",\n    "label": "Advanced",\n    "collapsible": true,\n    "collapsed": false\n  },\n  {\n    "type": "custom-link",\n    "label": "My Link",\n    "link": "/my-link"\n  }\n]\n'})})]})}var t=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=Object.assign({},(0,i.useMDXComponents)(),n.components).wrapper;return e?(0,d.jsx)(e,Object.assign({},n,{children:(0,d.jsx)(a,n)})):a(n)}}}]);