(self.webpackChunk_modern_js_main_doc=self.webpackChunk_modern_js_main_doc||[]).push([["docs_zh_apis_monorepo_commands_lint_mdx"],{43716:function(n,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});!function(n,e){for(var i in e)Object.defineProperty(n,i,{enumerable:!0,get:e[i]})}(e,{frontmatter:function(){return o},title:function(){return t},toc:function(){return c},default:function(){return d}});var r=i("9880"),s=i("23169"),o={sidebar_position:6},t="lint",c=[];function l(n){var e=Object.assign({h1:"h1",a:"a",pre:"pre",code:"code",p:"p",ul:"ul",li:"li"},(0,s.useMDXComponents)(),n.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(e.h1,{id:"lint",children:["lint",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#lint",children:"#"})]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"Usage: modern lint [options] [...files]\n\nlint and fix source files\n\nOptions:\n  --no-fix    disable auto fix source file\n  -h, --help  display help for command\n"})}),"\n",(0,r.jsxs)(e.p,{children:["运行 ",(0,r.jsx)(e.code,{children:"ESLint"})," 检查 monorepo 中代码语法情况， 通长情况下，我们只需要在 ",(0,r.jsx)(e.code,{children:"git commit"})," 阶段通过 ",(0,r.jsx)(e.code,{children:"lint-staged"})," 检查本次提交修改的部分代码。"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"--no-fix"})," 参数设置后可以关闭自动修复 lint 错误代码的能力。"]}),"\n"]})]})}var d=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=Object.assign({},(0,s.useMDXComponents)(),n.components).wrapper;return e?(0,r.jsx)(e,Object.assign({},n,{children:(0,r.jsx)(l,n)})):l(n)}}}]);