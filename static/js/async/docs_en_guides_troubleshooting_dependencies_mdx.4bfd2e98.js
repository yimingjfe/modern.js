(self.webpackChunk_modern_js_main_doc=self.webpackChunk_modern_js_main_doc||[]).push([["docs_en_guides_troubleshooting_dependencies_mdx"],{1374:function(e,n,r){"use strict";Object.defineProperty(n,"__esModule",{value:!0});!function(e,n){for(var r in n)Object.defineProperty(e,r,{enumerable:!0,get:n[r]})}(n,{frontmatter:function(){return i},title:function(){return o},toc:function(){return a},default:function(){return c}});var t=r("9880"),s=r("23169"),i={sidebar_position:1},o="Dependencies FAQ",a=[{text:"How to check the actual installed version of a dependency in the project?",depth:3,id:"how-to-check-the-actual-installed-version-of-a-dependency-in-the-project?"},{text:'Getting "The engine "node" is incompatible" error during dependency installation?',depth:3,id:'getting-"the-engine-"node"-is-incompatible"-error-during-dependency-installation?'},{text:"Getting a ReactNode type error after upgrading dependencies?",depth:3,id:"getting-a-reactnode-type-error-after-upgrading-dependencies?"},{text:"Getting peer dependencies warnings in the console after running pnpm install?",depth:3,id:"getting-peer-dependencies-warnings-in-the-console-after-running-pnpm-install?"},{text:"What is the minimum supported version of React for the Modern.js framework?",depth:3,id:"what-is-the-minimum-supported-version-of-react-for-the-modernjs-framework?"}];function d(e){var n=Object.assign({h1:"h1",a:"a",h3:"h3",p:"p",code:"code",strong:"strong",pre:"pre",hr:"hr",ul:"ul",li:"li"},(0,s.useMDXComponents)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h1,{id:"dependencies-faq",children:["Dependencies FAQ",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#dependencies-faq",children:"#"})]}),"\n",(0,t.jsxs)(n.h3,{id:"how-to-check-the-actual-installed-version-of-a-dependency-in-the-project?",children:["How to check the actual installed version of a dependency in the project?",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#how-to-check-the-actual-installed-version-of-a-dependency-in-the-project?",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["You can use the ",(0,t.jsx)(n.code,{children:"ls"})," command provided by the package manager to view the version of the dependency in the project."]}),"\n",(0,t.jsx)(n.p,{children:"Here are some basic examples. For detailed usage, please refer to the documentation of each package manager."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"npm / yarn"})}),"\n",(0,t.jsxs)(n.p,{children:["For projects using npm or yarn, you can use the ",(0,t.jsx)(n.code,{children:"npm ls"})," command."]}),"\n",(0,t.jsxs)(n.p,{children:["For example, running ",(0,t.jsx)(n.code,{children:"npm ls @modern-js/core"})," will show the following result:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"project\n└─┬ @modern-js/app-tools@2.0.0\n  └── @modern-js/core@2.0.0\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"pnpm"})}),"\n",(0,t.jsxs)(n.p,{children:["For projects using pnpm, you can use the ",(0,t.jsx)(n.code,{children:"pnpm ls"})," command."]}),"\n",(0,t.jsxs)(n.p,{children:["For example, running ",(0,t.jsx)(n.code,{children:"pnpm ls @modern-js/core --depth Infinity"})," will show the following result:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"devDependencies:\n@modern-js/app-tools 2.0.0\n└── @modern-js/core 2.0.0\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h3,{id:'getting-\\"the-engine-\\"node\\"-is-incompatible\\"-error-during-dependency-installation?',children:['Getting "The engine "node" is incompatible" error during dependency installation?',(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:'#getting-\\"the-engine-\\"node\\"-is-incompatible\\"-error-during-dependency-installation?',children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"If you encounter the following error message during dependency installation, it means that the current environment is using a Node.js version that is too low, and you need to upgrade Node.js to a higher version."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'The engine "node" is incompatible with this module.\n\nExpected version ">=14.17.6". Got "12.20.1"\n'})}),"\n",(0,t.jsxs)(n.p,{children:["When using Modern.js, it is recommended to use the latest version of ",(0,t.jsx)(n.a,{href:"https://nodejs.org/download/release/latest-v14.x/",target:"_blank",rel:"noopener noreferrer",children:"Node.js 14.x"})," or ",(0,t.jsx)(n.a,{href:"https://nodejs.org/download/release/latest-v16.x/",target:"_blank",rel:"noopener noreferrer",children:"Node.js 16.x"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["If the Node.js version of the current environment is lower than the above requirement, you can use tools such as ",(0,t.jsx)(n.a,{href:"https://github.com/nvm-sh/nvm",target:"_blank",rel:"noopener noreferrer",children:"nvm"})," or ",(0,t.jsx)(n.a,{href:"https://github.com/Schniz/fnm",target:"_blank",rel:"noopener noreferrer",children:"fnm"})," to switch versions."]}),"\n",(0,t.jsx)(n.p,{children:"Here is an example of using nvm:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"# Install Node.js v14\nnvm install 14\n\n# Switch to Node 14\nnvm use 14\n\n# Set Node 14 as the default version\nnvm default 14\n"})}),"\n",(0,t.jsxs)(n.p,{children:["For local development environments, it is recommended to use ",(0,t.jsx)(n.a,{href:"https://github.com/Schniz/fnm",target:"_blank",rel:"noopener noreferrer",children:"fnm"}),", which has better performance than nvm and has similar usage."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h3,{id:"getting-a-reactnode-type-error-after-upgrading-dependencies?",children:["Getting a ReactNode type error after upgrading dependencies?",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#getting-a-reactnode-type-error-after-upgrading-dependencies?",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["After upgrading the dependencies of the project, if the following type error occurs, it means that the wrong version of ",(0,t.jsx)(n.code,{children:"@types/react"})," is installed in the project."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"The types returned by 'render()' are incompatible between these types.\nType 'React.ReactNode' is not assignable to type 'import(\"/node_modules/@types/react/index\").ReactNode'.\nType '{}' is not assignable to type 'ReactNode'.\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The reason for this problem is that the ReactNode type definition in React 18 is different from that in React 16/17. If there are multiple different versions of ",(0,t.jsx)(n.code,{children:"@types/react"})," in the project, a ReactNode type conflict will occur, resulting in the above error."]}),"\n",(0,t.jsxs)(n.p,{children:["The solution is to lock the ",(0,t.jsx)(n.code,{children:"@types/react"})," and ",(0,t.jsx)(n.code,{children:"@types/react-dom"})," in the project to a unified version, such as ",(0,t.jsx)(n.code,{children:"v17"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "@types/react": "^17",\n  "@types/react-dom": "^17"\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["For methods of locking dependency versions, please refer to ",(0,t.jsx)(n.a,{href:"/guides/get-started/upgrade#lock-nested-dependency",children:"Lock nested dependency"}),"."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h3,{id:"getting-peer-dependencies-warnings-in-the-console-after-running-pnpm-install?",children:["Getting peer dependencies warnings in the console after running ",(0,t.jsx)(n.code,{children:"pnpm install"}),"?",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#getting-peer-dependencies-warnings-in-the-console-after-running-pnpm-install?",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"The reason for this warning is that the version range of peer dependencies declared by some third-party npm packages is inconsistent with the version range installed in Modern.js."}),"\n",(0,t.jsx)(n.p,{children:"In most cases, peer dependencies warnings will not affect the project operation and do not need to be processed separately. Please ignore the relevant warnings."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h3,{id:"what-is-the-minimum-supported-version-of-react-for-the-modernjs-framework?",children:["What is the minimum supported version of React for the Modern.js framework?",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#what-is-the-minimum-supported-version-of-react-for-the-modernjs-framework?",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"The recommended React version for the Modern.js framework is >= 18.0.0"}),", and different functions have different requirements for the React version."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"If you are using React 17, some framework functions will not be available, such as Steaming SSR, because it relies on new features provided by React 18."}),"\n",(0,t.jsx)(n.li,{children:"If you are still using React 16, you will not be able to use Modern.js's runtime or server-side capabilities. You can consider using the build mode of Modern.js, that is, only using Modern.js's build capabilities. In this case, React 16 can still be used."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"In future major versions of Modern.js, we will gradually remove support for React 16 and React 17. Therefore, please upgrade to React 18 or higher as soon as possible."})]})}var c=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,s.useMDXComponents)(),e.components).wrapper;return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(d,e)})):d(e)}}}]);