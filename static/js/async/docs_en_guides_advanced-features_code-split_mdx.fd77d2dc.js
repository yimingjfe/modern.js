(self.webpackChunk_modern_js_main_doc=self.webpackChunk_modern_js_main_doc||[]).push([["docs_en_guides_advanced-features_code-split_mdx"],{94661:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});!function(e,n){for(var t in n)Object.defineProperty(e,t,{enumerable:!0,get:n[t]})}(n,{frontmatter:function(){return r},title:function(){return s},toc:function(){return d},default:function(){return c}});var i=t("9880"),o=t("23169"),r={title:"Code Split",sidebar_position:6},s="Code Splitting",d=[{text:"import",depth:2,id:"import"},{text:"React.lazy",depth:2,id:"reactlazy"},{text:"Loadable",depth:2,id:"loadable"}];function a(e){var n=Object.assign({h1:"h1",a:"a",p:"p",div:"div",ul:"ul",li:"li",code:"code",h2:"h2",pre:"pre"},(0,o.useMDXComponents)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h1,{id:"code-splitting",children:["Code Splitting",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#code-splitting",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"Code splitting is a common way to optimize frontend resource loading. This article will introduce the three types of code splitting supported by Modern.js:"}),"\n",(0,i.jsxs)(n.div,{className:"modern-directive info",children:[(0,i.jsx)(n.div,{className:"modern-directive-title",children:"INFO"}),(0,i.jsx)(n.div,{className:"modern-directive-content",children:(0,i.jsxs)(n.p,{children:["When using Modern.js ",(0,i.jsx)(n.a,{href:"/guides/basic-features/routes#conventional-routing",children:"Conventional routing"}),". By default, code splitting is done according to the routing component, so you don't need to do it yourself.\n"]})})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"import"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"React.lazy"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"loadable"})}),"\n"]}),"\n",(0,i.jsxs)(n.h2,{id:"import",children:["import",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#import",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["use dynamic ",(0,i.jsx)(n.code,{children:"import()"}),", the JS modules pass to this API will be packaged as a separate JS file, for example:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"import('./math').then(math => {\n  console.log(math.add(16, 26));\n});\n"})}),"\n",(0,i.jsxs)(n.h2,{id:"reactlazy",children:["React.lazy",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#reactlazy",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"The officially way provides by React to split component code."}),"\n",(0,i.jsxs)(n.div,{className:"modern-directive caution",children:[(0,i.jsx)(n.div,{className:"modern-directive-title",children:"CAUTION"}),(0,i.jsxs)(n.div,{className:"modern-directive-content",children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"React.lazy"})," is typically used in together with ",(0,i.jsx)(n.code,{children:"<Suspense>"}),", hence it is only available in CSR or React 18 Streaming SSR."]}),"\n",(0,i.jsxs)(n.p,{children:["For projects that use Traditional SSR（renderToString）, ",(0,i.jsx)(n.code,{children:"React.lazy"})," is not supported. Please use the Loadable API instead.\n"]})]})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"import React, { Suspense } from 'react';\n\nconst OtherComponent = React.lazy(() => import('./OtherComponent'));\nconst AnotherComponent = React.lazy(() => import('./AnotherComponent'));\n\nfunction MyComponent() {\n  return (\n    <div>\n      <Suspense fallback={<div>Loading...</div>}>\n        <section>\n          <OtherComponent />\n          <AnotherComponent />\n        </section>\n      </Suspense>\n    </div>\n  );\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["For details, see ",(0,i.jsx)(n.a,{href:"https://reactjs.org/docs/code-splitting.html#reactlazy",target:"_blank",rel:"noopener noreferrer",children:"React lazy"}),"."]}),"\n",(0,i.jsxs)(n.h2,{id:"loadable",children:["Loadable",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#loadable",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["In Modern.js, you can use the Loadable API, which is exported from ",(0,i.jsx)(n.code,{children:"@modern-js/runtime/loadable"}),". Here's an example:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"import loadable from '@modern-js/runtime/loadable';\n\nconst OtherComponent = loadable(() => import('./OtherComponent'));\n\nfunction MyComponent() {\n  return <OtherComponent />;\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["With the out-of-the-box support of ",(0,i.jsx)(n.code,{children:"loadable"})," in SSR by Modern.js, you no longer need to add Babel plugins or inject scripts into HTML during SSR."]}),"\n",(0,i.jsxs)(n.p,{children:["However, it's important to note that any Loadable API in SSR does not support the use of ",(0,i.jsx)(n.code,{children:"<Suspense>"}),"."]}),"\n",(0,i.jsxs)(n.div,{className:"modern-directive info",children:[(0,i.jsx)(n.div,{className:"modern-directive-title",children:"INFO"}),(0,i.jsx)(n.div,{className:"modern-directive-content",children:(0,i.jsxs)(n.p,{children:["If you want to use ",(0,i.jsx)(n.code,{children:"<Suspense>"})," in CSR projects with React 17 and below, you can substitute ",(0,i.jsx)(n.code,{children:"React.lazy"})," with ",(0,i.jsx)(n.code,{children:"loadable.lazy"}),".\n"]})})]}),"\n",(0,i.jsxs)(n.p,{children:["For details, see ",(0,i.jsx)(n.a,{href:"/apis/app/runtime/utility/loadable",children:"Loadable API"}),"."]})]})}var c=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,o.useMDXComponents)(),e.components).wrapper;return n?(0,i.jsx)(n,Object.assign({},e,{children:(0,i.jsx)(a,e)})):a(e)}}}]);