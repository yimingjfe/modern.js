(self.webpackChunk_modern_js_main_doc=self.webpackChunk_modern_js_main_doc||[]).push([["docs_zh_configure_app_deploy_microFrontend_mdx"],{16714:function(e,n,r){"use strict";Object.defineProperty(n,"__esModule",{value:!0});!function(e,n){for(var r in n)Object.defineProperty(e,r,{enumerable:!0,get:n[r]})}(n,{frontmatter:function(){return c},title:function(){return i},toc:function(){return l},default:function(){return a}});var d=r("9880"),s=r("23169"),c={sidebar_label:"microFrontend"},i="deploy.microFrontend",l=[{text:"示例",depth:2,id:"示例"},{text:"配置项",depth:2,id:"配置项"},{text:"enableHtmlEntry",depth:3,id:"enablehtmlentry"},{text:"externalBasicLibrary",depth:3,id:"externalbasiclibrary"}];function t(e){var n=Object.assign({h1:"h1",a:"a",ul:"ul",li:"li",strong:"strong",code:"code",pre:"pre",p:"p",div:"div",h2:"h2",h3:"h3"},(0,s.useMDXComponents)(),e.components);return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsxs)(n.h1,{id:"deploymicrofrontend",children:["deploy.microFrontend",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#deploymicrofrontend",children:"#"})]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"类型："})," ",(0,d.jsx)(n.code,{children:"object"})]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"默认值："})," ",(0,d.jsx)(n.code,{children:"{ enableHtmlEntry: true, externalBasicLibrary: false }"})]}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"interface MicroFrontend {\n  enableHtmlEntry?: boolean;\n  externalBasicLibrary?: boolean;\n  moduleApp?: string;\n}\n"})}),"\n",(0,d.jsxs)(n.p,{children:["开发者可使用 ",(0,d.jsx)(n.code,{children:"deploy.microFrontend"})," 属性来配置微前端子应用的信息。"]}),"\n",(0,d.jsxs)(n.div,{className:"modern-directive caution",children:[(0,d.jsx)(n.div,{className:"modern-directive-title",children:"注意"}),(0,d.jsxs)(n.div,{className:"modern-directive-content",children:[(0,d.jsxs)(n.p,{children:["需要先通过 ",(0,d.jsx)(n.code,{children:"pnpm run new"})," 启用「微前端」 功能。"]}),"\n"]})]}),"\n",(0,d.jsxs)(n.h2,{id:"示例",children:["示例",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#示例",children:"#"})]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"export default defineConfig({\n  deploy: {\n    microFrontend: {\n      enableHtmlEntry: true,\n    },\n  },\n});\n"})}),"\n",(0,d.jsxs)(n.h2,{id:"配置项",children:["配置项",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#配置项",children:"#"})]}),"\n",(0,d.jsxs)(n.h3,{id:"enablehtmlentry",children:["enableHtmlEntry",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#enablehtmlentry",children:"#"})]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"类型："})," ",(0,d.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"默认值："})," ",(0,d.jsx)(n.code,{children:"true"})]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["是否启用 html 入口的功能，默认为 ",(0,d.jsx)(n.code,{children:"true"}),"，将子应用构建成 ",(0,d.jsx)(n.code,{children:"HTML"})," 模式，Garfish 支持了 ",(0,d.jsx)(n.code,{children:"html"})," 入口，可以开启开选项，体验对应功能，为 HTML 入口时直接将子应用 entry 指向子应用的 html 即可。"]}),"\n",(0,d.jsxs)(n.p,{children:["可以通过设置为 ",(0,d.jsx)(n.code,{children:"false"}),", 表明子应用构建为 ",(0,d.jsx)(n.code,{children:"js"}),"，构建为 ",(0,d.jsx)(n.code,{children:"js"})," 后子应用无法独立运行，为 ",(0,d.jsx)(n.code,{children:"JS"})," 入口时将子应用的入口文件指向子应用的 ",(0,d.jsx)(n.code,{children:"JS"})]}),"\n",(0,d.jsxs)(n.h3,{id:"externalbasiclibrary",children:["externalBasicLibrary",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#externalbasiclibrary",children:"#"})]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"类型："})," ",(0,d.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"默认值："})," ",(0,d.jsx)(n.code,{children:"false"})]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["是否 ",(0,d.jsx)(n.code,{children:"external"})," 基础库，当设置为 ",(0,d.jsx)(n.code,{children:"true"})," 时，当前子应用将会 ",(0,d.jsx)(n.code,{children:"external"}),"：",(0,d.jsx)(n.code,{children:"react"}),"、",(0,d.jsx)(n.code,{children:"react-dom"}),"，",(0,d.jsx)(n.code,{children:"EdenX"})," 主应用会自动 ",(0,d.jsx)(n.code,{children:"setExternal"})," 这两个基础库，如果其他类型的框架请通过 ",(0,d.jsx)(n.code,{children:"Garfish.setExternal"})," 增加 ",(0,d.jsx)(n.code,{children:"react"}),"、",(0,d.jsx)(n.code,{children:"react-dom"})," 依赖"]})]})}var a=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,s.useMDXComponents)(),e.components).wrapper;return n?(0,d.jsx)(n,Object.assign({},e,{children:(0,d.jsx)(t,e)})):t(e)}}}]);